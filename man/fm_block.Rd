% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluator.R
\name{fm_block}
\alias{fm_block}
\alias{fm_block_weights}
\alias{fm_block_log_weights}
\alias{fm_block_log_shift}
\title{Blockwise aggregation matrices}
\usage{
fm_block(
  block = NULL,
  weights = NULL,
  log_weights = NULL,
  rescale = FALSE,
  n_block = NULL,
  ...
)

fm_block_weights(
  block = NULL,
  weights = NULL,
  log_weights = NULL,
  n_block = NULL,
  rescale = FALSE
)

fm_block_log_weights(
  block = NULL,
  weights = NULL,
  log_weights = NULL,
  n_block = NULL,
  rescale = FALSE
)

fm_block_log_shift(block = NULL, log_weights = NULL, n_block = NULL)
}
\arguments{
\item{block}{integer vector; block information. If \code{NULL},
\code{rep(1L, block_len)} is used, where \code{block_len} is determined by
\verb{length(log_weights)))} or \verb{length(weights)))}.A single scalar is also repeated
to a vector of corresponding length to the weights.}

\item{weights}{Optional weight vector}

\item{log_weights}{Optional \code{log(weights)} vector. Overrides \code{weights} when
non-NULL.}

\item{rescale}{logical; If \code{TRUE}, normalise the weights by \code{sum(weights)}
or \code{sum(exp(log_weights))} within each block.
Default: \code{FALSE}}

\item{n_block}{integer; The number of conceptual blocks. Only needs to be
specified if it's larger than \code{max(block)}.}
}
\description{
Creates an aggregation matrix for blockwise aggregation, with optional
weighting.
}
\section{Functions}{
\itemize{
\item \code{fm_block()}: A (sparse) matrix of size \code{n_block} times \code{length(block)}.

\item \code{fm_block_weights()}: Computes (optionally) blockwise renormalised weights

\item \code{fm_block_log_weights()}: Computes (optionally) blockwise renormalised log-weights

\item \code{fm_block_log_shift()}: Computes shifts for stable blocked log-sum-exp.
To compute \eqn{\log(\sum_{i; \text{block}_i=k} \exp(v_i) w_i)}{
log(sum_(i;block_i=k) exp(v_i) w_i)
} for
each block \code{k}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{w_values <- values + fm_block_log_weights(block, log_weights)
shift <- fm_block_log_shift(block, w_values)
agg <- aggregate(exp(w_values - shift[block]),
                 by = list(block = block),
                 \\(x) log(sum(x)))
agg$x <- agg$x + shift[agg$block]
}\if{html}{\out{</div>}}

}}
\examples{
fm_block(c(1, 1, 1, 2, 2))
fm_block(c(1, 1, 1, 2, 2), rescale = TRUE)
fm_block(c(1, 1, 1, 2, 2), log_weights = -2:2, rescale = TRUE)
}
