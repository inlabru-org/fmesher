% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mesh.R
\name{fm_mesh_2d}
\alias{fm_mesh_2d}
\alias{fm_mesh_2d_inla}
\title{Make a 2D mesh object}
\usage{
fm_mesh_2d(...)

fm_mesh_2d_inla(
  loc = NULL,
  loc.domain = NULL,
  offset = NULL,
  n = NULL,
  boundary = NULL,
  interior = NULL,
  max.edge = NULL,
  min.angle = NULL,
  cutoff = 1e-12,
  max.n.strict = NULL,
  max.n = NULL,
  plot.delay = NULL,
  crs = NULL,
  ...
)
}
\arguments{
\item{...}{Currently passed on to \code{fm_mesh_2d_inla}}

\item{loc}{Matrix of point locations to be used as initial triangulation
nodes.  Can alternatively be a \code{SpatialPoints} or
\code{SpatialPointsDataFrame} object.}

\item{loc.domain}{Matrix of point locations used to determine the domain
extent.  Can alternatively be a \code{SpatialPoints} or
\code{SpatialPointsDataFrame} object.}

\item{offset}{The automatic extension distance.  One or two values, for an
inner and an optional outer extension.  If negative, interpreted as a factor
relative to the approximate data diameter (default=-0.10???)}

\item{n}{The number of initial nodes in the automatic extensions
(default=16)}

\item{boundary}{one or more (as list) of \code{\link[=fm_segm]{fm_segm()}} objects, or objects
supported by \code{\link[=fm_as_segm]{fm_as_segm()}}}

\item{interior}{one object supported by \code{\link[=fm_as_segm]{fm_as_segm()}}}

\item{max.edge}{The largest allowed triangle edge length.  One or two
values.}

\item{min.angle}{The smallest allowed triangle angle.  One or two values.
(Default=21)}

\item{cutoff}{The minimum allowed distance between points.  Point at most as
far apart as this are replaced by a single vertex prior to the mesh
refinement step.}

\item{max.n.strict}{The maximum number of vertices allowed, overriding
\code{min.angle} and \code{max.edge} (default=-1, meaning no limit).  One or
two values, where the second value gives the number of additional vertices
allowed for the extension.}

\item{max.n}{The maximum number of vertices allowed, overriding
\code{max.edge} only (default=-1, meaning no limit).  One or two values,
where the second value gives the number of additional vertices allowed for
the extension.}

\item{plot.delay}{On Linux (and Mac if appropriate X11 libraries are
installed), specifying a nonnegative numeric value activates a rudimentary
plotting system in the underlying \code{fmesher} program, showing the
triangulation algorithm at work, with waiting time factor \code{plot.delay}
between each step.

On all systems, specifying any negative value activates displaying the
result after each step of the multi-step domain extension algorithm.}

\item{crs}{An optional \code{\link[=fm_crs]{fm_crs()}}, \code{sf::crs} or \code{sp::CRS} object}
}
\value{
An \code{inla.mesh} object.
}
\description{
Make a 2D mesh object
}
\section{Functions}{
\itemize{
\item \code{fm_mesh_2d_inla()}: Legacy method for \code{INLA::inla.mesh.2d()}
Create a triangle mesh based on initial point locations, specified or
automatic boundaries, and mesh quality parameters.

}}
\seealso{
\code{\link[=fm_rcdt_2d]{fm_rcdt_2d()}}, \code{\link[=fm_mesh_2d]{fm_mesh_2d()}}, \code{\link[=fm_delaunay_2d]{fm_delaunay_2d()}},
\code{\link[=fm_nonconvex_hull]{fm_nonconvex_hull()}}, \code{\link[=fm_extensions]{fm_extensions()}}, \code{\link[=fm_refine]{fm_refine()}}

Other object creation and conversion: 
\code{\link{fm_as_fm}()},
\code{\link{fm_as_lattice_2d}()},
\code{\link{fm_as_mesh_1d}()},
\code{\link{fm_as_mesh_2d}()},
\code{\link{fm_as_segm}()},
\code{\link{fm_as_sfc}()},
\code{\link{fm_as_tensor}()},
\code{\link{fm_lattice_2d}()},
\code{\link{fm_mesh_1d}()},
\code{\link{fm_segm}()},
\code{\link{fm_tensor}()}
}
\author{
Finn Lindgren \email{finn.lindgren@gmail.com}
}
\concept{object creation and conversion}
