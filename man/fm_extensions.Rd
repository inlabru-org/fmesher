% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mesh.R
\name{fm_extensions}
\alias{fm_extensions}
\title{Compute extensions of a spatial object}
\usage{
fm_extensions(x, convex = -0.15, concave = convex, dTolerance = NULL, ...)
}
\arguments{
\item{x}{A spatial object}

\item{convex}{numeric vector; How much to extend}

\item{concave}{numeric vector; The minimum allowed reentrant curvature. Default equal to \code{convex}}

\item{dTolerance}{If not null, the \code{dTolerance} argument to \code{sf::st_simplify()},
passed on to \code{\link[=fm_nonconvex_hull]{fm_nonconvex_hull()}}.
The default is \code{pmin(convex, concave) / 40}, chosen to
give approximately 4 or more subsegments per circular quadrant.}

\item{...}{Optional further arguments to pass on to \code{\link[=fm_nonconvex_hull]{fm_nonconvex_hull()}}.}
}
\value{
A list of \code{sfg} objects.
}
\description{
Constructs a potentially nonconvex extension of a spatial object by
performing dilation by \code{convex + concave} followed by
erosion by \code{concave}. This is equivalent to dilation by \code{convex} followed
by closing (dilation + erosion) by \code{concave}.
}
\examples{
if (fm_safe_inla()) {
  inp <- sf::st_as_sf(as.data.frame(matrix(1:6, 3, 2)), coords = 1:2)
  out <- fm_extensions(inp, convex = c(0.75, 2))
  bnd <- fm_as_segm(out)
  plot(INLA::inla.mesh.2d(boundary = bnd, max.edge = c(0.25, 1)), asp = 1)
}

}
\seealso{
\code{\link[=fm_nonconvex_hull]{fm_nonconvex_hull()}}
}
