% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mesh.R
\name{fm_pixels}
\alias{fm_pixels}
\title{Generate lattice points covering a mesh}
\usage{
fm_pixels(mesh, nx = 150, ny = 150, mask = TRUE, format = "sf")
}
\arguments{
\item{mesh}{An \code{inla.mesh} object}

\item{nx}{Number of pixels in x direction}

\item{ny}{Number of pixels in y direction}

\item{mask}{If logical and TRUE, remove pixels that are outside the mesh.
If \code{mask} is an \code{sf} or \code{Spatial} object, only return pixels covered by this object.}

\item{format}{character; "sf", "terra" or "sp"}
}
\value{
\code{sf}, \code{SpatRaster}, or \code{SpatialPixelsDataFrame} covering the mesh
}
\description{
Generate \code{terra}, \code{sf}, or \code{sp} lattice locations
}
\examples{
if (require("ggplot2", quietly = TRUE) &&
  require("tidyterra", quietly = TRUE)) {
  pxl <- fm_pixels(fmexample$mesh,
    nx = 50, ny = 50, mask = fmexample$boundary_sf[[1]],
    format = "terra"
  )
  pxl$val <- rnorm(NROW(pxl) * NCOL(pxl))
  pxl <-
    terra::mask(
      pxl,
      mask = pxl$.mask,
      maskvalues = c(FALSE, NA),
      updatevalue = NA
    )
  ggplot() +
    geom_spatraster(data = pxl, aes(fill = val)) +
    geom_sf(data = fm_as_sfc(fmexample$mesh), alpha = 0.2)
}
}
\author{
Fabian E. Bachl \email{bachlfab@gmail.com} and
Finn Lindgren \email{finn.lindgren@gmail.com}
}
