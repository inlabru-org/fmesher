[{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Finn Lindgren. Author, maintainer, copyright holder.            Finn Lindgren wrote main code Seaton Andy. Contributor, copyright holder.            Andy Seaton developed sf support","code":""},{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lindgren F (2023). fmesher: Triangle Meshes Geometry Tools. R package version 0.0.9.9002, https://inlabru-org.github.io/fmesher/.","code":"@Manual{,   title = {fmesher: Triangle Meshes and Other Geometry Tools},   author = {Finn Lindgren},   year = {2023},   note = {R package version 0.0.9.9002},   url = {https://inlabru-org.github.io/fmesher/}, }"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"fmesher","dir":"","previous_headings":"","what":"Triangle Meshes and Other Geometry Tools","title":"Triangle Meshes and Other Geometry Tools","text":"fmesher: Triangle Meshes Geometry Tools","code":""},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Triangle Meshes and Other Geometry Tools","text":"can install latest stable release fmesher GitHub: development version :","code":"# install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\", ref = \"stable\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\")"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Triangle Meshes and Other Geometry Tools","text":"","code":"library(fmesher) #> Loading required package: Matrix # longlat for a spherical version of the Earth print(fm_crs(\"longlat_globe\")) #> Coordinate Reference System: #>   User input: GEOGCRS[\"unknown\",DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\",ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\", #>         ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # longlat for a sphere of radius 1m print(fm_crs(\"longlat_norm\")) #> Coordinate Reference System: #>   User input: GEOGCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",1,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Reference meridian\",0,ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # A sphere of radius 1m print(fm_crs(\"sphere\")) #> Coordinate Reference System: #>   User input: GEODCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",1,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Reference meridian\",0,ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],CS[Cartesian,3],AXIS[\"(X)\",geocentricX,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(Y)\",geocentricY,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(Z)\",geocentricZ,ORDER[3],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]  #>   wkt: #> GEODCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[Cartesian,3], #>         AXIS[\"(X)\",geocentricX, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Y)\",geocentricY, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Z)\",geocentricZ, #>             ORDER[3], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]]"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the matrix I/O system — C_matrixio_test","title":"Test the matrix I/O system — C_matrixio_test","text":"Test matrix /O system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the matrix I/O system — C_matrixio_test","text":"","code":"C_matrixio_test(args_input)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the matrix I/O system — C_matrixio_test","text":"args_input Input argument list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the matrix I/O system — C_matrixio_test","text":"","code":"A <- Matrix::sparseMatrix(i=1:4,j=4:1,x=2:5,dims=c(4,4)) out <- C_matrixio_test(args_input=list(   A = fm_as_dgTMatrix(A),   Bd = matrix((11:22)+0.5,4,3),   Bi = matrix(121L:132L,4,3),   B1d=as.matrix((31:34)+0.5),   B1i=as.matrix(41L:44L),   Ad = fm_as_fmesher_sparse(A) )) #> Rcpp_interface.cc(751)\tBdd: 4 3 #> 11.5 15.5 19.5  #> 12.5 16.5 20.5  #> 13.5 17.5 21.5  #> 14.5 18.5 22.5  #>  #> Rcpp_interface.cc(752)\tBdi: 4 3 #> 11 15 19  #> 12 16 20  #> 13 17 21  #> 14 18 22  #>  #> Rcpp_interface.cc(753)\tBid: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(754)\tBii: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(762)\tBdd1: 4 1 #> 31.5  #> 32.5  #> 33.5  #> 34.5  #>  #> Rcpp_interface.cc(763)\tBdd_1: 4 1 #> 15.5  #> 16.5  #> 17.5  #> 18.5  #>  #> Rcpp_interface.cc(764)\tBdi1: 4 1 #> 31  #> 32  #> 33  #> 34  #>  #> Rcpp_interface.cc(765)\tBid1: 4 1 #> 41  #> 42  #> 43  #> 44  #>  #> Rcpp_interface.cc(766)\tBii1: 4 1 #> 41  #> 42  #> 43  #> 44  #>  #> Rcpp_interface.cc(773)\tBdd3: 4 3 #> 11.5 15.5 19.5  #> 12.5 16.5 20.5  #> 13.5 17.5 21.5  #> 14.5 18.5 22.5  #>  #> Rcpp_interface.cc(774)\tBdi3: 4 3 #> 11 15 19  #> 12 16 20  #> 13 17 21  #> 14 18 22  #>  #> Rcpp_interface.cc(775)\tBid3: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(776)\tBii3: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(791)\t0 0 Aout <- fm_as_dgTMatrix(out[[\"Ad\"]]) A #> 4 x 4 sparse Matrix of class \"dgCMatrix\" #>              #> [1,] . . . 2 #> [2,] . . 3 . #> [3,] . 4 . . #> [4,] 5 . . . Aout #> 4 x 4 sparse Matrix of class \"dgTMatrix\" #>              #> [1,] . . . 2 #> [2,] . . 3 . #> [3,] . 4 . . #> [4,] 5 . . ."},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the matrix I/O system — C_matrixio_test2","title":"Test the matrix I/O system — C_matrixio_test2","text":"Test matrix /O system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the matrix I/O system — C_matrixio_test2","text":"","code":"C_matrixio_test2(args_input)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the matrix I/O system — C_matrixio_test2","text":"args_input Input argument list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the matrix I/O system — C_matrixio_test2","text":"","code":"A <- Matrix::sparseMatrix(i=1:4,j=4:1,x=2:5,dims=c(4,4)) inp <- list(   A = fm_as_dgTMatrix(A),   Bd = matrix((11:22)+0.5,4,3),   Bi = matrix(121L:132L,4,3),   B1d=as.matrix((31:34)+0.5),   B1i=as.matrix(41L:44L),   Ad = fm_as_fmesher_sparse(A) ) inp[[\"BdM\"]] <- as(inp[[\"Bd\"]], \"unpackedMatrix\") out <- C_matrixio_test2(args_input = inp) str(out) #> List of 7 #>  $ A  :Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:4] 0 1 2 3 #>   .. ..@ j       : int [1:4] 3 2 1 0 #>   .. ..@ Dim     : int [1:2] 4 4 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:4] 2 3 4 5 #>   .. ..@ factors : list() #>  $ Ad :Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:4] 0 1 2 3 #>   .. ..@ j       : int [1:4] 3 2 1 0 #>   .. ..@ Dim     : int [1:2] 4 4 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:4] 2 3 4 5 #>   .. ..@ factors : list() #>  $ B1d: num [1:4, 1] 31.5 32.5 33.5 34.5 #>  $ B1i: int [1:4, 1] 41 42 43 44 #>  $ Bd : num [1:4, 1:3] 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5 20.5 ... #>  $ BdM:Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:12] 0 0 0 1 1 1 2 2 2 3 ... #>   .. ..@ j       : int [1:12] 0 1 2 0 1 2 0 1 2 0 ... #>   .. ..@ Dim     : int [1:2] 4 3 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:12] 11.5 15.5 19.5 12.5 16.5 20.5 13.5 17.5 21.5 14.5 ... #>   .. ..@ factors : list() #>  $ Bi : int [1:4, 1:3] 121 122 123 124 125 126 127 128 129 130 ..."},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sparse matrix inverse — C_qinv","title":"Compute sparse matrix inverse — C_qinv","text":"Compute sparse matrix inverse","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sparse matrix inverse — C_qinv","text":"","code":"C_qinv(AA)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sparse matrix inverse — C_qinv","text":"AA sparse matrix","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Call stack utility functions — call-stack","title":"Call stack utility functions — call-stack","text":"Helper functions displaying call stack information","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call stack utility functions — call-stack","text":"","code":"fm_caller_name(which = 0L, override = NULL)  fm_call_stack(start = 0L, end = 0L, with_numbers = TRUE, ...)  fm_try_callstack(expr)"},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call stack utility functions — call-stack","text":"TODO override TODO start TODO end TODO with_numbers TODO ... TODO expr expression evaluate","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Call stack utility functions — call-stack","text":"fm_call_stack(): fm_try_callstack(): Inspired berryFunctions::tryStack","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — .globeproj.types","text":"","code":".globeproj.types(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — .globeproj.types","text":"x globeproj object. ... used.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — .globeproj.types","text":"vector names avaliable projection types; \"longlat\", \"mollweide\", \"hammer\", \"orthocyl\", \"lambert\", \"gall-peters\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — .globeproj.types","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coordinate reference system object — fm_CRS","title":"Create a coordinate reference system object — fm_CRS","text":"Creates either CRS object inla.CRS object, describing coordinate reference system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"fm_CRS(...)  # S3 method for crs fm_CRS(x, ...)  # S3 method for fm_crs fm_CRS(x, ...)  # S3 method for Spatial fm_CRS(x, ...)  # S3 method for inla.CRS fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sf fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sfc fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sfg fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.mesh fm_CRS(x, ..., crsonly = FALSE)  # S3 method for fm_mesh_2d fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.lattice fm_CRS(x, ..., crsonly = FALSE)  # S3 method for fm_lattice fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.segment fm_CRS(x, ..., crsonly = FALSE)  # S3 method for fm_segm fm_CRS(x, ..., crsonly = FALSE)  # S3 method for CRS fm_CRS(x, oblique = NULL, ...)  # S3 method for default fm_CRS(   projargs = NULL,   doCheckCRSArgs = NULL,   args = NULL,   oblique = NULL,   SRS_string = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coordinate reference system object — fm_CRS","text":"... Additional parameters. currently use. x Object convert CRS extract CRS information . crsonly logical; TRUE, remove obliqueinformation forinla.CRSclass objects return pureCRSclass object. Default:FALSE`. oblique Vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section . projargs Either 1) projection argument string suitable input sp::CRS, 2) existing CRS object, 3) shortcut reference string predefined projection; run names(fm_wkt_predef()) valid predefined projections. doCheckCRSArgs ignored. args optional list name/value pairs add /override PROJ4 arguments projargs.  name=value converted \"+name=value\", name=NA converted \"+name\". SRS_string WKT2 string defining coordinate system; see sp::CRS. takes precedence projargs.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a coordinate reference system object — fm_CRS","text":"Either sp::CRS object inla.CRS object, depending coordinate reference system described parameters can expressed pure sp::CRS object . S3 inla.CRS object list, usually (necessarily) containing least one element: crs basic sp::CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a coordinate reference system object — fm_CRS","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counterclockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a coordinate reference system object — fm_CRS","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"crs1 <- fm_CRS(\"longlat_globe\") crs2 <- fm_CRS(\"lambert_globe\") crs3 <- fm_CRS(\"mollweide_norm\") crs4 <- fm_CRS(\"hammer_globe\") crs5 <- fm_CRS(\"sphere\") crs6 <- fm_CRS(\"globe\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":null,"dir":"Reference","previous_headings":"","what":"Show expanded CRS arguments — fm_CRS_as_list","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Wrappers sp::CRS inla.CRS objects handle coordinate reference system argument string. methods longer used PROJ6/rgdal3; see fm_wkt() fm_proj4string() new approach.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"fm_CRS_as_list(x, ...)  fm_list_as_CRS(x, ...)  fm_CRSargs(x, ...)  fm_list_as_CRSargs(x, ...)  fm_CRSargs_as_list(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"x sp::CRS inla.CRS object (fm_CRSargs fm_CRS_as_list), character string (fm_CRSargs_as_list), list (fm_list_as_CRS fm_list_as_CRSargs). ... Additional arguments passed methods.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"fm_CRSargs fm_list_as_CRSargs, character string PROJ.4 arguments. fm_CRS_as_list fm_CRSargs_as_list, list name/value pairs. fm_list_as_CRS, CRS inla.CRS object. fm_list_as_CRSargs(), CRS proj4 string name=value pair list fm_CRSargs_as_list(), list name=value pairs CRS proj4 string","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"crs0 <- fm_CRS(\"longlat_norm\") p4s <- fm_proj4string(crs0) lst <- fm_CRSargs_as_list(p4s) crs1 <- fm_list_as_CRS(lst) #> Warning: 'fm_CRS' should be given a SRS_string for PROJ6 or a known keyword for a #>   predefined string given in projargs. Using 'fm_crs()' workaround. lst$a <- 2 crs2 <- fm_CRS(p4s, args = lst) #> Warning: 'fm_CRS' should be given a SRS_string for PROJ6 or a known keyword for a #>   predefined string given in projargs. Using 'fm_crs()' workaround. print(fm_proj4string(crs0)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_proj4string(crs1)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_proj4string(crs2)) #> [1] \"+proj=longlat +R=1 +no_defs\""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fmesher objects — fm_as_fm","title":"Convert objects to fmesher objects — fm_as_fm","text":"Used conversion general objects (usually inla.mesh INLA specific classes) fmesher classes.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fmesher objects — fm_as_fm","text":"","code":"fm_as_fm(x, ...)  # S3 method for fm_mesh_1d fm_as_fm(x, ...)  # S3 method for fm_mesh_2d fm_as_fm(x, ...)  # S3 method for fm_segm fm_as_fm(x, ...)  # S3 method for fm_lattice_2d fm_as_fm(x, ...)  # S3 method for inla.mesh.1d fm_as_fm(x, ...)  # S3 method for inla.mesh fm_as_fm(x, ...)  # S3 method for inla.mesh.segment fm_as_fm(x, ...)  # S3 method for inla.mesh.lattice fm_as_fm(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fmesher objects — fm_as_fm","text":"x Object converted ... Arguments forwarded submethods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"Convert objects fm_lattice_2d","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"","code":"fm_as_lattice_2d(...)  # S3 method for fm_lattice_2d fm_as_lattice_2d(x, ...)  # S3 method for inla.mesh.lattice fm_as_lattice_2d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"... Arguments passed submethods x Object converted","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"fm_as_lattice_2d(): Convert object fm_lattice_2d.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_segm — fm_as_mesh_1d","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"Convert objects fm_segm","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"","code":"fm_as_mesh_1d(...)  # S3 method for fm_mesh_1d fm_as_mesh_1d(x, ...)  # S3 method for inla.mesh.1d fm_as_mesh_1d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"... Arguments passed submethods x Object converted","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"fm_as_mesh_1d(): Convert object fm_mesh_1d.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"Convert objects fm_mesh_2d","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"","code":"fm_as_mesh_2d(...)  # S3 method for fm_mesh_2d fm_as_mesh_2d(x, ...)  # S3 method for inla.mesh fm_as_mesh_2d(x, ...)  # S3 method for sfg fm_as_mesh_2d(x, ...)  # S3 method for sfc_MULTIPOLYGON fm_as_mesh_2d(x, ...)  # S3 method for sfc_POLYGON fm_as_mesh_2d(x, ...)  # S3 method for sf fm_as_mesh_2d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"... Arguments passed submethods x Object converted","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"fm_as_mesh_2d(): Convert object fm_mesh_2d.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_segm — fm_as_segm","title":"Convert objects to fm_segm — fm_as_segm","text":"Convert objects fm_segm","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_segm — fm_as_segm","text":"","code":"fm_as_segm(x, ...)  # S3 method for inla.mesh.segment fm_as_segm(x, ...)  # S3 method for sfg fm_as_segm(x, ...)  # S3 method for sfc_POINT fm_as_segm(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, ...)  # S3 method for sfc_LINESTRING fm_as_segm(x, join = TRUE, grp = NULL, reverse = FALSE, ...)  # S3 method for sfc_POLYGON fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for sfc_MULTIPOLYGON fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for sfc_GEOMETRY fm_as_segm(x, grp = NULL, join = TRUE, ...)  # S3 method for sf fm_as_segm(x, ...)  # S3 method for matrix fm_as_segm(   x,   reverse = FALSE,   grp = NULL,   is.bnd = FALSE,   crs = NULL,   closed = FALSE,   ... )  # S3 method for SpatialPoints fm_as_segm(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, closed = FALSE, ...)  # S3 method for SpatialPointsDataFrame fm_as_segm(x, ...)  # S3 method for Line fm_as_segm(x, reverse = FALSE, grp = NULL, crs = NULL, ...)  # S3 method for Lines fm_as_segm(x, join = TRUE, grp = NULL, crs = NULL, ...)  # S3 method for SpatialLines fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for SpatialLinesDataFrame fm_as_segm(x, ...)  # S3 method for SpatialPolygons fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for SpatialPolygonsDataFrame fm_as_segm(x, ...)  # S3 method for Polygons fm_as_segm(x, join = TRUE, crs = NULL, grp = NULL, ...)  # S3 method for Polygon fm_as_segm(x, crs = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_segm — fm_as_segm","text":"x Object converted. ... Arguments passed submethods reverse logical; TRUE, reverse order input points. Default FALSE grp non-null, integer vector grouping labels one segment. Default NULL .bnd logical; TRUE, set boundary flag segments. Default TRUE join logical; TRUE, join input segments common vertices. Default TRUE crs crs object closed logical; whether treat point sequence closed polygon. Default: FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_segm — fm_as_segm","text":"fm_as_segm(): Convert object fm_segm.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion methods from mesh related objects to sfc — fm_as_sfc","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"Conversion methods mesh related objects sfc","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"","code":"fm_as_sfc(x, ...)  # S3 method for inla.mesh fm_as_sfc(x, ..., multi = FALSE)  # S3 method for fm_mesh_2d fm_as_sfc(x, ..., multi = FALSE)  # S3 method for inla.mesh.segment fm_as_sfc(x, ..., multi = FALSE)  # S3 method for fm_segm fm_as_sfc(x, ..., multi = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"x object coerced/transformed/converted another class ... Arguments passed methods multi logical; TRUE, attempt sfc_MULTIPOLYGON, otherwise set sfc_POLYGON. Default FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"fm_as_sfc: sfc_MULTIPOLYGON sfc_POLYGON object fm_as_sfc: sfc_MULTIPOLYGON sfc_POLYGON object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"fm_as_sfc(inla.mesh): fm_as_sfc(fm_mesh_2d): fm_as_sfc(inla.mesh.segment): fm_as_sfc(fm_segm):","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute barycentric coordinates — fm_bary","title":"Compute barycentric coordinates — fm_bary","text":"Identify triangles compute barycentric coordinates","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute barycentric coordinates — fm_bary","text":"","code":"fm_bary(mesh, loc, crs = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute barycentric coordinates — fm_bary","text":"mesh fm_mesh_2d inla.mesh object loc Points identify containing triangle, corresponding barycentric coordinates. May raw matrix coordinates, sf, sp point information. crs Optional crs information loc","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute barycentric coordinates — fm_bary","text":"list elements t (vector triangle indices) bary (3-column matrix barycentric coordinates). Points found give NA entries t bary.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"Computes centroids triangles fm_mesh_2d() object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"","code":"fm_centroids(x, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"x fm_mesh_2d inla.mesh object. format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"sf, data.frame, SpatialPointsDataFrame object, vertex coordinates, .triangle column triangle indices.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"","code":"# \\donttest{ if (require(\"ggplot2\", quietly = TRUE) &&   require(\"inlabru\", quietly = TRUE)) {   data(\"mrsea\", package = \"inlabru\")   vrt <- fm_centroids(mrsea$mesh, format = \"sp\")   ggplot() +     gg(mrsea$mesh) +     gg(vrt, color = \"red\") } #>  #> Attaching package: ‘inlabru’ #> The following object is masked from ‘package:ggplot2’: #>  #>     seals #> The following objects are masked from ‘package:fmesher’: #>  #>     fm_as_inla_mesh, fm_as_inla_mesh_segment, st_check_polygon, #>     st_signed_area #> Loading required namespace: INLA  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which mesh triangles are inside a polygon — fm_contains","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"Wrapper sf::st_contains() (previously sp::()) method find triangle centroids vertices inside sf sp polygon objects","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"","code":"fm_contains(x, y, ...)  # S3 method for Spatial fm_contains(x, y, ...)  # S3 method for sf fm_contains(x, y, ...)  # S3 method for sfc fm_contains(x, y, ..., type = c(\"centroid\", \"vertex\"))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"x geometry (typically sf sp::SpatialPolygons object) queries y inla.mesh() object ... Passed methods type query type; either 'centroid' (default, triangle centroids), 'vertex' (mesh vertices)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"List vectors triangle indices (type 'centroid') vertex indices (type 'vertex'). list one entry per row sf object. Use unlist(fm_contains(...)) combined union needed.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"Haakon Bakka, bakka@r-inla.org, Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"","code":"if (fm_safe_inla() &&   fm_safe_sp()) {   # Create a polygon and a mesh   obj <- sp::SpatialPolygons(     list(sp::Polygons(       list(sp::Polygon(rbind(         c(0, 0),         c(50, 0),         c(50, 50),         c(0, 50)       ))),       ID = 1     )),     proj4string = fm_CRS(\"longlat_globe\")   )   mesh <- INLA::inla.mesh.create(globe = 2, crs = fm_crs(\"sphere\"))    ## 3 vertices found in the polygon   fm_contains(obj, mesh, type = \"vertex\")    ## 3 triangles found in the polygon   fm_contains(obj, mesh)    ## Multiple transformations can lead to slightly different results due to edge cases   ## 4 triangles found in the polygon   fm_contains(     obj,     fm_transform(mesh, crs = fm_crs(\"mollweide_norm\"))   ) } #> Sparse geometry binary predicate list of length 1, where the predicate #> was `contains' #>  1: 7, 15, 18, 35"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":null,"dir":"Reference","previous_headings":"","what":"(Blockwise) cross product of integration points — fm_cprod","title":"(Blockwise) cross product of integration points — fm_cprod","text":"Calculates groupwise cross product integration points different dimensions multiplies weights accordingly. object defining points particular dimension weights attached weights assumed 1.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Blockwise) cross product of integration points — fm_cprod","text":"","code":"fm_cprod(..., na.rm = NULL, .blockwise = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Blockwise) cross product of integration points — fm_cprod","text":"... data.frame, sf, SpatialPointsDataFrame objects, one usually obtained call fm_int() method. na.rm logical; TRUE, rows weight NA non-overlapping full_join removed; FALSE, set undefined weights NA. NULL (default), act TRUE, warn elements needed removing. .blockwise logical; FALSE, computes full tensor product integration. TRUE, computes within-block tensor product integration (used internally fm_int()). Default FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Blockwise) cross product of integration points — fm_cprod","text":"data.frame, sf, SpatialPointsDataFrame multidimensional integration points weights","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Blockwise) cross product of integration points — fm_cprod","text":"","code":"# \\donttest{ # fm_int needs INLA if (fm_safe_inla() &&   require(\"ggplot2\")) {   # Create integration points in dimension 'myDim' and 'myDiscreteDim'   ips1 <- fm_int(INLA::inla.mesh.1d(1:20),     rbind(c(0, 3), c(3, 8)),     name = \"myDim\"   )   ips2 <- fm_int(domain = c(1, 2, 4), name = \"myDiscreteDim\")    # Calculate the cross product   ips <- fm_cprod(ips1, ips2)    # Plot the integration points   ggplot(ips) +     geom_point(aes(myDim, myDiscreteDim, size = weight)) +     scale_size_area() }  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinate reference system object — is.na.fm_crs","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"Obtain sf::crs fm_crs object spatial object, convert crs information construct new sf::crs object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"","code":"# S3 method for fm_crs is.na(x)  # S3 method for inla.CRS is.na(x)  fm_crs_is_null(x)  fm_crs(x, ..., crsonly = FALSE)  fm_crs_oblique(x)  fm_crs_oblique(x) <- value  # S3 method for fm_crs print(x, ...)  # S3 method for default fm_crs(x, ..., crsonly = FALSE)  # S3 method for fm_crs st_crs(x, ...)  # S3 method for fm_crs $(x, name)  # S3 method for fm_crs fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.CRS fm_crs(x, ..., crsonly = FALSE)  # S3 method for character fm_crs(x, ..., crsonly = FALSE)  # S3 method for Spatial fm_crs(x, ..., crsonly = FALSE)  # S3 method for SpatVector fm_crs(x, ..., crsonly = FALSE)  # S3 method for SpatRaster fm_crs(x, ..., crsonly = FALSE)  # S3 method for sf fm_crs(x, ..., crsonly = FALSE)  # S3 method for sfc fm_crs(x, ..., crsonly = FALSE)  # S3 method for sfg fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh fm_crs(x, ..., crsonly = FALSE)  # S3 method for fm_mesh_2d fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.lattice fm_crs(x, ..., crsonly = FALSE)  # S3 method for fm_lattice fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.segment fm_crs(x, ..., crsonly = FALSE)  # S3 method for fm_segm fm_crs(x, ..., crsonly = FALSE)  fm_wkt_predef()"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"x Object convert crs  extract crs information . character, string suitable sf::st_crs(x), name predefined wkt string ``names(fm_wkt_predef())`. ... Additional parameters. currently use. crsonly logical; TRUE, remove oblique information fm_crs class objects return pure crs class object. Default: FALSE. value Vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section . name element name","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"Either sf::crs object fm_crs object, depending coordinate reference system described parameters can expressed pure crs object . crs object (sf::st_crs()) fm_crs object. S3 fm_crs object list elements crs oblique. fm_wkt_predef returns WKT2 string defining projection","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counterclockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Obtain coordinate reference system object — is.na.fm_crs","text":".na(fm_crs): Check fm_crs NA crs information st_crs(fm_crs): st_crs(x, ...) equivalent fm_crs(x, ..., crsonly = TRUE) x fm_crs object. $: fm_crs object x, x$name calls accessor method crs object inside . name \"crs\", internal crs object returned. name \"oblique\", internal oblique angle parameter vector returned.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Obtain coordinate reference system object — is.na.fm_crs","text":".na(inla.CRS): Check inla.CRS NA crs information fm_crs_is_null(): Check object NULL NA CRS information. NULL, .na(fm_crs(x)) returned. allows input e.g. proj4string epsg number, since default fm_crs() method passes argument sf::st_crs().","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain coordinate reference system object — is.na.fm_crs","text":"","code":"crs1 <- fm_crs(\"longlat_globe\") crs2 <- fm_crs(\"lambert_globe\") crs3 <- fm_crs(\"mollweide_norm\") crs4 <- fm_crs(\"hammer_globe\") crs5 <- fm_crs(\"sphere\") crs6 <- fm_crs(\"globe\") if (FALSE) { names(fm_wkt_predef()) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling CRS/WKT — fm_crs_wkt","title":"Handling CRS/WKT — fm_crs_wkt","text":"Get set CRS object WKT string properties.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling CRS/WKT — fm_crs_wkt","text":"","code":"fm_wkt_is_geocent(wkt)  fm_crs_is_geocent(crs)  fm_wkt_get_ellipsoid_radius(wkt)  fm_crs_get_ellipsoid_radius(crs)  fm_ellipsoid_radius(x)  # S3 method for default fm_ellipsoid_radius(x)  # S3 method for character fm_ellipsoid_radius(x)  fm_wkt_set_ellipsoid_radius(wkt, radius)  fm_ellipsoid_radius(x) <- value  # S3 method for character fm_ellipsoid_radius(x) <- value  # S3 method for CRS fm_ellipsoid_radius(x) <- value  # S3 method for inla.CRS fm_ellipsoid_radius(x) <- value  # S3 method for crs fm_ellipsoid_radius(x) <- value  # S3 method for fm_crs fm_ellipsoid_radius(x) <- value  fm_crs_set_ellipsoid_radius(crs, radius)  fm_wkt_unit_params()  fm_wkt_get_lengthunit(wkt)  fm_wkt_set_lengthunit(wkt, unit, params = NULL)  fm_crs_get_lengthunit(crs)  fm_crs_set_lengthunit(crs, unit)  fm_length_unit(x)  # S3 method for default fm_length_unit(x)  # S3 method for character fm_length_unit(x)  fm_length_unit(x) <- value  # S3 method for character fm_length_unit(x) <- value  # S3 method for CRS fm_length_unit(x) <- value  # S3 method for inla.CRS fm_length_unit(x) <- value  # S3 method for crs fm_length_unit(x) <- value  # S3 method for fm_crs fm_length_unit(x) <- value  fm_wkt(crs)  fm_proj4string(crs)  fm_crs_get_wkt(crs)  fm_wkt_tree_projection_type(wt)  fm_wkt_projection_type(wkt)  fm_crs_projection_type(crs)  fm_crs_bounds(crs, warn.unknown = FALSE)  fm_crs_detect_manifold(crs)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling CRS/WKT — fm_crs_wkt","text":"wkt WKT2 character string crs sf::crs, sp::CRS, fm_crs inla.CRS object x crs object extract value assign values radius numeric; new radius value value Value assign unit character, name unit. Supported names \"metre\", \"kilometre\", aliases \"meter\", \"m\", International metre\", \"kilometer\", \"km\", defined fm_wkt_unit_params params argument. (legacy PROJ4 use, \"m\" \"km\" supported) params Length unit definitions, list format produced fm_wkt_unit_params(), Default: NULL, invokes fm_wkt_unit_params() wt parsed wkt tree, see fm_wkt_as_wkt_tree() warn.unknown logical, default FALSE. Produce warning shape projection bounds unknown.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling CRS/WKT — fm_crs_wkt","text":"fm_wkt_unit_params, list named unit definitions fm_wkt_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. fm_wkt_set_lengthunit, WKT2 string altered length units. Note length unit ellipsoid radius unchanged. fm_crs_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. (legacy PROJ4 code, raw units proj4string returned, present.) fm_length_unit<-, crs object altered length units. Note length unit ellipsoid radius unchanged.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Handling CRS/WKT — fm_crs_wkt","text":"fm_wkt(): Returns WKT2 string, input supported fm_crs(). fm_proj4string(): Returns proj4 string, input supported fm_crs(). fm_crs_get_wkt():  Use fm_wkt() instead. fm_wkt_tree_projection_type(): Returns \"longlat\", \"lambert\", \"mollweide\", \"hammer\", \"tmerc\", NULL fm_wkt_projection_type(): See fm_wkt_tree_projection_type fm_crs_projection_type(): See fm_wkt_tree_projection_type fm_crs_bounds(): Returns bounds information projection, list elements type (\"rectangle\" \"ellipse\"), xlim, ylim, polygon. fm_crs_detect_manifold(): Detect crs \"R2\" \"S2\" (fm_crs_is_geocent(crs) TRUE)","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handling CRS/WKT — fm_crs_wkt","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handling CRS/WKT — fm_crs_wkt","text":"","code":"if (FALSE) { c1 <- fm_crs(\"globe\") fm_crs_get_lengthunit(c1) c2 <- fm_crs_set_lengthunit(c1, \"m\") fm_crs_get_lengthunit(c2) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute approximate spatial object diameter — fm_diameter","title":"Compute approximate spatial object diameter — fm_diameter","text":"Compute approximate spatial object diameter","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute approximate spatial object diameter — fm_diameter","text":"","code":"fm_diameter(x, ...)  # S3 method for sf fm_diameter(x, ...)  # S3 method for sfg fm_diameter(x, ...)  # S3 method for sfc fm_diameter(x, ...)  # S3 method for matrix fm_diameter(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute approximate spatial object diameter — fm_diameter","text":"x spatial object ... Currently unused","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for projecting to/from an inla.mesh — fm_evaluate","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"Calculate evaluation information /evaluate function defined inla.mesh inla.mesh.1d object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"","code":"fm_evaluate(...)  # S3 method for inla.mesh fm_evaluate(mesh, field, ...)  # S3 method for fm_mesh_2d fm_evaluate(mesh, field, ...)  # S3 method for inla.mesh.1d fm_evaluate(mesh, field, ...)  # S3 method for fm_mesh_1d fm_evaluate(mesh, field, ...)  # S3 method for fm_evaluator fm_evaluate(projector, field, ...)  fm_evaluator(...)  fm_evaluator_mesh_2d(mesh, loc = NULL, crs = NULL, ...)  fm_evaluator_mesh_1d(mesh, loc, ...)  fm_evaluator_lattice(   mesh,   xlim = NULL,   ylim = NULL,   dims = c(100, 100),   projection = NULL,   crs = NULL,   ... )  # S3 method for inla.mesh fm_evaluator(mesh, loc = NULL, lattice = NULL, crs = NULL, ...)  # S3 method for fm_mesh_2d fm_evaluator(mesh, loc = NULL, lattice = NULL, crs = NULL, ...)  # S3 method for inla.mesh.1d fm_evaluator(mesh, loc = NULL, xlim = mesh$interval, dims = 100, ...)  # S3 method for fm_mesh_1d fm_evaluator(mesh, loc = NULL, xlim = mesh$interval, dims = 100, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"... Additional arguments passed methods. mesh inla.mesh inla.mesh.1d object. field Basis function weights, one per mesh basis function, describing function evaluated projection locations projector fm_evaluator object. loc Projection locations.  Can matrix, SpatialPoints, SpatialPointsDataFrame, sf, sfc, sfg object. crs optional CRS inla.CRS object associated loc /lattice. xlim X-axis limits lattice. R2 meshes, defaults covering domain. ylim Y-axis limits lattice. R2 meshes, defaults covering domain. dims Lattice dimensions. projection One c(\"default\", \"longlat\", \"longsinlat\", \"mollweide\"). lattice fm_lattice_2d() object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"fm_evaluate(): Returns field function evaluated locations determined fm_evaluator object. fm_evaluate(mesh, field = field, ...) shortcut fm_evaluate(fm_evaluator(mesh, ...), field = field). fm_evaluator(): Returns fm_evaluator list object evaluation information. proj element contains mapping matrix logical vector ok, indicates locations mappable input mesh. fm_mesh_2d inla.mesh input, proj also contains matrix bary vector t, barycentric coordinates within triangle input location falls . fm_evaluator_lattice(): Creates fm_lattice_2d() object, default covering input mesh. fm_evaluator(inla.mesh): ... arguments passed fm_evaluator_lattice() loc lattice provided. fm_evaluator(fm_mesh_2d): ... arguments passed fm_evaluator_lattice() loc lattice provided.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for projecting to/from an inla.mesh — fm_evaluate","text":"","code":"if (fm_safe_inla()) {   n <- 20   loc <- matrix(runif(n * 2), n, 2)   mesh <- INLA::inla.mesh.create(loc, refine = list(max.edge = 0.05))   proj <- fm_evaluator(mesh)   field <- cos(mesh$loc[, 1] * 2 * pi * 3) * sin(mesh$loc[, 2] * 2 * pi * 7)   image(proj$x, proj$y, fm_evaluate(proj, field)) }  # \\donttest{ if (fm_safe_inla() &&   require(\"ggplot2\") &&   fm_safe_sp() &&   require(\"ggpolypath\") &&   require(\"inlabru\")) {   ggplot() +     gg(mesh, col = field) } #> Loading required package: ggpolypath  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute extensions of a spatial object — fm_extensions","title":"Compute extensions of a spatial object — fm_extensions","text":"Constructs potentially nonconvex extension spatial object performing dilation convex + concave followed erosion concave. equivalent dilation convex followed closing (dilation + erosion) concave.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute extensions of a spatial object — fm_extensions","text":"","code":"fm_extensions(x, convex = -0.15, concave = convex, dTolerance = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute extensions of a spatial object — fm_extensions","text":"x spatial object convex numeric vector; much extend concave numeric vector; minimum allowed reentrant curvature. Default equal convex dTolerance null, dTolerance argument sf::st_simplify(), passed fm_nonconvex_hull(). default pmin(convex, concave) / 40, chosen give approximately 4 subsegments per circular quadrant. ... Optional arguments pass fm_nonconvex_hull().","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute extensions of a spatial object — fm_extensions","text":"list sfg objects.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_extensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute extensions of a spatial object — fm_extensions","text":"","code":"if (fm_safe_inla()) {   inp <- sf::st_as_sf(as.data.frame(matrix(1:6, 3, 2)), coords = 1:2)   out <- fm_extensions(inp, convex = c(0.75, 2))   bnd <- lapply(out, fm_as_segm)   plot(INLA::inla.mesh.2d(boundary = bnd, max.edge = c(0.25, 1)), asp = 1) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute finite element matrices — fm_fem","title":"Compute finite element matrices — fm_fem","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute finite element matrices — fm_fem","text":"","code":"fm_fem(mesh, order = 2, ...)  # S3 method for inla.mesh fm_fem(mesh, order = 2, ...)  # S3 method for fm_mesh_2d fm_fem(mesh, order = 2, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute finite element matrices — fm_fem","text":"mesh inla.mesh object order integer ... Currently unused","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute finite element matrices — fm_fem","text":"list elements ...","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two CRS objects are identical — fm_identical_CRS","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"Check two CRS objects identical","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"","code":"fm_identical_CRS(crs0, crs1, crsonly = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"crs0, crs1 Two sf::crs, sp::CRS, fm_crs inla.CRS objects compared. crsonly logical. TRUE crs0 crs1 fm_crs inla.CRS objects, extract compare sf::crs sp::CRS aspects. Default: FALSE","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"","code":"crs0 <- crs1 <- fm_crs(\"longlat_globe\") fm_crs_oblique(crs1) <- c(0, 90) print(c(   fm_identical_CRS(crs0, crs0),   fm_identical_CRS(crs0, crs1),   fm_identical_CRS(crs0, crs1, crsonly = TRUE) )) #> [1]  TRUE FALSE  TRUE"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-domain integration — fm_int","title":"Multi-domain integration — fm_int","text":"Construct integration points tensor product spaces","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-domain integration — fm_int","text":"","code":"fm_int(domain, samplers = NULL, ...)  # S3 method for list fm_int(domain, samplers = NULL, ...)  # S3 method for numeric fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for character fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for factor fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for SpatRaster fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for inla.mesh.lattice fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for inla.mesh.1d fm_int(domain, samplers = NULL, name = \"x\", int.args = NULL, ...)  # S3 method for fm_mesh_1d fm_int(domain, samplers = NULL, name = \"x\", int.args = NULL, ...)  # S3 method for inla.mesh fm_int(   domain,   samplers = NULL,   name = NULL,   int.args = NULL,   format = NULL,   ... )  # S3 method for fm_mesh_2d fm_int(   domain,   samplers = NULL,   name = NULL,   int.args = NULL,   format = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-domain integration — fm_int","text":"domain Functional space specification; single domain named list domains samplers single domain fm_int methods, object specifying one subsets domain, optional weighting weight variable. fm_int.list, list sampling definitions, data frame elements may contain information multiple domains, case row represent separate tensor product integration subspace. ... Additional arguments passed methods name single-domain methods, variable name use integration points. Default 'x' int.args List arguments passed line integration methods. method: \"stable\" (aggregate integration weights onto mesh nodes) \"direct\" (construct within triangle/segment integration scheme without aggregating onto mesh nodes) nsub1, nsub2: integers controlling number internal integration points aggregation. Points per triangle: (nsub2+1)^2. Points per knot segment: nsub1 format character; determines output format, either \"sf\" (default sampler NULL) \"sp\". NULL, determined sampler type.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-domain integration — fm_int","text":"data.frame, tibble, sf, SpatialPointsDataFrame 1D 2D integration points, including weight column .block column.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Multi-domain integration — fm_int","text":"fm_int(list): Multi-domain integration fm_int(numeric): Discrete double integer space integration fm_int(character): Discrete character space integration fm_int(factor): Discrete factor space integration fm_int(SpatRaster): SpatRaster integration. yet implemented. fm_int(inla.mesh.lattice): inla.mesh.lattice integration. yet implemented. fm_int(fm_mesh_1d): fm_mesh_1d integration. Supported samplers: NULL integration entire domain; length 2 vector defining interval; 2-column matrix single interval row; tibble named column containing matrix, optionally weight column. fm_int(fm_mesh_2d): inla.mesh integration. sampler class associated fm_int_mesh_2d() method supported.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-domain integration — fm_int","text":"","code":"if (fm_safe_inla() && fm_safe_sp()) {   # Integration on the interval (2, 3.5) with Simpson's rule   ips <- fm_int(INLA::inla.mesh.1d(0:4), samplers = cbind(2, 3.5))   plot(ips)    # Create integration points for the two intervals [0,3] and [5,10]    ips <- fm_int(     INLA::inla.mesh.1d(0:10),     matrix(c(0, 3, 5, 10), nrow = 2, byrow = TRUE)   )   plot(ips)    # Convert a 1D mesh into integration points   mesh <- INLA::inla.mesh.1d(seq(0, 10, by = 1))   ips <- fm_int(mesh, name = \"time\")   plot(ips)     if (require(\"ggplot2\", quietly = TRUE) &&     require(\"inlabru\", quietly = TRUE)) {     data(\"gorillas\", package = \"inlabru\")     #' Integrate on a 2D mesh with polygon boundary subset     ips <- fm_int(gorillas$mesh, gorillas$boundary)     ggplot() +       gg(gorillas$mesh) +       gg(gorillas$boundary) +       gg(ips, aes(size = weight)) +       scale_size_area()   } }   #> Regions defined for each Polygons"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset integration on a mesh — fm_int_mesh_2d","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"Integration methods spatial samplers inla.mesh meshes.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"","code":"fm_int_mesh_2d(samplers, domain, name = NULL, int.args = NULL, ...)  fm_int_mesh_2d_NULL(samplers, domain, name = NULL, int.args = NULL, ...)  # S3 method for sf fm_int_mesh_2d(samplers, domain, name = NULL, int.args = NULL, ...)  # S3 method for sfc_POINT fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTIPOINT fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_LINESTRING fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTILINESTRING fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_POLYGON fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTIPOLYGON fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_GEOMETRY fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for Spatial fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   format = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"samplers single domain fm_int methods, object specifying one subsets domain, optional weighting weight variable. fm_int.list, list sampling definitions, data frame elements may contain information multiple domains, case row represent separate tensor product integration subspace. domain Functional space specification; single domain named list domains name single-domain methods, variable name use integration points. Default 'x' int.args List arguments passed line integration methods. method: \"stable\" (aggregate integration weights onto mesh nodes) \"direct\" (construct within triangle/segment integration scheme without aggregating onto mesh nodes) nsub1, nsub2: integers controlling number internal integration points aggregation. Points per triangle: (nsub2+1)^2. Points per knot segment: nsub1 ... Additional arguments passed methods .weight Optional weight vector sfc_* integration format character; determines output format, either \"sf\" (default sampler NULL) \"sp\". NULL, determined sampler type. .block Optional block grouping vector sfc_* integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"sf point object columns weight .block","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"fm_int_mesh_2d(sf): sf integration fm_int_mesh_2d(sfc_POINT): sfc_POINT integration fm_int_mesh_2d(sfc_MULTIPOINT): sfc_MULTIPOINT integration fm_int_mesh_2d(sfc_LINESTRING): sfc_LINESTRING integration fm_int_mesh_2d(sfc_MULTILINESTRING): sfc_MULTILINESTRING integration fm_int_mesh_2d(sfc_POLYGON): sfc_POLYGON integration fm_int_mesh_2d(sfc_MULTIPOLYGON): sfc_MULTIPOLYGON integration fm_int_mesh_2d(sfc_GEOMETRY): sfc_GEOMERY integration fm_int_mesh_2d(Spatial): Spatial integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"fm_int_mesh_2d_NULL(): Full domain integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"Integration scheme mesh triangle interiors","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"","code":"fm_int_mesh_2d_core(mesh, tri_subset = NULL, nsub = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"mesh Mesh integrate tri_subset Optional triangle index vector integration subset mesh triangles (Default NULL) nsub number subdivision points along triangle edge, giving (nsub + 1)^2 proto-integration points used compute vertex weights (default NULL=9, giving 100 integration points triangle)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"list elements loc weight integration points mesh","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_multi_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-domain sampler integration — fm_int_multi_sampler","title":"Multi-domain sampler integration — fm_int_multi_sampler","text":"Combine integration different domains","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_multi_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-domain sampler integration — fm_int_multi_sampler","text":"","code":"fm_int_multi_sampler(domain, samplers, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":null,"dir":"Reference","previous_headings":"","what":"Query if points are inside a mesh — fm_is_within","title":"Query if points are inside a mesh — fm_is_within","text":"Queries whether input point within mesh .","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query if points are inside a mesh — fm_is_within","text":"","code":"fm_is_within(x, y, ...)  # S3 method for default fm_is_within(x, y, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query if points are inside a mesh — fm_is_within","text":"x set points class supported fm_evaluator(y, loc = x) y inla.mesh ... Currently unused","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query if points are inside a mesh — fm_is_within","text":"logical vector","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query if points are inside a mesh — fm_is_within","text":"","code":"if (FALSE) { if (fm_safe_inla(quietly = TRUE)) {   # Load Gorilla data    data(\"gorillas\", package = \"inlabru\")    # Check if all Gorilla nests are inside the mesh    all(fm_is_within(gorillas$nests, gorillas$mesh))    # Also works for locations not stored as SpatialPoints object    loc <- coordinates(gorillas$nests)   all(fm_is_within(loc, gorillas$mesh)) } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a lattice object — fm_lattice_2d","title":"Make a lattice object — fm_lattice_2d","text":"Make lattice object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a lattice object — fm_lattice_2d","text":"","code":"fm_lattice_2d(...)  # S3 method for default fm_lattice_2d(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a lattice object — fm_lattice_2d","text":"... Currently passed inla.mesh.lattice","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 1D mesh object — fm_mesh_1d","title":"Make a 1D mesh object — fm_mesh_1d","text":"Make 1D mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 1D mesh object — fm_mesh_1d","text":"","code":"fm_mesh_1d(...)  # S3 method for default fm_mesh_1d(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 1D mesh object — fm_mesh_1d","text":"... Currently passed inla.mesh.1d","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 2D mesh object — fm_mesh_2d","title":"Make a 2D mesh object — fm_mesh_2d","text":"Make 2D mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 2D mesh object — fm_mesh_2d","text":"","code":"fm_mesh_2d(...)  # S3 method for default fm_mesh_2d(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 2D mesh object — fm_mesh_2d","text":"... Currently passed inla.mesh.2d","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an extension of a spatial object — fm_nonconvex_hull","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Constructs potentially nonconvex extension spatial object performing dilation convex + concave followed erosion concave. equivalent dilation convex followed closing (dilation + erosion) concave.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"","code":"fm_nonconvex_hull(x, ...)  # S3 method for matrix fm_nonconvex_hull(x, ...)  # S3 method for sf fm_nonconvex_hull(x, ...)  # S3 method for Spatial fm_nonconvex_hull(x, ...)  # S3 method for sfg fm_nonconvex_hull(x, ...)  # S3 method for sfc fm_nonconvex_hull(   x,   convex = -0.15,   concave = convex,   preserveTopology = TRUE,   dTolerance = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"x spatial object ... Arguments passed sub-methods convex much extend concave minimum allowed reentrant curvature. Default equal convex preserveTopology logical; argument sf::st_simplify() dTolerance null, dTolerance argument sf::st_simplify()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"extended object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Differs sf::st_buffer(x, convex) followed sf::st_concave_hull() (available GEOS 3.11) amount allowed concavity controlled.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Gonzalez Woods (1992), Digital Image Processing","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"","code":"inp <- sf::st_as_sf(as.data.frame(matrix(1:6, 3, 2)), coords = 1:2) out <- fm_nonconvex_hull(inp, convex = 1) plot(out)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate lattice points covering a mesh — fm_pixels","title":"Generate lattice points covering a mesh — fm_pixels","text":"Generate terra, sf, sp lattice locations","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate lattice points covering a mesh — fm_pixels","text":"","code":"fm_pixels(mesh, nx = 150, ny = 150, mask = TRUE, format = \"sf\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate lattice points covering a mesh — fm_pixels","text":"mesh inla.mesh object nx Number pixels x direction ny Number pixels y direction mask logical TRUE, remove pixels outside mesh. mask sf Spatial object, return pixels covered object. format character; \"sf\", \"terra\" \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate lattice points covering a mesh — fm_pixels","text":"sf, SpatRaster, SpatialPixelsDataFrame covering mesh","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate lattice points covering a mesh — fm_pixels","text":"Fabian E. Bachl bachlfab@gmail.com Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate lattice points covering a mesh — fm_pixels","text":"","code":"# \\donttest{ if (require(\"ggplot2\", quietly = TRUE) &&   require(\"inlabru\", quietly = TRUE)) {   data(\"mrsea\", package = \"inlabru\")   pxl <- fm_pixels(mrsea$mesh,     nx = 50, ny = 50, mask = mrsea$boundary,     format = \"terra\"   )   ggplot() +     gg(pxl, fill = \"grey\", alpha = 0.5) +     gg(mrsea$mesh) } #> Warning: [setValues] values is larger than the size of cells  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse partial inverse — fm_qinv","title":"Sparse partial inverse — fm_qinv","text":"Sparse partial inverse","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse partial inverse — fm_qinv","text":"","code":"fm_qinv(A)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse partial inverse — fm_qinv","text":"symmetric matrix","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Load INLA safely for examples and tests — fm_safe_inla","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"Loads INLA package requireNamespace(\"INLA\", quietly = TRUE), optionally checks sets multicore num.threads INLA option.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"","code":"fm_safe_inla(multicore = NULL, quietly = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"multicore logical; TRUE, multiple cores allowed, INLA num.threads option checked altered. FALSE, forces num.threads=\"1:1\". Default: NULL, checks running testthat non-interactively, case sets multicore=FALSE, otherwise TRUE. quietly logical; TRUE, prints diagnostic messages. Default: FALSE.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"logical; TRUE INLA loaded safely, otherwise FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"","code":"if (FALSE) { if (fm_safe_inla()) {   # Run inla dependent calculations } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for potential sp version compatibility issues — fm_safe_sp","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"Loads sp package requireNamespace(\"sp\", quietly = TRUE), checks optionally sets sp evolution status flag rgdal unavailable.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"","code":"fm_safe_sp(quietly = FALSE, force = FALSE, minimum_version = \"1.4-5\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"quietly logical; TRUE, prints diagnostic messages. Default FALSE force logical; rgdal unavailable evolution status less 2L, return FALSE force FALSE. force TRUE, return TRUE package configuration safe, potentially forcing evolution status 2L. Default FALSE minimum_version character; minimum required INLA version. Default 1.4-5 (always match requirement package DESCRIPTION)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"Returns (invisibly) FALSE potential issue detected, give message quietly FALSE. Otherwise returns TRUE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"","code":"if (FALSE) { if (fm_safe_sp()) {   # Run sp dependent calculations } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a spatial segment object — fm_segm","title":"Make a spatial segment object — fm_segm","text":"Make spatial segment object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a spatial segment object — fm_segm","text":"","code":"fm_segm(...)  # S3 method for default fm_segm(...)  # S3 method for fm_segm fm_segm(..., grp.default = 0)  # S3 method for inla.mesh.segment fm_segm(..., grp.default = 0)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a spatial segment object — fm_segm","text":"... Currently passed inla.mesh.segment grp.default joining segments, use group label segments grp == NULL.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Make a spatial segment object — fm_segm","text":"fm_segm(fm_segm): Join multiple fm_segm objects single fm_segm object. fm_segm(inla.mesh.segment): Join multiple inla.mesh.segment objects single fm_segm object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Make a spatial segment object — fm_segm","text":"fm_segm(): Create new fm_segm object.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split lines at triangle edges — fm_split_lines","title":"Split lines at triangle edges — fm_split_lines","text":"Compute intersections line segments triangle edges, filter segment length zero.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split lines at triangle edges — fm_split_lines","text":"","code":"fm_split_lines(mesh, ...)  # S3 method for inla.mesh fm_split_lines(mesh, ...)  # S3 method for fm_mesh_2d fm_split_lines(mesh, sp, ep, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split lines at triangle edges — fm_split_lines","text":"mesh fm_mesh_2d inla.mesh object ... Passed method fm_mesh_2d. sp Start points lines ep End points lines","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split lines at triangle edges — fm_split_lines","text":"List start end points resulting splitting given lines: list(sp, ep, split.origin, idx, split.loc)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split lines at triangle edges — fm_split_lines","text":"Fabian E. Bachl f.e.bachl@bath.ac.uk Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":null,"dir":"Reference","previous_headings":"","what":"store points in different formats — fm_store_points","title":"store points in different formats — fm_store_points","text":"Convert matrix points different formats.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"store points in different formats — fm_store_points","text":"","code":"fm_store_points(loc, crs = NULL, info = NULL, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"store points in different formats — fm_store_points","text":"format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"store points in different formats — fm_store_points","text":"sf, data.frame, SpatialPointsDataFrame object, optional added information.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Object coordinate transformation — fm_transform","title":"Object coordinate transformation — fm_transform","text":"Handle transformation various inla objects according coordinate reference systems crs (sf::st_crs()), fm_crs,¬sp::CRS INLA::inla.CRS class.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object coordinate transformation — fm_transform","text":"","code":"fm_transform(x, crs = fm_crs(x), ...)  # S3 method for default fm_transform(x, crs = fm_crs(x), ..., crs0 = NULL)  # S3 method for matrix fm_transform(x, crs = NULL, ..., passthrough = FALSE, crs0 = NULL)  # S3 method for list fm_transform(x, crs = fm_crs(x), ...)  # S3 method for sf fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for sfc fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for sfg fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for Spatial fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for inla.mesh fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for fm_mesh_2d fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for inla.mesh.lattice fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for fm_lattice_2d fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for inla.mesh.segment fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for fm_segm fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object coordinate transformation — fm_transform","text":"x object transformed current CRS new CRS crs target crs object ... Potential additional arguments crs0 source crs object spatial classes without crs information passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. Use care!","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Project integration points to mesh vertices — fm_vertex_projection","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"Compute information assigning points vertices covering triangle","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"","code":"fm_vertex_projection(points, mesh)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"points SpatialPointsDataFrame, sf, list object mesh fm_mesh_2d inla.mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"SpatialPointsDataFrame, sf, list mesh vertices projected data attached","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract vertex locations from an inla.mesh — fm_vertices","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"Extracts vertices inla.mesh object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"","code":"fm_vertices(x, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"x inla.mesh object. format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"sf, data.frame, SpatialPointsDataFrame object, vertex coordinates, .vertex column vertex indices.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"Fabian E. Bachl bachlfab@gmail.com, Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract vertex locations from an inla.mesh — fm_vertices","text":"","code":"# \\donttest{ if (require(\"ggplot2\", quietly = TRUE) &&   require(\"inlabru\", quietly = TRUE)) {   data(\"mrsea\", package = \"inlabru\")   vrt <- fm_vertices(mrsea$mesh, format = \"sp\")   ggplot() +     gg(mrsea$mesh) +     gg(vrt, color = \"red\") }  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in fmesher — fmesher-deprecated","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"functions still attempt job, removed future version.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"","code":"fm_has_PROJ6()  fm_not_for_PROJ6(fun = NULL)  fm_not_for_PROJ4(fun = NULL)  fm_fallback_PROJ6(fun = NULL)  fm_requires_PROJ6(fun = NULL)  fm_as_sp_crs(x, ...)  fm_sp_get_crs(x)  fm_spTransform(x, ...)  # S3 method for default fm_spTransform(x, crs0 = NULL, crs1 = NULL, passthrough = FALSE, ...)  # S3 method for SpatialPoints fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for SpatialPointsDataFrame fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.lattice fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.segment fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  split_lines(mesh, sp, ep, filter.zero.length = TRUE)  fm_as_inla_mesh_segment(...)  fm_as_inla_mesh(...)  fm_sp2segment(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"fun name function requires PROJ6. Default: NULL, uses name calling function. x object transformed current CRS new CRS ... Potential additional arguments crs0 source sp::CRS inla.CRS object crs1 target sp::CRS inla.CRS object passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. CRSobj target sp::CRS inla.CRS object mesh fm_mesh_2d inla.mesh object sp Start points lines ep End points lines filter.zero.length logical; TRUE, remove line segments length zero  favour fm_split_lines().","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"CRS object, NULL valid CRS identified fm_segm object fm_mesh_2d object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"function convenience method workaround PROJ4/PROJ6 differences, lack crs extraction method Spatial objects. newer code, use fm_crs() instead, returns crs objects, use fm_CRS() extract/construct/convert old style sp::CRS objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"fm_has_PROJ6(): Detect whether PROJ6 available fm_not_for_PROJ6(): fm_not_for_PROJ6 called warn using old PROJ4 features even though PROJ6 available fm_not_for_PROJ4(): fm_not_for_PROJ4 called give error calling methods available PROJ6 fm_fallback_PROJ6(): Called warn falling back using old PROJ4 methods PROJ6 method implemented fm_requires_PROJ6(): Called give error PROJ6 required available fm_as_sp_crs(): Wrapper fm_CRS() sp::Spatial sp::CRS objects. fm_sp_get_crs(): Wrapper CRS(projargs) (PROJ4) CRS(wkt) sp::Spatial objects. fm_spTransform():  (See fm_transform() instead) Handle transformation various inla objects according coordinate reference systems sp::CRS INLA::inla.CRS class. fm_spTransform(default): default method handles low level transformation raw coordinates. split_lines(): Split lines mesh edges. fm_as_inla_mesh_segment(): Conversion inla.mesh.segment  favour fm_as_segm(). fm_as_inla_mesh(): Conversion inla.mesh.  favour fm_as_mesh_2d(). fm_sp2segment():  favour fm_as_segm()","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"","code":"if (FALSE) { if (interactive()) {   s <- sp::SpatialPoints(matrix(1:6, 3, 2), proj4string = fm_CRS(\"sphere\"))   fm_CRS(s) } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":null,"dir":"Reference","previous_headings":"","what":"Barycentric coordinate computation — fmesher_bary","title":"Barycentric coordinate computation — fmesher_bary","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"fmesher_bary(mesh_loc, mesh_tv, loc, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barycentric coordinate computation — fmesher_bary","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle loc numeric matrix; coordinates points locate mesh options list triangulation options","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2)) b <- fmesher_bary(m$s,                   m$tv,                   matrix(c(0.5, 0.5), 1, 2),                   list())"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Finite element matrix computation — fmesher_fem","title":"Finite element matrix computation — fmesher_fem","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finite element matrix computation — fmesher_fem","text":"","code":"fmesher_fem(mesh_loc, mesh_tv, fem_order_max, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finite element matrix computation — fmesher_fem","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle fem_order_max integer; highest operator order compute options list triangulation options (sphere_tolerance)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finite element matrix computation — fmesher_fem","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2)) b <- fmesher_fem(m$s, m$tv, fem_order_max = 2, list())"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Globe points — fmesher_globe_points","title":"Globe points — fmesher_globe_points","text":"Create points globe","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Globe points — fmesher_globe_points","text":"","code":"fmesher_globe_points(globe)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Globe points — fmesher_globe_points","text":"globe integer; number edge subdivision segments, 1 higher","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"fmesher_rcdt(   options,   loc,   tv = NULL,   boundary = NULL,   interior = NULL,   boundary_grp = NULL,   interior_grp = NULL )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"options list triangulation options loc numeric matrix; initial points include tv 3-column integer matrix 0-based vertex indices triangle boundary 2-column integer matrix 0-based vertex indices boundary edge constrain interior 2-column integer matrix 0-based vertex indices interior edge constraint boundary_grp integer vector group labels interior_grp integer vector group labels","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between sparse matrix types — fm_as_dgCMatrix","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"Conversion sparse matrix types","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"","code":"fm_as_dgCMatrix(x)  fm_as_dgTMatrix(x, unique = TRUE, ...)  fm_as_unpackedMatrix(x)  fm_as_fmesher_sparse(x)  # S3 method for default fm_as_dgCMatrix(x)  # S3 method for fmesher_sparse fm_as_dgCMatrix(x)  # S3 method for default fm_as_dgTMatrix(x, unique = TRUE, ...)  # S3 method for default fm_as_unpackedMatrix(x)  # S3 method for fmesher_sparse fm_as_unpackedMatrix(x)  # S3 method for fmesher_sparse fm_as_dgTMatrix(x, unique = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"x Object converted pretty logical; TRUE, ensures sparse triplet representation single entry non-zero matrix element.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split lines at triangle edges — fmesher_split_lines","title":"Split lines at triangle edges — fmesher_split_lines","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split lines at triangle edges — fmesher_split_lines","text":"","code":"fmesher_split_lines(mesh_loc, mesh_tv, loc, idx, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split lines at triangle edges — fmesher_split_lines","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle loc numeric coordinate matrix idx 2-column integer matrix options list triangulation options (sphere_tolerance)","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — globeproj","text":"","code":"globeproj(type = NULL, orient = NULL, xlim = NULL, ylim = NULL, scale = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — globeproj","text":"type Projection type, see .globeproj.types() orient long,lat,rotation xlim x-axis limits ylim y-axis limits scale x- y- scaling factors","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — globeproj","text":"B","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — globeproj","text":"Finn Lindgren","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — graticule.globeproj","text":"","code":"# S3 method for globeproj graticule(x, n = c(24, 12), add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — graticule.globeproj","text":"x globeproj object n number graticules (n-long, n-lat) compute add logical; TRUE, add existing plot .plot logical; TRUE, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — graticule.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection axis limits — limits.globeproj","title":"Projection axis limits — limits.globeproj","text":"Calculates projection axis limits","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection axis limits — limits.globeproj","text":"","code":"# S3 method for globeproj limits(x, loc = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection axis limits — limits.globeproj","text":"x globeproj object loc Coordinates mapped. ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection axis limits — limits.globeproj","text":"list: xlim X axis limits map domain ylim Y axis limits map domain","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Projection axis limits — limits.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit test helpers — local_testthat","title":"Unit test helpers — local_testthat","text":"Local helper functions package unit tests Local helper functions package unit tests","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit test helpers — local_testthat","text":"","code":"local_fm_testthat_assign(x, values, envir = parent.frame())  local_fm_testthat_tolerances(   tolerances = c(1e-04, 0.01, 0.1),   envir = parent.frame() )  local_fm_safe_inla(multicore = FALSE, quietly = TRUE, envir = parent.frame())  local_fm_testthat_setup(envir = parent.frame())"},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit test helpers — local_testthat","text":"x character; Name variable assign values object assign x envir environment exit handlers tolerances numeric vector length 3; [lowtol, midtol, hitol] multicore logical; TRUE, multiple cores allowed, INLA num.threads option checked altered. Default: FALSE, multicore allowed (used examples unit tests). quietly logical; TRUE, prints diagnostic messages. message always printed INLA num.threads option altered, regardless quietly argument. Default: TRUE.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Unit test helpers — local_testthat","text":"local_fm_testthat_assign(): Assign local variable. Useful easy cleanup global workspace withr::deferred_run() running tests interactively. local_fm_testthat_tolerances(): Assign test tolerances Assign local tolerance variables. Useful easy cleanup global workspace withr::deferred_run() running tests interactively. local_fm_safe_inla(): Tests set num.threads = \"1:1\" ensure within-system repeatability calling local_fm_safe_inla(); see also fm_safe_inla() local_fm_testthat_setup(): Initialise environment tests. called either top testfile, inside tests. call local_fm_safe_inla(), since may invoke skip called inside test relies INLA.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — outline.globeproj","text":"","code":"# S3 method for globeproj outline(x, add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — outline.globeproj","text":"x globeproj object add logical; TRUE, add existing plot .plot logical; try, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — outline.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a projected PolySet — plot_PolySet","title":"Plot a projected PolySet — plot_PolySet","text":"Plot projected PolySet","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"plot_PolySet(x, projection, add = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a projected PolySet — plot_PolySet","text":"x PolySet (see PBSmapping) projection globeproj objcet add logical; TRUE, add existing plot ... Additional parameters passed sp::plot","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"if (FALSE) { data(worldLL, package = \"PBSmapping\") plot_PolySet(worldLL, globeproj(\"longlat\"), add = FALSE) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a globeproj object — plot_globeproj","title":"Plot a globeproj object — plot_globeproj","text":"Plot globeproj object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a globeproj object — plot_globeproj","text":"","code":"plot_globeproj(   x,   xlim = NULL,   ylim = NULL,   outline = TRUE,   graticule = c(24, 12),   tissot = c(12, 6),   asp = 1,   add = FALSE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a globeproj object — plot_globeproj","text":"x globeproj object xlim, ylim x- y-axis limits outline logical graticule number graticules (n-long, n-lat) compute tissot number Tissot indicatrices (n-long, n-lat) compute asp aspect ratio. Default = 1 add logical; TRUE, add existing plot. Default: FALSE ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a globeproj object — plot_globeproj","text":"Nothing","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a globeproj object — plot_globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a globeproj object — plot_globeproj","text":"","code":"proj <- globeproj(\"moll\", orient = c(0, 0, 45)) plot_globeproj(proj, graticule = c(24, 12), add = FALSE, asp = 1, lty = 2, lwd = 0.5)"},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — project.globeproj","text":"","code":"# S3 method for globeproj project(x, loc, inverse = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — project.globeproj","text":"x globeproj object loc Coordinates mapped. inverse logical ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — project.globeproj","text":"B","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — project.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for ","title":"Check for ","text":"Check \"XYZ\", \"XYM\" \"XYZM\" sfg classes","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for ","text":"","code":"st_check_dim(sfc)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for ","text":"sfc sfc object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for ","text":"LOGICAL indicating sfg element sfc object class \"XYZ\", \"XYM\" \"XYZM\". Internal function used check 3 4 dimensional objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"seems though st_polygon check . now implements basic check disjoint regions using st_within()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"","code":"st_check_polygon(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"LOGICAL; TRUE sfg holes entirely inside outer ring, disjoint, otherwise FALSE. FALSE, attribute Message set character vector describing detected reasons.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate signed area for polygon — st_signed_area","title":"Calculate signed area for polygon — st_signed_area","text":"Calculate signed area polygon","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate signed area for polygon — st_signed_area","text":"","code":"st_signed_area(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate signed area for polygon — st_signed_area","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate signed area for polygon — st_signed_area","text":"Returns signed area.  Negative values indicate anti-clockwise winding direction.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate signed area for polygon — st_signed_area","text":"Andrew Seaton Andrew.Seaton.2@glasgow.ac.uk Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — tissot.globeproj","text":"","code":"# S3 method for globeproj tissot(x, n = c(12, 6), add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — tissot.globeproj","text":"x globeproj object n number Tissot indicatrices (n-long, n-lat) compute add logical; TRUE, add existing plot .plot logical; TRUE, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — tissot.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal WKT handling — fm_wkt_as_wkt_tree","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"Conversion WKT tree representation","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"","code":"fm_wkt_as_wkt_tree(x, ...)  fm_wkt_tree_as_wkt(x, pretty = FALSE, ...)  fm_wkt_tree_get_item(x, item, duplicate = 1)  fm_wkt_tree_set_item(x, item_tree, duplicate = 1)"},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"x WKT2 string, wkt_tree list structure ... Unused pretty logical; TRUE, use pretty formatting. Default: FALSE item character vector item labels identifying parameter item entry. duplicate items one match, duplicate indicates index number desired version. Default: 1 item_tree item tree identifying parameter item entry","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/news/index.html","id":"fmesher-009","dir":"Changelog","previous_headings":"","what":"fmesher 0.0.9","title":"fmesher 0.0.9","text":"Add basic Rcpp input/output conversion code Added NEWS.md file track changes package.","code":""}]
