[{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Finn Lindgren. Author, maintainer, copyright holder.            Finn Lindgren wrote main code Seaton Andy. Contributor, copyright holder.            Andy Seaton developed parts sf support Suen Man Ho. Contributor, copyright holder.            Man Ho Suen contributed features integration methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lindgren F (2023). fmesher: Triangle Meshes Related Geometry Tools. R package version 0.0.9.9017, https://inlabru-org.github.io/fmesher/.","code":"@Manual{,   title = {fmesher: Triangle Meshes and Related Geometry Tools},   author = {Finn Lindgren},   year = {2023},   note = {R package version 0.0.9.9017},   url = {https://inlabru-org.github.io/fmesher/}, }"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"fmesher-triangle-meshes-and-other-geometry-tools","dir":"","previous_headings":"","what":"Triangle Meshes and Related Geometry Tools","title":"Triangle Meshes and Related Geometry Tools","text":"Functions generate planar spherical triangle meshes, computes finite element calculations 1- 2-dimensional flat curved manifolds, functions lines polygons, transparent handling crs information coordinate transformation, including interoperability sf sp geometries. Experimental package take relevant subset features INLA inlabru packages, well extend .","code":""},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Triangle Meshes and Related Geometry Tools","text":"can install latest stable release fmesher GitHub: development version : track development version builds via inlabru-org.r-universe.dev: Note need feature/fmesher branch inlabru merged main development branch: install run fmesher full debug mode (quite experience!), use","code":"# install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\", ref = \"stable\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\") # Enable universe(s) by inlabru-org options(repos = c(   inlabruorg = \"https://inlabru-org.r-universe.dev\",   INLA = \"https://inla.r-inla-download.org/R/testing\",   CRAN = \"https://cloud.r-project.org\" ))  install.packages(\"fmesher\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/inlabru@feature/fmesher\") # install.packages(\"pkgbuild\") source(\"https://raw.githubusercontent.com/inlabru-org/fmesher/devel/misc/build.R\") fmesher_install(repo = \"inlabru-org/fmesher\", debug = TRUE)"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"online-documentation","dir":"","previous_headings":"","what":"Online documentation","title":"Triangle Meshes and Related Geometry Tools","text":"https://inlabru-org.github.io/fmesher/","code":""},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Triangle Meshes and Related Geometry Tools","text":"","code":"suppressPackageStartupMessages(library(fmesher))  # Port of the old inla mesh inla.mesh.create interface: (mesh <- fm_rcdt_2d_inla(   cbind(0, 0),   extend = list(offset = 1, n = 16L),   refine = list(max.edge = 0.5) )) #> fm_mesh_2d object: #>   Manifold:  R2 #>   V / E / T: 43 / 110 / 68 #>   Euler char:    1 #>   Constraints:   16 boundary edges (1 group: 0), 0 interior edges #>   Bounding box: (-1, 1) x (-1, 1) x (0,0) #>   Basis d.o.f.:  43  plot(mesh) # longlat for a spherical version of the Earth print(fm_crs(\"longlat_globe\")) #> Coordinate Reference System: #>   User input: +proj=longlat +ellps=sphere +no_defs  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\", #>         ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # longlat for a sphere of radius 1m print(fm_crs(\"longlat_norm\")) #> Coordinate Reference System: #>   User input: +proj=longlat +R=1 +no_defs  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # A sphere of radius 1m print(fm_crs(\"sphere\")) #> Coordinate Reference System: #>   User input: +proj=geocent +R=1 +units=m +no_defs  #>   wkt: #> GEODCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[Cartesian,3], #>         AXIS[\"(X)\",geocentricX, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Y)\",geocentricY, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Z)\",geocentricZ, #>             ORDER[3], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]]"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the matrix I/O system — C_matrixio_test","title":"Test the matrix I/O system — C_matrixio_test","text":"Test matrix /O system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the matrix I/O system — C_matrixio_test","text":"","code":"C_matrixio_test(args_input)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the matrix I/O system — C_matrixio_test","text":"args_input Input argument list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the matrix I/O system — C_matrixio_test","text":"","code":"A <- Matrix::sparseMatrix(i=1:4,j=4:1,x=2:5,dims=c(4,4)) out <- C_matrixio_test(args_input=list(   A = fm_as_dgTMatrix(A),   Bd = matrix((11:22)+0.5,4,3),   Bi = matrix(121L:132L,4,3),   B1d=as.matrix((31:34)+0.5),   B1i=as.matrix(41L:44L),   Ad = fm_as_fmesher_sparse(A) )) #> Rcpp_interface.cc(895)\tBdd: 4 3 #> 11.5 15.5 19.5  #> 12.5 16.5 20.5  #> 13.5 17.5 21.5  #> 14.5 18.5 22.5  #>  #> Rcpp_interface.cc(896)\tBdi: 4 3 #> 11 15 19  #> 12 16 20  #> 13 17 21  #> 14 18 22  #>  #> Rcpp_interface.cc(897)\tBid: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(898)\tBii: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(906)\tBdd1: 4 1 #> 31.5  #> 32.5  #> 33.5  #> 34.5  #>  #> Rcpp_interface.cc(907)\tBdd_1: 4 1 #> 15.5  #> 16.5  #> 17.5  #> 18.5  #>  #> Rcpp_interface.cc(908)\tBdi1: 4 1 #> 31  #> 32  #> 33  #> 34  #>  #> Rcpp_interface.cc(909)\tBid1: 4 1 #> 41  #> 42  #> 43  #> 44  #>  #> Rcpp_interface.cc(910)\tBii1: 4 1 #> 41  #> 42  #> 43  #> 44  #>  #> Rcpp_interface.cc(917)\tBdd3: 4 3 #> 11.5 15.5 19.5  #> 12.5 16.5 20.5  #> 13.5 17.5 21.5  #> 14.5 18.5 22.5  #>  #> Rcpp_interface.cc(918)\tBdi3: 4 3 #> 11 15 19  #> 12 16 20  #> 13 17 21  #> 14 18 22  #>  #> Rcpp_interface.cc(919)\tBid3: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(920)\tBii3: 4 3 #> 121 125 129  #> 122 126 130  #> 123 127 131  #> 124 128 132  #>  #> Rcpp_interface.cc(935)\t0 0 Aout <- fm_as_dgTMatrix(out[[\"Ad\"]]) A #> 4 x 4 sparse Matrix of class \"dgCMatrix\" #>              #> [1,] . . . 2 #> [2,] . . 3 . #> [3,] . 4 . . #> [4,] 5 . . . Aout #> 4 x 4 sparse Matrix of class \"dgTMatrix\" #>              #> [1,] . . . 2 #> [2,] . . 3 . #> [3,] . 4 . . #> [4,] 5 . . ."},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the matrix I/O system — C_matrixio_test2","title":"Test the matrix I/O system — C_matrixio_test2","text":"Test matrix /O system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the matrix I/O system — C_matrixio_test2","text":"","code":"C_matrixio_test2(args_input)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the matrix I/O system — C_matrixio_test2","text":"args_input Input argument list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the matrix I/O system — C_matrixio_test2","text":"","code":"A <- Matrix::sparseMatrix(i=1:4,j=4:1,x=2:5,dims=c(4,4)) inp <- list(   A = fm_as_dgTMatrix(A),   Bd = matrix((11:22)+0.5,4,3),   Bi = matrix(121L:132L,4,3),   B1d=as.matrix((31:34)+0.5),   B1i=as.matrix(41L:44L),   Ad = fm_as_fmesher_sparse(A) ) inp[[\"BdM\"]] <- as(inp[[\"Bd\"]], \"unpackedMatrix\") out <- C_matrixio_test2(args_input = inp) str(out) #> List of 7 #>  $ A  :Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:4] 0 1 2 3 #>   .. ..@ j       : int [1:4] 3 2 1 0 #>   .. ..@ Dim     : int [1:2] 4 4 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:4] 2 3 4 5 #>   .. ..@ factors : list() #>  $ Ad :Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:4] 0 1 2 3 #>   .. ..@ j       : int [1:4] 3 2 1 0 #>   .. ..@ Dim     : int [1:2] 4 4 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:4] 2 3 4 5 #>   .. ..@ factors : list() #>  $ B1d: num [1:4, 1] 31.5 32.5 33.5 34.5 #>  $ B1i: int [1:4, 1] 41 42 43 44 #>  $ Bd : num [1:4, 1:3] 11.5 12.5 13.5 14.5 15.5 16.5 17.5 18.5 19.5 20.5 ... #>  $ BdM:Formal class 'dgTMatrix' [package \"Matrix\"] with 6 slots #>   .. ..@ i       : int [1:12] 0 0 0 1 1 1 2 2 2 3 ... #>   .. ..@ j       : int [1:12] 0 1 2 0 1 2 0 1 2 0 ... #>   .. ..@ Dim     : int [1:2] 4 3 #>   .. ..@ Dimnames:List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. ..@ x       : num [1:12] 11.5 15.5 19.5 12.5 16.5 20.5 13.5 17.5 21.5 14.5 ... #>   .. ..@ factors : list() #>  $ Bi : int [1:4, 1:3] 121 122 123 124 125 126 127 128 129 130 ..."},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sparse matrix inverse — C_qinv","title":"Compute sparse matrix inverse — C_qinv","text":"Compute sparse matrix inverse","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sparse matrix inverse — C_qinv","text":"","code":"C_qinv(AA)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sparse matrix inverse — C_qinv","text":"AA sparse matrix","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Call stack utility functions — call-stack","title":"Call stack utility functions — call-stack","text":"Helper functions displaying call stack information","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call stack utility functions — call-stack","text":"","code":"fm_caller_name(which = 0L, override = NULL)  fm_call_stack(start = 0L, end = 0L, with_numbers = TRUE, ...)  fm_try_callstack(expr)"},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call stack utility functions — call-stack","text":"TODO override TODO start TODO end TODO with_numbers TODO ... TODO expr expression evaluate","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/call-stack.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Call stack utility functions — call-stack","text":"fm_call_stack(): fm_try_callstack(): Inspired berryFunctions::tryStack","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coordinate reference system object — fm_CRS","title":"Create a coordinate reference system object — fm_CRS","text":"Creates either CRS object inla.CRS object, describing coordinate reference system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_CRS is.na(x)  # S3 method for crs fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_crs fm_CRS(x, oblique = NULL, ...)  # S3 method for Spatial fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_CRS fm_CRS(x, oblique = NULL, ...)  # S3 method for sf fm_CRS(x, oblique = NULL, ...)  # S3 method for sfc fm_CRS(x, oblique = NULL, ...)  # S3 method for sfg fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_mesh_2d fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_lattice fm_CRS(x, oblique = NULL, ...)  # S3 method for fm_segm fm_CRS(x, oblique = NULL, ...)  # S3 method for matrix fm_CRS(x, oblique = NULL, ...)  # S3 method for CRS fm_CRS(x, oblique = NULL, ...)  # S3 method for default fm_CRS(   x,   oblique = NULL,   projargs = NULL,   doCheckCRSArgs = NULL,   args = NULL,   SRS_string = NULL,   ... )  # S3 method for inla.CRS is.na(x)  # S3 method for inla.CRS fm_CRS(x, oblique = NULL, ...)  # S3 method for inla.mesh fm_CRS(x, oblique = NULL, ...)  # S3 method for inla.mesh.lattice fm_CRS(x, oblique = NULL, ...)  # S3 method for inla.mesh.segment fm_CRS(x, oblique = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coordinate reference system object — fm_CRS","text":"x Object convert CRS extract CRS information . oblique Vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section fm_crs(). ... Additional parameters, passed sub-methods. projargs Either 1) projection argument string suitable input sp::CRS, 2) existing CRS object, 3) shortcut reference string predefined projection; run names(fm_wkt_predef()) valid predefined projections. (projargs compatibility parameter can used default fm_CRS() method) doCheckCRSArgs ignored. args optional list name/value pairs add /override PROJ4 arguments projargs.  name=value converted \"+name=value\", name=NA converted \"+name\". SRS_string WKT2 string defining coordinate system; see sp::CRS. takes precedence projargs.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a coordinate reference system object — fm_CRS","text":"Either sp::CRS object inla.CRS object, depending coordinate reference system described parameters can expressed pure sp::CRS object . S3 inla.CRS object list, usually (necessarily) containing least one element: crs basic sp::CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a coordinate reference system object — fm_CRS","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counterclockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a coordinate reference system object — fm_CRS","text":".na(fm_CRS): Check fm_CRS NA crs information NA obliqueness .na(inla.CRS): Check inla.CRS NA crs information NA obliqueness","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a coordinate reference system object — fm_CRS","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"crs1 <- fm_CRS(\"longlat_globe\") crs2 <- fm_CRS(\"lambert_globe\") crs3 <- fm_CRS(\"mollweide_norm\") crs4 <- fm_CRS(\"hammer_globe\") crs5 <- fm_CRS(\"sphere\") crs6 <- fm_CRS(\"globe\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":null,"dir":"Reference","previous_headings":"","what":"Show expanded CRS arguments — fm_CRS_as_list","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Wrappers sp::CRS inla.CRS objects handle coordinate reference system argument string. methods longer used PROJ6/rgdal3; see fm_wkt() fm_proj4string() new approach.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"fm_CRS_as_list(x, ...)  fm_list_as_CRS(x, ...)  fm_CRSargs(x, ...)  fm_list_as_CRSargs(x, ...)  fm_CRSargs_as_list(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"x sp::CRS inla.CRS object (fm_CRSargs fm_CRS_as_list), character string (fm_CRSargs_as_list), list (fm_list_as_CRS fm_list_as_CRSargs). ... Additional arguments passed methods.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"fm_CRSargs fm_list_as_CRSargs, character string PROJ.4 arguments. fm_CRS_as_list fm_CRSargs_as_list, list name/value pairs. fm_list_as_CRS, CRS inla.CRS object. fm_list_as_CRSargs(), CRS proj4 string name=value pair list fm_CRSargs_as_list(), list name=value pairs CRS proj4 string","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"crs0 <- fm_CRS(\"longlat_norm\") p4s <- fm_proj4string(crs0) lst <- fm_CRSargs_as_list(p4s) crs1 <- fm_list_as_CRS(lst) lst$a <- 2 crs2 <- fm_CRS(p4s, args = lst) print(fm_proj4string(crs0)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_proj4string(crs1)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_proj4string(crs2)) #> [1] \"+proj=longlat +R=1 +no_defs\""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fmesher objects — fm_as_fm","title":"Convert objects to fmesher objects — fm_as_fm","text":"Used conversion general objects (usually inla.mesh INLA specific classes) fmesher classes.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fmesher objects — fm_as_fm","text":"","code":"fm_as_fm(x, ...)  ## S3 method for class 'NULL' fm_as_fm(x, ...)  # S3 method for fm_mesh_1d fm_as_fm(x, ...)  # S3 method for fm_mesh_2d fm_as_fm(x, ...)  # S3 method for fm_segm fm_as_fm(x, ...)  # S3 method for fm_lattice_2d fm_as_fm(x, ...)  # S3 method for fm_bbox fm_as_fm(x, ...)  # S3 method for crs fm_as_fm(x, ...)  # S3 method for CRS fm_as_fm(x, ...)  # S3 method for fm_crs fm_as_fm(x, ...)  # S3 method for inla.CRS fm_as_fm(x, ...)  # S3 method for inla.mesh.1d fm_as_fm(x, ...)  # S3 method for inla.mesh fm_as_fm(x, ...)  # S3 method for inla.mesh.segment fm_as_fm(x, ...)  # S3 method for inla.mesh.lattice fm_as_fm(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_fm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fmesher objects — fm_as_fm","text":"x Object converted ... Arguments forwarded submethods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"Convert objects fm_lattice_2d","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"","code":"fm_as_lattice_2d(...)  fm_as_lattice_2d_list(x, ...)  # S3 method for fm_lattice_2d fm_as_lattice_2d(x, ...)  # S3 method for inla.mesh.lattice fm_as_lattice_2d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"... Arguments passed submethods x Object converted","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_lattice_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_lattice_2d — fm_as_lattice_2d","text":"fm_as_lattice_2d(): Convert object fm_lattice_2d. fm_as_lattice_2d_list(): Convert element list","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_segm — fm_as_mesh_1d","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"Convert objects fm_segm","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"","code":"fm_as_mesh_1d(x, ...)  fm_as_mesh_1d_list(x, ...)  # S3 method for fm_mesh_1d fm_as_mesh_1d(x, ...)  # S3 method for inla.mesh.1d fm_as_mesh_1d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"x Object converted ... Arguments passed submethods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_1d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_segm — fm_as_mesh_1d","text":"fm_as_mesh_1d(): Convert object fm_mesh_1d. fm_as_mesh_1d_list(): Convert element list","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"Convert objects fm_mesh_2d","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"","code":"fm_as_mesh_2d(x, ...)  fm_as_mesh_2d_list(x, ...)  # S3 method for fm_mesh_2d fm_as_mesh_2d(x, ...)  # S3 method for inla.mesh fm_as_mesh_2d(x, ...)  # S3 method for sfg fm_as_mesh_2d(x, ...)  # S3 method for sfc_MULTIPOLYGON fm_as_mesh_2d(x, ...)  # S3 method for sfc_POLYGON fm_as_mesh_2d(x, ...)  # S3 method for sf fm_as_mesh_2d(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"x Object converted ... Arguments passed submethods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_mesh_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_mesh_2d — fm_as_mesh_2d","text":"fm_as_mesh_2d(): Convert object fm_mesh_2d. fm_as_mesh_2d_list(): Convert element list","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_segm — fm_as_segm","title":"Convert objects to fm_segm — fm_as_segm","text":"Convert objects fm_segm","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_segm — fm_as_segm","text":"","code":"fm_as_segm(x, ...)  fm_as_segm_list(x, ...)  # S3 method for fm_segm fm_as_segm(x, ...)  # S3 method for inla.mesh.segment fm_as_segm(x, ...)  # S3 method for sfg fm_as_segm(x, ...)  # S3 method for sfc_POINT fm_as_segm(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, ...)  # S3 method for sfc_LINESTRING fm_as_segm(x, join = TRUE, grp = NULL, reverse = FALSE, ...)  # S3 method for sfc_MULTILINESTRING fm_as_segm(x, join = TRUE, grp = NULL, reverse = FALSE, ...)  # S3 method for sfc_POLYGON fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for sfc_MULTIPOLYGON fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for sfc_GEOMETRY fm_as_segm(x, grp = NULL, join = TRUE, ...)  # S3 method for sf fm_as_segm(x, ...)  # S3 method for matrix fm_as_segm(   x,   reverse = FALSE,   grp = NULL,   is.bnd = FALSE,   crs = NULL,   closed = FALSE,   ... )  # S3 method for SpatialPoints fm_as_segm(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, closed = FALSE, ...)  # S3 method for SpatialPointsDataFrame fm_as_segm(x, ...)  # S3 method for Line fm_as_segm(x, reverse = FALSE, grp = NULL, crs = NULL, ...)  # S3 method for Lines fm_as_segm(x, join = TRUE, grp = NULL, crs = NULL, ...)  # S3 method for SpatialLines fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for SpatialLinesDataFrame fm_as_segm(x, ...)  # S3 method for SpatialPolygons fm_as_segm(x, join = TRUE, grp = NULL, ...)  # S3 method for SpatialPolygonsDataFrame fm_as_segm(x, ...)  # S3 method for Polygons fm_as_segm(x, join = TRUE, crs = NULL, grp = NULL, ...)  # S3 method for Polygon fm_as_segm(x, crs = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_segm — fm_as_segm","text":"x Object converted. ... Arguments passed submethods reverse logical; TRUE, reverse order input points. Default FALSE grp non-null, integer vector grouping labels one segment. Default NULL .bnd logical; TRUE, set boundary flag segments. Default TRUE join logical; TRUE, join input segments common vertices. Default TRUE crs crs object closed logical; whether treat point sequence closed polygon. Default: FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_segm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_segm — fm_as_segm","text":"fm_as_segm(): Convert object fm_segm. fm_as_segm_list(): Convert element, making fm_segm_list object","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion methods from mesh related objects to sfc — fm_as_sfc","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"Conversion methods mesh related objects sfc","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"","code":"fm_as_sfc(x, ...)  # S3 method for inla.mesh fm_as_sfc(x, ..., multi = FALSE)  # S3 method for fm_mesh_2d fm_as_sfc(x, ..., multi = FALSE)  # S3 method for inla.mesh.segment fm_as_sfc(x, ..., multi = FALSE)  # S3 method for fm_segm fm_as_sfc(x, ..., multi = FALSE)  # S3 method for sfc fm_as_sfc(x, ...)  # S3 method for sf fm_as_sfc(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"x object coerced/transformed/converted another class ... Arguments passed methods multi logical; TRUE, attempt sfc_MULTIPOLYGON, otherwise set sfc_POLYGON. Default FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"fm_as_sfc: sfc_MULTIPOLYGON sfc_POLYGON object fm_as_sfc: sfc_MULTIPOLYGON sfc_POLYGON object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_sfc.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Conversion methods from mesh related objects to sfc — fm_as_sfc","text":"fm_as_sfc(inla.mesh): fm_as_sfc(fm_mesh_2d): fm_as_sfc(inla.mesh.segment): fm_as_sfc(fm_segm):","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to fm_tensor — fm_as_tensor","title":"Convert objects to fm_tensor — fm_as_tensor","text":"Convert objects fm_tensor","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_tensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to fm_tensor — fm_as_tensor","text":"","code":"fm_as_tensor(x, ...)  fm_as_tensor_list(x, ...)  # S3 method for fm_tensor fm_as_tensor(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to fm_tensor — fm_as_tensor","text":"x Object converted ... Arguments passed submethods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as_tensor.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Convert objects to fm_tensor — fm_as_tensor","text":"fm_as_tensor(): Convert object fm_tensor. fm_as_tensor_list(): Convert element list","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute barycentric coordinates — fm_bary","title":"Compute barycentric coordinates — fm_bary","text":"Identify knot intervals triangles compute barycentric coordinates","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute barycentric coordinates — fm_bary","text":"","code":"fm_bary(mesh, loc, ...)  # S3 method for fm_mesh_1d fm_bary(mesh, loc, method = c(\"linear\", \"nearest\"), ...)  # S3 method for fm_mesh_2d fm_bary(mesh, loc, crs = NULL, ...)  # S3 method for inla.mesh fm_bary(mesh, ...)  # S3 method for inla.mesh.1d fm_bary(mesh, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute barycentric coordinates — fm_bary","text":"mesh fm_mesh_1d fm_mesh_2d object loc Points identify containing triangle, corresponding barycentric coordinates. May vector (1d) raw matrix coordinates, sf, sp point information (2d). ... Arguments forwarded sub-methods. method character; method defining barycentric coordinates crs Optional crs information loc","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bary.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Compute barycentric coordinates — fm_bary","text":"fm_bary(fm_mesh_1d): Return list elements t (start endpoint knot indices) bary (barycentric coordinates), 2-column matrices. backwards compatibility old inla code, copy index=t also included list. fm_bary(fm_mesh_2d): list elements t (vector triangle indices) bary (3-column matrix barycentric coordinates). Points found give NA entries t bary.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mapping matrix between mesh function space and points — fm_basis","title":"Compute mapping matrix between mesh function space and points — fm_basis","text":"Computes basis mapping matrix function space mesh, locations.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mapping matrix between mesh function space and points — fm_basis","text":"","code":"fm_basis(x, ...)  # S3 method for default fm_basis(x, loc, ...)  # S3 method for fm_mesh_1d fm_basis(x, loc, weights = NULL, derivatives = NULL, ...)  # S3 method for fm_mesh_2d fm_basis(x, loc, weights = NULL, derivatives = NULL, ...)  # S3 method for inla.mesh.1d fm_basis(x, loc, ...)  # S3 method for inla.mesh fm_basis(x, loc, ...)  # S3 method for fm_evaluator fm_basis(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mapping matrix between mesh function space and points — fm_basis","text":"x object supported fm_evaluator() class ... Currently unused loc set points class supported fm_evaluator(x, loc = loc) weights Optional weight matrix apply (left) derivatives non-NULL logical, return list, optionally including derivative matrices.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute mapping matrix between mesh function space and points — fm_basis","text":"sparseMatrix fm_mesh_1d, list elements projection matrix, u(loc_i)=sum_j A_ij w_i d1A, d2A Derivative weight matrices, du/dx(loc_i)=sum_j dx_ij w_i, etc. fm_mesh_2d, list elements projection matrix, u(loc_i)=sum_j A_ij w_i dx, dy, dz Derivative weight matrices, du/dx(loc_i)=sum_j dx_ij w_i, etc.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute mapping matrix between mesh function space and points — fm_basis","text":"","code":"# Compute basis mapping matrix str(fm_basis(fmexample$mesh, fmexample$loc)) #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:30] 3 1 7 8 5 0 6 4 2 3 ... #>   ..@ p       : int [1:299] 0 0 0 0 0 0 0 0 0 0 ... #>   ..@ Dim     : int [1:2] 10 298 #>   ..@ Dimnames:List of 2 #>   .. ..$ : NULL #>   .. ..$ : NULL #>   ..@ x       : num [1:30] 0.041 0.3065 0.6899 0.4015 0.0253 ... #>   ..@ factors : list()"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Bounding box class — fm_bbox","title":"Bounding box class — fm_bbox","text":"Simple class handling bounding box information","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bounding box class — fm_bbox","text":"","code":"fm_bbox(...)  # S3 method for list fm_bbox(x, ...)  ## S3 method for class 'NULL' fm_bbox(...)  # S3 method for matrix fm_bbox(x, ...)  # S3 method for fm_bbox fm_bbox(x, ...)  # S3 method for fm_mesh_2d fm_bbox(x, ...)  # S3 method for fm_segm fm_bbox(x, ...)  # S3 method for fm_lattice_2d fm_bbox(x, ...)  # S3 method for sf fm_bbox(x, ...)  # S3 method for sfg fm_bbox(x, ...)  # S3 method for sfc fm_bbox(x, ...)  # S3 method for bbox fm_bbox(x, ...)  # S3 method for inla.mesh fm_bbox(x, ...)  # S3 method for inla.mesh.segment fm_bbox(x, ...)  fm_as_bbox(x, ...)  # S3 method for fm_bbox [(x, i)  # S3 method for fm_bbox c(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bounding box class — fm_bbox","text":"... Passed sub-methods x fm_bbox object extract element(s) indices specifying elements extract","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bounding box class — fm_bbox","text":"fm_bbox_list object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Bounding box class — fm_bbox","text":"fm_bbox(list): Construct bounding box precomputed interval information, stored list 2-vector ranges, list(xlim, ylim, ...).","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Bounding box class — fm_bbox","text":"[: Extract sub-list c(fm_bbox): ... arguments fm_bbox objects, coercible fm_as_bbox(list(...)).","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bounding box class — fm_bbox","text":"","code":"fm_bbox(matrix(1:6, 3, 2)) #> Bounding box: (1,3) x (4,6) m <- c(A = fm_bbox(cbind(1, 2), B = fm_bbox(cbind(3, 4)))) str(m) #> List of 1 #>  $ A:List of 2 #>   ..$ : num [1:2] 1 1 #>   ..$ : num [1:2] 2 2 #>   ..- attr(*, \"class\")= chr \"fm_bbox\" #>  - attr(*, \"class\")= chr [1:2] \"fm_bbox_list\" \"fm_list\" str(m[2]) #> List of 1 #>  $ NA: NULL #>  - attr(*, \"class\")= chr [1:2] \"fm_bbox_list\" \"fm_list\""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Blockwise aggregation matrices — fm_block","title":"Blockwise aggregation matrices — fm_block","text":"Creates aggregation matrix blockwise aggregation, optional weighting.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blockwise aggregation matrices — fm_block","text":"","code":"fm_block(   block = NULL,   weights = NULL,   log_weights = NULL,   rescale = FALSE,   n_block = NULL )  fm_block_eval(   block = NULL,   weights = NULL,   log_weights = NULL,   rescale = FALSE,   n_block = NULL,   values = NULL )  fm_block_logsumexp_eval(   block = NULL,   weights = NULL,   log_weights = NULL,   rescale = FALSE,   n_block = NULL,   values = NULL,   log = TRUE )  fm_block_weights(   block = NULL,   weights = NULL,   log_weights = NULL,   rescale = FALSE,   n_block = NULL )  fm_block_log_weights(   block = NULL,   weights = NULL,   log_weights = NULL,   rescale = FALSE,   n_block = NULL )  fm_block_log_shift(block = NULL, log_weights = NULL, n_block = NULL)  fm_block_prep(   block = NULL,   log_weights = NULL,   weights = NULL,   n_block = NULL,   values = NULL,   n_values = NULL,   force_log = FALSE )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blockwise aggregation matrices — fm_block","text":"block integer vector; block information. NULL, rep(1L, block_len) used, block_len determined length(log_weights))) length(weights))). single scalar also repeated vector corresponding length weights. weights Optional weight vector log_weights Optional log(weights) vector. Overrides weights non-NULL. rescale logical; TRUE, normalise weights sum(weights) sum(exp(log_weights)) within block. Default: FALSE n_block integer; number conceptual blocks. needs specified larger max(block), keep output consistent size different inputs. values Vector blockwise aggregated log TRUE (default), return log-sum-exp. FALSE, return sum-exp. n_values supplied, used instead length(values) determine value vector input length. force_log FALSE (default), passes either weights log_weights , provided, log_weights taking precedence. TRUE, forces computation log_weights, whether given input .","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_block.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Blockwise aggregation matrices — fm_block","text":"fm_block(): (sparse) matrix size n_block times length(block). fm_block_eval(): Evaluate aggregation. efficient alternative .vector(fm_block(...) %*% values). fm_block_logsumexp_eval(): Evaluate log-sum-exp aggregation. efficient numerically stable alternative log(.vector(fm_block(...) %*% exp(values))). fm_block_weights(): Computes (optionally) blockwise renormalised weights fm_block_log_weights(): Computes (optionally) blockwise renormalised log-weights fm_block_log_shift(): Computes shifts stable blocked log-sum-exp. compute \\(\\log(\\sum_{; \\text{block}_i=k} \\exp(v_i) w_i)\\) block k, first compute combined values weights, shift:   aggregate values within block:   implementation uses faster method:   fm_block_prep(): Helper function preparing block, weights, log_weights, n_block inputs.","code":"w_values <- values + fm_block_log_weights(block, log_weights = log_weights) shift <- fm_block_log_shift(block, log_weights = w_values) agg <- aggregate(exp(w_values - shift[block]),                  by = list(block = block),                  \\(x) log(sum(x))) agg$x <- agg$x + shift[agg$block] as.vector(   Matrix::sparseMatrix(     i = block,     j = rep(1L, length(block)),     x = exp(w_values - shift[block]),     dims = c(n_block, 1)) ) + shift"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blockwise aggregation matrices — fm_block","text":"","code":"block <- rep(1:2, 3:2) fm_block(block) #> 2 x 5 sparse Matrix of class \"dgCMatrix\" #>                #> [1,] 1 1 1 . . #> [2,] . . . 1 1 fm_block(block, rescale = TRUE) #> 2 x 5 sparse Matrix of class \"dgCMatrix\" #>                                            #> [1,] 0.3333333 0.3333333 0.3333333 .   .   #> [2,] .         .         .         0.5 0.5 fm_block(block, log_weights = -2:2, rescale = TRUE) #> 2 x 5 sparse Matrix of class \"dgCMatrix\" #>                                                        #> [1,] 0.09003057 0.2447285 0.665241 .         .         #> [2,] .          .         .        0.2689414 0.7310586 fm_block_eval(   block,   weights = 1:5,   rescale = TRUE,   values = 11:15 ) #> [1] 12.33333 14.55556 fm_block_logsumexp_eval(   block,   weights = 1:5,   rescale = TRUE,   values = log(11:15),   log = FALSE ) #> [1] 12.33333 14.55556"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"Computes centroids triangles fm_mesh_2d() object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"","code":"fm_centroids(x, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"x fm_mesh_2d inla.mesh object. format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"sf, data.frame, SpatialPointsDataFrame object, vertex coordinates, .triangle column triangle indices.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract triangle centroids from an fm_mesh_2d — fm_centroids","text":"","code":"if (require(\"ggplot2\", quietly = TRUE)) {   vrt <- fm_centroids(fmexample$mesh, format = \"sf\")   ggplot() +     geom_sf(data = fm_as_sfc(fmexample$mesh)) +     geom_sf(data = vrt, color = \"red\") }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which mesh triangles are inside a polygon — fm_contains","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"Wrapper sf::st_contains() (previously sp::()) method find triangle centroids vertices inside sf sp polygon objects","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"","code":"fm_contains(x, y, ...)  # S3 method for Spatial fm_contains(x, y, ...)  # S3 method for sf fm_contains(x, y, ...)  # S3 method for sfc fm_contains(x, y, ..., type = c(\"centroid\", \"vertex\"))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"x geometry (typically sf sp::SpatialPolygons object) queries y fm_mesh_2d() inla.mesh object ... Passed methods type query type; either 'centroid' (default, triangle centroids), 'vertex' (mesh vertices)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"List vectors triangle indices (type 'centroid') vertex indices (type 'vertex'). list one entry per row sf object. Use unlist(fm_contains(...)) combined union needed.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"Haakon Bakka, bakka@r-inla.org, Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_contains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check which mesh triangles are inside a polygon — fm_contains","text":"","code":"if (TRUE &&   fm_safe_sp()) {   # Create a polygon and a mesh   obj <- sp::SpatialPolygons(     list(sp::Polygons(       list(sp::Polygon(rbind(         c(0, 0),         c(50, 0),         c(50, 50),         c(0, 50)       ))),       ID = 1     )),     proj4string = fm_CRS(\"longlat_globe\")   )   mesh <- fm_rcdt_2d_inla(globe = 2, crs = fm_crs(\"sphere\"))    ## 3 vertices found in the polygon   fm_contains(obj, mesh, type = \"vertex\")    ## 3 triangles found in the polygon   fm_contains(obj, mesh)    ## Multiple transformations can lead to slightly different results due to edge cases   ## 4 triangles found in the polygon   fm_contains(     obj,     fm_transform(mesh, crs = fm_crs(\"mollweide_norm\"))   ) } #> Sparse geometry binary predicate list of length 1, where the predicate #> was `contains' #>  1: 7, 15, 18, 35"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":null,"dir":"Reference","previous_headings":"","what":"(Blockwise) cross product of integration points — fm_cprod","title":"(Blockwise) cross product of integration points — fm_cprod","text":"Calculates groupwise cross product integration points different dimensions multiplies weights accordingly. object defining points particular dimension weights attached weights assumed 1.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Blockwise) cross product of integration points — fm_cprod","text":"","code":"fm_cprod(..., na.rm = NULL, .blockwise = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Blockwise) cross product of integration points — fm_cprod","text":"... data.frame, sf, SpatialPointsDataFrame objects, one usually obtained call fm_int() method. na.rm logical; TRUE, rows weight NA non-overlapping full_join removed; FALSE, set undefined weights NA. NULL (default), act TRUE, warn elements needed removing. .blockwise logical; FALSE, computes full tensor product integration. TRUE, computes within-block tensor product integration (used internally fm_int()). Default FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Blockwise) cross product of integration points — fm_cprod","text":"data.frame, sf, SpatialPointsDataFrame multidimensional integration points weights","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_cprod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Blockwise) cross product of integration points — fm_cprod","text":"","code":"# \\donttest{ # fm_int needs INLA if (TRUE &&   require(\"ggplot2\")) {   # Create integration points in dimension 'myDim' and 'myDiscreteDim'   ips1 <- fm_int(fm_mesh_1d(1:20),     rbind(c(0, 3), c(3, 8)),     name = \"myDim\"   )   ips2 <- fm_int(domain = c(1, 2, 4), name = \"myDiscreteDim\")    # Calculate the cross product   ips <- fm_cprod(ips1, ips2)    # Plot the integration points   ggplot(ips) +     geom_point(aes(myDim, myDiscreteDim, size = weight)) +     scale_size_area() }  # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment operators for crs information objects — fm_crs<-","title":"Assignment operators for crs information objects — fm_crs<-","text":"Assigns new crs information.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment operators for crs information objects — fm_crs<-","text":"","code":"fm_crs(x) <- value  fm_crs_oblique(x) <- value  ## S3 replacement method for class 'NULL' fm_crs(x) <- value  ## S3 replacement method for class 'NULL' fm_crs_oblique(x) <- value  # S3 method for fm_segm fm_crs(x) <- value  # S3 method for fm_list fm_crs(x) <- value  # S3 method for fm_mesh_2d fm_crs(x) <- value  # S3 method for fm_lattice_2d fm_crs(x) <- value  # S3 method for sf fm_crs(x) <- value  # S3 method for sfg fm_crs(x) <- value  # S3 method for sfc fm_crs(x) <- value  # S3 method for Spatial fm_crs(x) <- value  # S3 method for crs fm_crs_oblique(x) <- value  # S3 method for CRS fm_crs_oblique(x) <- value  # S3 method for fm_CRS fm_crs_oblique(x) <- value  # S3 method for fm_crs fm_crs_oblique(x) <- value  # S3 method for fm_segm fm_crs_oblique(x) <- value  # S3 method for fm_mesh_2d fm_crs_oblique(x) <- value  # S3 method for fm_lattice_2d fm_crs_oblique(x) <- value  # S3 method for inla.CRS fm_crs_oblique(x) <- value"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assignment operators for crs information objects — fm_crs<-","text":"x Object assign crs information value fm_crs<-(), object supported fm_crs(value). fm_crs_oblique<-(), NA numeric vector, see oblique argument fm_crs(). assignment, NULL treated NA.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs-set.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Assignment operators for crs information objects — fm_crs<-","text":"fm_crs(x) <- value: Automatically converts input value fm_crs(value), fm_crs(value, oblique = NA), fm_CRS(value), fm_CRS(value, oblique = NA), depending type x. fm_crs_oblique(x) <- value: Assigns new oblique information.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinate reference system object — fm_crs","title":"Obtain coordinate reference system object — fm_crs","text":"Obtain sf::crs fm_crs object spatial object, convert crs information construct new sf::crs object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinate reference system object — fm_crs","text":"","code":"fm_crs(x, oblique = NULL, ..., crsonly = deprecated())  # S3 method for fm_crs is.na(x)  fm_crs_is_null(x, crsonly = FALSE)  fm_crs_oblique(x)  # S3 method for fm_crs st_crs(x, ...)  # S3 method for fm_crs $(x, name)  # S3 method for default fm_crs(x, oblique = NULL, ...)  # S3 method for crs fm_crs(x, oblique = NULL, ...)  # S3 method for fm_crs fm_crs(x, oblique = NULL, ...)  # S3 method for fm_CRS fm_crs(x, oblique = NULL, ...)  # S3 method for character fm_crs(x, oblique = NULL, ...)  # S3 method for Spatial fm_crs(x, oblique = NULL, ...)  # S3 method for SpatVector fm_crs(x, oblique = NULL, ...)  # S3 method for SpatRaster fm_crs(x, oblique = NULL, ...)  # S3 method for sf fm_crs(x, oblique = NULL, ...)  # S3 method for sfc fm_crs(x, oblique = NULL, ...)  # S3 method for sfg fm_crs(x, oblique = NULL, ...)  # S3 method for fm_mesh_2d fm_crs(x, oblique = NULL, ...)  # S3 method for fm_lattice_2d fm_crs(x, oblique = NULL, ...)  # S3 method for fm_segm fm_crs(x, oblique = NULL, ...)  # S3 method for fm_list fm_crs(x, oblique = NULL, ...)  # S3 method for matrix fm_crs(x, oblique = NULL, ...)  # S3 method for fm_list fm_CRS(x, oblique = NULL, ...)  fm_wkt_predef()  # S3 method for inla.CRS fm_crs(x, oblique = NULL, ...)  # S3 method for inla.mesh fm_crs(x, oblique = NULL, ...)  # S3 method for inla.mesh.lattice fm_crs(x, oblique = NULL, ...)  # S3 method for inla.mesh.segment fm_crs(x, oblique = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinate reference system object — fm_crs","text":"x Object convert crs  extract crs information . character, string suitable sf::st_crs(x), name predefined wkt string ``names(fm_wkt_predef())`. oblique Numeric vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section . oblique non-NULL, used override obliqueness parameters fm_crs object. NA, remove obliqueness object, resulting return class sf::st_crs(). NULL, pass though oblique information object, returning fm_crs() object needed. ... Additional parameters. currently use. crsonly logical; TRUE, remove oblique information fm_crs objects return plain crs object instead. crsonly = TRUE, use oblique = NA instead. crsonly = FALSE, use default, NULL, non-NA oblique. name element name","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinate reference system object — fm_crs","text":"Either sf::crs object fm_crs object, depending coordinate reference system described parameters can expressed pure crs object . crs object (sf::st_crs()) fm_crs object. S3 fm_crs object list elements crs oblique. fm_wkt_predef returns WKT2 string defining projection","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain coordinate reference system object — fm_crs","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counter-clockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Obtain coordinate reference system object — fm_crs","text":"fm_crs(fm_list): returns list 'crs' objects, one list element","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Obtain coordinate reference system object — fm_crs","text":".na(fm_crs): Check fm_crs NA crs information NA obliqueness st_crs(fm_crs): st_crs(x, ...) equivalent fm_crs(x, ... oblique = NA) x fm_crs object. $: fm_crs object x, x$name calls accessor method crs object inside . name \"crs\", internal crs object returned. name \"oblique\", internal oblique angle parameter vector returned.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Obtain coordinate reference system object — fm_crs","text":"fm_crs_is_null(): Check object NULL NA CRS information. NULL, .na(fm_crs(x)) returned. allows input e.g. proj4string epsg number, since default fm_crs() method passes argument sf::st_crs(). fm_crs_oblique(): Return NA object oblique information, otherwise length 4 numeric vector. fm_CRS(fm_list): returns list 'CRS' objects, one list element","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain coordinate reference system object — fm_crs","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain coordinate reference system object — fm_crs","text":"","code":"crs1 <- fm_crs(\"longlat_globe\") crs2 <- fm_crs(\"lambert_globe\") crs3 <- fm_crs(\"mollweide_norm\") crs4 <- fm_crs(\"hammer_globe\") crs5 <- fm_crs(\"sphere\") crs6 <- fm_crs(\"globe\") if (FALSE) { names(fm_wkt_predef()) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_is_identical.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two CRS objects are identical — fm_crs_is_identical","title":"Check if two CRS objects are identical — fm_crs_is_identical","text":"Check two CRS objects identical","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_is_identical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two CRS objects are identical — fm_crs_is_identical","text":"","code":"fm_crs_is_identical(crs0, crs1, crsonly = FALSE)  fm_identical_CRS(crs0, crs1, crsonly = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_is_identical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two CRS objects are identical — fm_crs_is_identical","text":"crs0, crs1 Two sf::crs, sp::CRS, fm_crs inla.CRS objects compared. crsonly logical. TRUE crs0 crs1 fm_crs inla.CRS objects, extract compare sf::crs sp::CRS aspects. Default: FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_is_identical.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Check if two CRS objects are identical — fm_crs_is_identical","text":"fm_identical_CRS():  fm_crs_is_identical().","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_is_identical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if two CRS objects are identical — fm_crs_is_identical","text":"","code":"crs0 <- crs1 <- fm_crs(\"longlat_globe\") fm_crs_oblique(crs1) <- c(0, 90) print(c(   fm_crs_is_identical(crs0, crs0),   fm_crs_is_identical(crs0, crs1),   fm_crs_is_identical(crs0, crs1, crsonly = TRUE) )) #> [1]  TRUE FALSE  TRUE"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling CRS/WKT — fm_crs_wkt","title":"Handling CRS/WKT — fm_crs_wkt","text":"Get set CRS object WKT string properties.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling CRS/WKT — fm_crs_wkt","text":"","code":"fm_wkt_is_geocent(wkt)  fm_crs_is_geocent(crs)  fm_wkt_get_ellipsoid_radius(wkt)  fm_crs_get_ellipsoid_radius(crs)  fm_ellipsoid_radius(x)  # S3 method for default fm_ellipsoid_radius(x)  # S3 method for character fm_ellipsoid_radius(x)  fm_wkt_set_ellipsoid_radius(wkt, radius)  fm_ellipsoid_radius(x) <- value  # S3 method for character fm_ellipsoid_radius(x) <- value  # S3 method for CRS fm_ellipsoid_radius(x) <- value  # S3 method for fm_CRS fm_ellipsoid_radius(x) <- value  # S3 method for crs fm_ellipsoid_radius(x) <- value  # S3 method for fm_crs fm_ellipsoid_radius(x) <- value  fm_crs_set_ellipsoid_radius(crs, radius)  fm_wkt_unit_params()  fm_wkt_get_lengthunit(wkt)  fm_wkt_set_lengthunit(wkt, unit, params = NULL)  fm_crs_get_lengthunit(crs)  fm_crs_set_lengthunit(crs, unit)  fm_length_unit(x)  # S3 method for default fm_length_unit(x)  # S3 method for character fm_length_unit(x)  fm_length_unit(x) <- value  # S3 method for character fm_length_unit(x) <- value  # S3 method for CRS fm_length_unit(x) <- value  # S3 method for fm_CRS fm_length_unit(x) <- value  # S3 method for crs fm_length_unit(x) <- value  # S3 method for fm_crs fm_length_unit(x) <- value  fm_wkt(crs)  fm_proj4string(crs)  fm_crs_get_wkt(crs)  fm_wkt_tree_projection_type(wt)  fm_wkt_projection_type(wkt)  fm_crs_projection_type(crs)  fm_crs_bounds(crs, warn.unknown = FALSE)  # S3 method for inla.CRS fm_ellipsoid_radius(x) <- value  # S3 method for inla.CRS fm_length_unit(x) <- value"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling CRS/WKT — fm_crs_wkt","text":"wkt WKT2 character string crs sf::crs, sp::CRS, fm_crs inla.CRS object x crs object extract value assign values radius numeric; new radius value value Value assign unit character, name unit. Supported names \"metre\", \"kilometre\", aliases \"meter\", \"m\", International metre\", \"kilometer\", \"km\", defined fm_wkt_unit_params params argument. (legacy PROJ4 use, \"m\" \"km\" supported) params Length unit definitions, list format produced fm_wkt_unit_params(), Default: NULL, invokes fm_wkt_unit_params() wt parsed wkt tree, see fm_wkt_as_wkt_tree() warn.unknown logical, default FALSE. Produce warning shape projection bounds unknown.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling CRS/WKT — fm_crs_wkt","text":"fm_wkt_unit_params, list named unit definitions fm_wkt_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. fm_wkt_set_lengthunit, WKT2 string altered length units. Note length unit ellipsoid radius unchanged. fm_crs_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. (legacy PROJ4 code, raw units proj4string returned, present.) fm_length_unit<-, crs object altered length units. Note length unit ellipsoid radius unchanged.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Handling CRS/WKT — fm_crs_wkt","text":"fm_wkt(): Returns WKT2 string, input supported fm_crs(). fm_proj4string(): Returns proj4 string, input supported fm_crs(). fm_crs_get_wkt():  Use fm_wkt() instead. fm_wkt_tree_projection_type(): Returns \"longlat\", \"lambert\", \"mollweide\", \"hammer\", \"tmerc\", NULL fm_wkt_projection_type(): See fm_wkt_tree_projection_type fm_crs_projection_type(): See fm_wkt_tree_projection_type fm_crs_bounds(): Returns bounds information projection, list elements type (\"rectangle\" \"ellipse\"), xlim, ylim, polygon.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handling CRS/WKT — fm_crs_wkt","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handling CRS/WKT — fm_crs_wkt","text":"","code":"if (FALSE) { c1 <- fm_crs(\"globe\") fm_crs_get_lengthunit(c1) c2 <- fm_crs_set_lengthunit(c1, \"m\") fm_crs_get_lengthunit(c2) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_detect_manifold.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect manifold type — fm_detect_manifold","title":"Detect manifold type — fm_detect_manifold","text":"Detect 2d object \"R2\", \"S2\", \"M2\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_detect_manifold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect manifold type — fm_detect_manifold","text":"","code":"fm_detect_manifold(x)  fm_crs_detect_manifold(x)  # S3 method for crs fm_detect_manifold(x)  # S3 method for CRS fm_detect_manifold(x)  # S3 method for matrix fm_detect_manifold(x)  # S3 method for fm_mesh_2d fm_detect_manifold(x)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_detect_manifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect manifold type — fm_detect_manifold","text":"x Object investigate","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_detect_manifold.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Detect manifold type — fm_detect_manifold","text":"fm_crs_detect_manifold(): Detect crs \"R2\" \"S2\" (fm_crs_is_geocent(crs) TRUE). Returns NA_character_ crs NULL NA.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Diameter bound for a geometric object — fm_diameter","title":"Diameter bound for a geometric object — fm_diameter","text":"Find upper bound convex hull point set","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diameter bound for a geometric object — fm_diameter","text":"","code":"fm_diameter(x, ...)  # S3 method for matrix fm_diameter(x, manifold = NULL, ...)  # S3 method for sf fm_diameter(x, ...)  # S3 method for sfg fm_diameter(x, ...)  # S3 method for sfc fm_diameter(x, ...)  # S3 method for fm_lattice_2d fm_diameter(x, ...)  # S3 method for fm_segm fm_diameter(x, ...)  # S3 method for fm_mesh_2d fm_diameter(x, ...)  # S3 method for fm_mesh_1d fm_diameter(x, ...)  # S3 method for inla.mesh.1d fm_diameter(x, ...)  # S3 method for inla.mesh.segment fm_diameter(x, ...)  # S3 method for inla.mesh.lattice fm_diameter(x, ...)  # S3 method for inla.mesh fm_diameter(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diameter bound for a geometric object — fm_diameter","text":"x point set \\(n\\times d\\) matrix, fm_mesh_2d/1d/sf related object. ... Additional parameters passed submethods. manifold Character string specifying manifold type. Default treat point set Euclidean \\(R^d\\) metrics. Use manifold=\"S2\" great circle distances unit sphere (set automatically fm_fmesh_2d objects).","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diameter bound for a geometric object — fm_diameter","text":"scalar, upper bound diameter convex hull point set.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diameter bound for a geometric object — fm_diameter","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_diameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diameter bound for a geometric object — fm_diameter","text":"","code":"fm_diameter(matrix(c(0, 1, 1, 0, 0, 0, 1, 1), 4, 2)) #> [1] 1.414214"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for projecting to/from mesh objects — fm_evaluate","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"Calculate evaluation information /evaluate function defined mesh function space.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"","code":"fm_evaluate(...)  # S3 method for inla.mesh fm_evaluate(mesh, field, ...)  # S3 method for fm_mesh_2d fm_evaluate(mesh, field, ...)  # S3 method for fm_tensor fm_evaluate(mesh, field, ...)  # S3 method for inla.mesh.1d fm_evaluate(mesh, field, ...)  # S3 method for fm_mesh_1d fm_evaluate(mesh, field, ...)  # S3 method for fm_evaluator fm_evaluate(projector, field, ...)  fm_evaluator(...)  fm_evaluator_mesh_2d(   mesh,   loc = NULL,   weights = NULL,   derivatives = NULL,   crs = NULL,   ... )  fm_evaluator_mesh_1d(   mesh,   loc,   weights = NULL,   derivatives = NULL,   method = NULL,   ... )  fm_evaluator_lattice(   mesh,   xlim = NULL,   ylim = NULL,   dims = c(100, 100),   projection = NULL,   crs = NULL,   ... )  # S3 method for inla.mesh fm_evaluator(mesh, loc = NULL, lattice = NULL, crs = NULL, ...)  # S3 method for fm_mesh_2d fm_evaluator(mesh, loc = NULL, lattice = NULL, crs = NULL, ...)  # S3 method for inla.mesh.1d fm_evaluator(mesh, loc = NULL, xlim = mesh$interval, dims = 100, ...)  # S3 method for fm_mesh_1d fm_evaluator(mesh, loc = NULL, xlim = mesh$interval, dims = 100, ...)  # S3 method for fm_tensor fm_evaluator(x, loc, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"... Additional arguments passed methods. mesh inla.mesh inla.mesh.1d object. field Basis function weights, one per mesh basis function, describing function evaluated projection locations projector fm_evaluator object. loc Projection locations.  Can matrix, SpatialPoints, SpatialPointsDataFrame, sf, sfc, sfg object. weights Optional weight vector derivatives logical; true, also return matrices dA d2A fm_mesh_1d objects, dx, dy, dz fm_mesh_2d. crs optional CRS inla.CRS object associated loc /lattice. method character; either \"default\", \"nearest\", \"linear\", \"quadratic\". NULL \"default\", uses object definition function space. Otherwise overrides object definition. xlim X-axis limits lattice. R2 meshes, defaults covering domain. ylim Y-axis limits lattice. R2 meshes, defaults covering domain. dims Lattice dimensions. projection One c(\"default\", \"longlat\", \"longsinlat\", \"mollweide\"). lattice fm_lattice_2d() object. x fm_tensor() object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"fm_evaluate(): Returns field function evaluated locations determined fm_evaluator object. fm_evaluate(mesh, field = field, ...) shortcut fm_evaluate(fm_evaluator(mesh, ...), field = field). fm_evaluator(): Returns fm_evaluator list object evaluation information. proj element contains mapping matrix logical vector ok, indicates locations mappable input mesh. fm_mesh_2d inla.mesh input, proj also contains matrix bary vector t, barycentric coordinates within triangle input location falls . fm_evaluator_lattice(): Creates fm_lattice_2d() object, default covering input mesh. fm_evaluator(inla.mesh): ... arguments passed fm_evaluator_lattice() loc lattice provided. fm_evaluator(fm_mesh_2d): ... arguments passed fm_evaluator_lattice() loc lattice provided.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for projecting to/from mesh objects — fm_evaluate","text":"","code":"if (TRUE) {   n <- 20   loc <- matrix(runif(n * 2), n, 2)   mesh <- fm_rcdt_2d_inla(loc, refine = list(max.edge = 0.05))   proj <- fm_evaluator(mesh)   field <- cos(mesh$loc[, 1] * 2 * pi * 3) * sin(mesh$loc[, 2] * 2 * pi * 7)   image(proj$x, proj$y, fm_evaluate(proj, field)) }  # \\donttest{ # if (require(\"ggplot2\") && #  require(\"ggpolypath\")) { #  ggplot() + #    gg(data = fm_as_sfc(mesh), col = field) # } # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute finite element matrices — fm_fem","title":"Compute finite element matrices — fm_fem","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute finite element matrices — fm_fem","text":"","code":"fm_fem(mesh, order = 2, ...)  # S3 method for fm_mesh_1d fm_fem(mesh, order = 2, ...)  # S3 method for fm_mesh_2d fm_fem(mesh, order = 2, aniso = NULL, ...)  # S3 method for inla.mesh.1d fm_fem(mesh, order = 2, ...)  # S3 method for inla.mesh fm_fem(mesh, order = 2, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute finite element matrices — fm_fem","text":"mesh inla.mesh object order integer ... Currently unused aniso non-NULL, list(gamma, v). Calculates anisotropic structure matrices (addition regular) \\(\\gamma\\) \\(v\\) anisotropic operator \\(\\nabla\\cdot H \\nabla\\), \\(H=\\gamma + v v^\\top\\). Currently (2023-08-05) fields need given per vertex.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_fem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute finite element matrices — fm_fem","text":"list elements ...","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-domain integration — fm_int","title":"Multi-domain integration — fm_int","text":"Construct integration points tensor product spaces","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-domain integration — fm_int","text":"","code":"fm_int(domain, samplers = NULL, ...)  # S3 method for list fm_int(domain, samplers = NULL, ...)  # S3 method for numeric fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for character fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for factor fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for SpatRaster fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for fm_lattice_2d fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for fm_mesh_1d fm_int(domain, samplers = NULL, name = \"x\", int.args = NULL, ...)  # S3 method for fm_mesh_2d fm_int(   domain,   samplers = NULL,   name = NULL,   int.args = NULL,   format = NULL,   ... )  # S3 method for inla.mesh.lattice fm_int(domain, samplers = NULL, name = \"x\", ...)  # S3 method for inla.mesh.1d fm_int(domain, samplers = NULL, name = \"x\", int.args = NULL, ...)  # S3 method for inla.mesh fm_int(   domain,   samplers = NULL,   name = NULL,   int.args = NULL,   format = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-domain integration — fm_int","text":"domain Functional space specification; single domain named list domains samplers single domain fm_int methods, object specifying one subsets domain, optional weighting weight variable. fm_int.list, list sampling definitions, data frame elements may contain information multiple domains, case row represent separate tensor product integration subspace. ... Additional arguments passed methods name single-domain methods, variable name use integration points. Default 'x' int.args List arguments passed line integration methods. method: \"stable\" (aggregate integration weights onto mesh nodes) \"direct\" (construct within triangle/segment integration scheme without aggregating onto mesh nodes) nsub1, nsub2: integers controlling number internal integration points aggregation. Points per triangle: (nsub2+1)^2. Points per knot segment: nsub1 format character; determines output format, either \"sf\" (default sampler NULL) \"sp\". NULL, determined sampler type.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-domain integration — fm_int","text":"data.frame, tibble, sf, SpatialPointsDataFrame 1D 2D integration points, including weight column .block column.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Multi-domain integration — fm_int","text":"fm_int(list): Multi-domain integration fm_int(numeric): Discrete double integer space integration fm_int(character): Discrete character space integration fm_int(factor): Discrete factor space integration fm_int(SpatRaster): SpatRaster integration. yet implemented. fm_int(fm_lattice_2d): fm_lattice_2d integration. yet implemented. fm_int(fm_mesh_1d): fm_mesh_1d integration. Supported samplers: NULL integration entire domain; length 2 vector defining interval; 2-column matrix single interval row; tibble named column containing matrix, optionally weight column. fm_int(fm_mesh_2d): inla.mesh integration. sampler class associated fm_int_mesh_2d() method supported.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-domain integration — fm_int","text":"","code":"# Integration on the interval (2, 3.5) with Simpson's rule ips <- fm_int(fm_mesh_1d(0:4), samplers = cbind(2, 3.5)) plot(ips$x, ips$weight)   # Create integration points for the two intervals [0,3] and [5,10]  ips <- fm_int(   fm_mesh_1d(0:10),   matrix(c(0, 3, 5, 10), nrow = 2, byrow = TRUE) ) plot(ips$x, ips$weight)   # Convert a 1D mesh into integration points mesh <- fm_mesh_1d(seq(0, 10, by = 1)) ips <- fm_int(mesh, name = \"time\") plot(ips$time, ips$weight)   if (require(\"ggplot2\", quietly = TRUE)) {   #' Integrate on a 2D mesh with polygon boundary subset   ips <- fm_int(fmexample$mesh, fmexample$boundary_sf[[1]])   ggplot() +     geom_sf(data = fm_as_sfc(fmexample$mesh, multi = TRUE), alpha = 0.5) +     geom_sf(data = fmexample$boundary_sf[[1]], fill = \"red\", alpha = 0.5) +     geom_sf(data = ips, aes(size = weight)) +     scale_size_area() }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset integration on a mesh — fm_int_mesh_2d","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"Integration methods spatial samplers inla.mesh meshes.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"","code":"fm_int_mesh_2d(samplers, domain, name = NULL, int.args = NULL, ...)  fm_int_mesh_2d_NULL(samplers, domain, name = NULL, int.args = NULL, ...)  # S3 method for sf fm_int_mesh_2d(samplers, domain, name = NULL, int.args = NULL, ...)  # S3 method for sfc_POINT fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTIPOINT fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_LINESTRING fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTILINESTRING fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_POLYGON fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_MULTIPOLYGON fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for sfc_GEOMETRY fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   .weight = rep(1, NROW(samplers)),   ... )  # S3 method for Spatial fm_int_mesh_2d(   samplers,   domain,   name = NULL,   int.args = NULL,   format = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"samplers single domain fm_int methods, object specifying one subsets domain, optional weighting weight variable. fm_int.list, list sampling definitions, data frame elements may contain information multiple domains, case row represent separate tensor product integration subspace. domain Functional space specification; single domain named list domains name single-domain methods, variable name use integration points. Default 'x' int.args List arguments passed line integration methods. method: \"stable\" (aggregate integration weights onto mesh nodes) \"direct\" (construct within triangle/segment integration scheme without aggregating onto mesh nodes) nsub1, nsub2: integers controlling number internal integration points aggregation. Points per triangle: (nsub2+1)^2. Points per knot segment: nsub1 ... Additional arguments passed methods .weight Optional weight vector sfc_* integration format character; determines output format, either \"sf\" (default sampler NULL) \"sp\". NULL, determined sampler type. .block Optional block grouping vector sfc_* integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"sf point object columns weight .block","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"fm_int_mesh_2d(sf): sf integration fm_int_mesh_2d(sfc_POINT): sfc_POINT integration fm_int_mesh_2d(sfc_MULTIPOINT): sfc_MULTIPOINT integration fm_int_mesh_2d(sfc_LINESTRING): sfc_LINESTRING integration fm_int_mesh_2d(sfc_MULTILINESTRING): sfc_MULTILINESTRING integration fm_int_mesh_2d(sfc_POLYGON): sfc_POLYGON integration fm_int_mesh_2d(sfc_MULTIPOLYGON): sfc_MULTIPOLYGON integration fm_int_mesh_2d(sfc_GEOMETRY): sfc_GEOMERY integration fm_int_mesh_2d(Spatial): Spatial integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Subset integration on a mesh — fm_int_mesh_2d","text":"fm_int_mesh_2d_NULL(): Full domain integration","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"Integration scheme mesh triangle interiors","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"","code":"fm_int_mesh_2d_core(mesh, tri_subset = NULL, nsub = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"mesh Mesh integrate tri_subset Optional triangle index vector integration subset mesh triangles (Default NULL) nsub number subdivision points along triangle edge, giving (nsub + 1)^2 proto-integration points used compute vertex weights (default NULL=9, giving 100 integration points triangle)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"list elements loc weight integration points mesh","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_mesh_2d_core.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Integration scheme for mesh triangle interiors — fm_int_mesh_2d_core","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_multi_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-domain sampler integration — fm_int_multi_sampler","title":"Multi-domain sampler integration — fm_int_multi_sampler","text":"Combine integration different domains","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_int_multi_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-domain sampler integration — fm_int_multi_sampler","text":"","code":"fm_int_multi_sampler(domain, samplers, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":null,"dir":"Reference","previous_headings":"","what":"Query if points are inside a mesh — fm_is_within","title":"Query if points are inside a mesh — fm_is_within","text":"Queries whether input point within mesh .","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query if points are inside a mesh — fm_is_within","text":"","code":"fm_is_within(x, y, ...)  # S3 method for default fm_is_within(x, y, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query if points are inside a mesh — fm_is_within","text":"x set points class supported fm_evaluator(y, loc = x) y inla.mesh ... Currently unused","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query if points are inside a mesh — fm_is_within","text":"logical vector","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_is_within.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query if points are inside a mesh — fm_is_within","text":"","code":"all(fm_is_within(fmexample$loc, fmexample$mesh)) #> [1] TRUE"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a lattice object — fm_lattice_2d","title":"Make a lattice object — fm_lattice_2d","text":"Construct lattice grid fm_mesh_2d()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a lattice object — fm_lattice_2d","text":"","code":"fm_lattice_2d(...)  # S3 method for default fm_lattice_2d(   x = seq(0, 1, length.out = 2),   y = seq(0, 1, length.out = 2),   z = NULL,   dims = if (is.matrix(x)) {      dim(x)  } else {      c(length(x), length(y))  },   units = NULL,   crs = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a lattice object — fm_lattice_2d","text":"... Currently passed inla.mesh.lattice x vector grid matrix x-values y vector grid matrix y-values z x matrix, grid matrix z-values dims size grid, length 2 vector units One c(\"default\", \"longlat\", \"longsinlat\", \"mollweide\") NULL (equivalent \"default\"). crs optional fm_crs, sf::st_crs, sp::CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a lattice object — fm_lattice_2d","text":"fm_lattice_2d object.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a lattice object — fm_lattice_2d","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_lattice_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a lattice object — fm_lattice_2d","text":"","code":"lattice <- fm_lattice_2d(seq(0, 1, length.out = 17), seq(0, 1, length.out = 10))  ## Use the lattice \"as-is\", without refinement: mesh <- fm_rcdt_2d_inla(lattice = lattice, boundary = lattice$segm) mesh <- fm_rcdt_2d_inla(lattice = lattice, extend = FALSE)  ## Refine the triangulation, with limits on triangle angles and edges: mesh <- fm_rcdt_2d(   lattice = lattice,   refine = list(max.edge = 0.08),   extend = FALSE )  ## Add an extension around the lattice, but maintain the lattice edges: mesh <- fm_rcdt_2d(   lattice = lattice,   refine = list(max.edge = 0.08),   interior = lattice$segm )  ## Only add extension: mesh <- fm_rcdt_2d(lattice = lattice, refine = list(max.edge = 0.08))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle lists of fmesher objects — fm_list","title":"Handle lists of fmesher objects — fm_list","text":"Methods constructing manipulating fm_list objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle lists of fmesher objects — fm_list","text":"","code":"fm_list(x, ..., .class_stub = NULL)  fm_as_list(x, ..., .class_stub = NULL)  # S3 method for fm_list c(...)  # S3 method for fm_list [(x, i)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle lists of fmesher objects — fm_list","text":"x fm_list object extract element(s) ... Arguments passed individual conversion call. .class_stub character; class stub name class convert list element . NULL, uses fm_as_fm auto-detects resulting list consistent class, adds class list.  non-null, uses paste0(\"fm_as_\", .class_stub) conversion, verifies resulting list elements consistent class. indices specifying elements extract","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle lists of fmesher objects — fm_list","text":"fm_list object, potentially fm_{class_stub}_list added.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Handle lists of fmesher objects — fm_list","text":"c(fm_list): ... arguments coercible fm_list objects. [: Extract sub-list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_list.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Handle lists of fmesher objects — fm_list","text":"fm_list(): Convert element list, convert single non-list object return list fm_as_list(): Convert element list, convert single non-list object return list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_manifold.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the mesh manifold type — fm_manifold","title":"Query the mesh manifold type — fm_manifold","text":"Extract manifold definition string, logical matching manifold type","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_manifold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the mesh manifold type — fm_manifold","text":"","code":"fm_manifold(x, type = NULL)  fm_manifold_type(x)  fm_manifold_dim(x)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_manifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the mesh manifold type — fm_manifold","text":"x fm_mesh_1d fm_mesh_2d object (object containing manifold element) type character; NULL (default), returns manifold definition string. character, returns TRUE manifold type x matches least one character vector elements.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 1D mesh object — fm_mesh_1d","title":"Make a 1D mesh object — fm_mesh_1d","text":"Create fm_mesh_1d object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 1D mesh object — fm_mesh_1d","text":"","code":"fm_mesh_1d(   loc,   interval = range(loc),   boundary = NULL,   degree = 1,   free.clamped = FALSE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 1D mesh object — fm_mesh_1d","text":"loc B-spline knot locations. interval Interval domain endpoints. boundary Boundary condition specification.  Valid conditions c('neumann', 'dirichlet', 'free', 'cyclic').  Two separate values can specified, one applied endpoint. degree B-spline basis degree.  Supported values 0, 1, 2. free.clamped TRUE, 'free' boundaries, clamp basis functions interval endpoints. ... Additional options, currently unused.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_1d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a 1D mesh object — fm_mesh_1d","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 2D mesh object — fm_mesh_2d","title":"Make a 2D mesh object — fm_mesh_2d","text":"Make 2D mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 2D mesh object — fm_mesh_2d","text":"","code":"fm_mesh_2d(...)  fm_mesh_2d_inla(   loc = NULL,   loc.domain = NULL,   offset = NULL,   n = NULL,   boundary = NULL,   interior = NULL,   max.edge = NULL,   min.angle = NULL,   cutoff = 1e-12,   max.n.strict = NULL,   max.n = NULL,   plot.delay = NULL,   crs = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a 2D mesh object — fm_mesh_2d","text":"... Currently passed fm_mesh_2d_inla loc Matrix point locations used initial triangulation nodes.  Can alternatively SpatialPoints SpatialPointsDataFrame object. loc.domain Matrix point locations used determine domain extent.  Can alternatively SpatialPoints SpatialPointsDataFrame object. offset automatic extension distance.  One two values, inner optional outer extension.  negative, interpreted factor relative approximate data diameter (default=-0.10???) n number initial nodes automatic extensions (default=16) boundary one (list) fm_segm() objects, objects supported fm_as_segm() interior one object supported fm_as_segm() max.edge largest allowed triangle edge length.  One two values. min.angle smallest allowed triangle angle.  One two values. (Default=21) cutoff minimum allowed distance points.  Point far apart replaced single vertex prior mesh refinement step. max.n.strict maximum number vertices allowed, overriding min.angle max.edge (default=-1, meaning limit).  One two values, second value gives number additional vertices allowed extension. max.n maximum number vertices allowed, overriding max.edge (default=-1, meaning limit).  One two values, second value gives number additional vertices allowed extension. plot.delay Linux (Mac appropriate X11 libraries installed), specifying nonnegative numeric value activates rudimentary plotting system underlying fmesher program, showing triangulation algorithm work, waiting time factor plot.delay step. systems, specifying negative value activates displaying result step multi-step domain extension algorithm. crs optional fm_crs(), sf::crs sp::CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a 2D mesh object — fm_mesh_2d","text":"inla.mesh object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Make a 2D mesh object — fm_mesh_2d","text":"fm_mesh_2d_inla(): Legacy method INLA::inla.mesh.2d() Create triangle mesh based initial point locations, specified automatic boundaries, mesh quality parameters.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a 2D mesh object — fm_mesh_2d","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"Calculates coordinate mappings fm_mesh_2d projections. internal function intended general use.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"","code":"fm_mesh_2d_map(   loc,   projection = c(\"default\", \"longlat\", \"longsinlat\", \"mollweide\"),   inverse = TRUE )  fm_mesh_2d_map_lim(   loc = NULL,   projection = c(\"default\", \"longlat\", \"longsinlat\", \"mollweide\") )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"loc Coordinates mapped. projection projection type. inverse TRUE, loc map coordinates coordinates mesh domain calculated.  FALSE, loc coordinates mesh domain forward map projection calculated.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"fm_mesh_2d_map_lim, list: xlim X axis limits map domain ylim Y axis limits map domain attempt made find minimal limits partial spherical domains.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"fm_mesh_2d_map_lim(): Projection extent limit calculations","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_2d_map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Special coordinate mappings for fm_mesh_2d projections. — fm_mesh_2d_map","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the intersection mesh of a mesh and a polygon — fm_mesh_intersection","title":"Construct the intersection mesh of a mesh and a polygon — fm_mesh_intersection","text":"Construct intersection mesh mesh polygon","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the intersection mesh of a mesh and a polygon — fm_mesh_intersection","text":"","code":"fm_mesh_intersection(mesh, poly)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the intersection mesh of a mesh and a polygon — fm_mesh_intersection","text":"mesh fm_mesh_2d object intersected poly fm_segm object closed polygon intersect mesh","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_mesh_intersection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct the intersection mesh of a mesh and a polygon — fm_mesh_intersection","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an extension of a spatial object — fm_nonconvex_hull","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Constructs potentially nonconvex extension spatial object performing dilation convex + concave followed erosion concave. equivalent dilation convex followed closing (dilation + erosion) concave.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"","code":"fm_nonconvex_hull(x, ...)  # S3 method for sfc fm_nonconvex_hull(   x,   convex = -0.15,   concave = convex,   preserveTopology = TRUE,   dTolerance = NULL,   crs = fm_crs(x),   ... )  fm_extensions(x, convex = -0.15, concave = convex, dTolerance = NULL, ...)  # S3 method for matrix fm_nonconvex_hull(x, ...)  # S3 method for sf fm_nonconvex_hull(x, ...)  # S3 method for Spatial fm_nonconvex_hull(x, ...)  # S3 method for sfg fm_nonconvex_hull(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"x spatial object ... Arguments passed fm_nonconvex_hull() sub-methods convex numeric vector; much extend concave numeric vector; minimum allowed reentrant curvature. Default equal convex preserveTopology logical; argument sf::st_simplify() dTolerance zero, controls dTolerance argument sf::st_simplify(). default pmin(convex, concave) / 40, chosen give approximately 4 subsegments per circular quadrant. crs Options crs object resulting polygon","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"fm_nonconvex_hull() returns extended object sfc polygon object (regardless x class). fm_extensions() returns list sfc objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Morphological dilation convex, followed closing concave, minimum concave curvature radius concave.  dilated set gaps width $$2 \\text{convex} (\\sqrt{1+2 \\text{concave}/\\text{convex}} - 1)$$ \\(2\\text{concave}\\), minimum convex curvature radius convex. implementation based identity $$\\text{dilation}() \\& \\text{closing}(b) = \\text{dilation}(+b) \\& \\text{erosion}(b)$$ operations respect disks specified radii. convex, concave, dTolerance negative, fm_diameter * abs(...) used instead. Differs sf::st_buffer(x, convex) followed sf::st_concave_hull() (available GEOS 3.11) amount allowed concavity controlled.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"fm_nonconvex_hull(): Basic nonconvex hull method. fm_extensions(): Constructs potentially nonconvex extension spatial object performing dilation convex + concave followed erosion concave. equivalent dilation convex followed closing (dilation + erosion) concave.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"Gonzalez Woods (1992), Digital Image Processing","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an extension of a spatial object — fm_nonconvex_hull","text":"","code":"inp <- matrix(rnorm(20), 10, 2) out <- fm_nonconvex_hull(inp, convex = 1) plot(out) points(inp, pch = 20)  if (TRUE) {   inp <- sf::st_as_sf(as.data.frame(matrix(1:6, 3, 2)), coords = 1:2)   bnd <- fm_extensions(inp, convex = c(0.75, 2))   plot(fm_mesh_2d(boundary = bnd, max.edge = c(0.25, 1)), asp = 1) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-convex hull computation — fm_nonconvex_hull_inla","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"Legacy method INLA::inla.nonconvex.hull()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"","code":"fm_nonconvex_hull_inla(   x,   convex = -0.15,   concave = convex,   resolution = 40,   eps = NULL,   eps_rel = NULL,   crs = NULL,   ... )  fm_nonconvex_hull_inla_basic(   x,   convex = -0.15,   resolution = 40,   eps = NULL,   crs = NULL )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"x spatial object convex numeric vector; much extend concave numeric vector; minimum allowed reentrant curvature. Default equal convex resolution internal computation resolution.  warning issued needs increased higher accuracy, required resolution stated. eps, eps_rel polygonal curve simplification tolerances used simplifying resulting boundary curve.  See fm_simplify_helper() details. crs Options crs object resulting polygon ... Unused.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"fm_nonconvex_hull_inla() returns fm_segm/inla.mesh.segment object, compatibility inla.nonconvex.hull().","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"Requires splancs::nndistF()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_nonconvex_hull_inla.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Non-convex hull computation — fm_nonconvex_hull_inla","text":"fm_nonconvex_hull_inla_basic(): Special method convex = 0.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate lattice points covering a mesh — fm_pixels","title":"Generate lattice points covering a mesh — fm_pixels","text":"Generate terra, sf, sp lattice locations","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate lattice points covering a mesh — fm_pixels","text":"","code":"fm_pixels(   mesh,   dims = c(150, 150),   xlim = NULL,   ylim = NULL,   mask = TRUE,   format = \"sf\",   minimal = TRUE,   nx = deprecated(),   ny = deprecated() )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate lattice points covering a mesh — fm_pixels","text":"mesh inla.mesh object dims length 2 integer vector giving dimensions target lattice. xlim, ylim Length 2 numeric vectors x- y- axis limits. Defaults taken range mesh mask; see minimal. mask logical TRUE, remove pixels outside mesh. mask sf Spatial object, return pixels covered object. format character; \"sf\", \"terra\" \"sp\" minimal logical; TRUE (default), default range determined minimum ranges mesh mask, otherwise mesh. nx Number pixels x direction, numeric vector x-values ny Number pixels y direction, numeric vector y-values","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate lattice points covering a mesh — fm_pixels","text":"sf, SpatRaster, SpatialPixelsDataFrame covering mesh mask.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate lattice points covering a mesh — fm_pixels","text":"Fabian E. Bachl bachlfab@gmail.com Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_pixels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate lattice points covering a mesh — fm_pixels","text":"","code":"if (require(\"ggplot2\", quietly = TRUE)) {   dims <- c(50, 50)   pxl <- fm_pixels(     fmexample$mesh,     dims = dims,     mask = fmexample$boundary_sf[[1]],     minimal = TRUE   )   pxl$val <- rnorm(NROW(pxl)) +     fm_evaluate(fmexample$mesh, pxl, field = 2 * fmexample$mesh$loc[, 1])   ggplot() +     geom_tile(       data = pxl,       aes(geometry = geometry, fill = val),       stat = \"sf_coordinates\"     ) +     geom_sf(data = fm_as_sfc(fmexample$mesh), alpha = 0.2) }   if (require(\"ggplot2\", quietly = TRUE) &&   require(\"tidyterra\", quietly = TRUE)) {   pxl <- fm_pixels(fmexample$mesh,     dims = c(50, 50), mask = fmexample$boundary_sf[[1]],     format = \"terra\"   )   pxl$val <- rnorm(NROW(pxl) * NCOL(pxl))   pxl <-     terra::mask(       pxl,       mask = pxl$.mask,       maskvalues = c(FALSE, NA),       updatevalue = NA     )   ggplot() +     geom_spatraster(data = pxl, aes(fill = val)) +     geom_sf(data = fm_as_sfc(fmexample$mesh), alpha = 0.2) } #>  #> Attaching package: ‘tidyterra’ #> The following object is masked from ‘package:stats’: #>  #>     filter"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_raw_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Basis functions for mesh manifolds — fm_raw_basis","title":"Basis functions for mesh manifolds — fm_raw_basis","text":"Calculate basis functions fm_mesh_1d() fm_mesh_2d(), without necessarily matching default function space given mesh object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_raw_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basis functions for mesh manifolds — fm_raw_basis","text":"","code":"fm_raw_basis(   mesh,   type = \"b.spline\",   n = 3,   degree = 2,   knot.placement = \"uniform.area\",   rot.inv = TRUE,   boundary = \"free\",   free.clamped = TRUE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_raw_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basis functions for mesh manifolds — fm_raw_basis","text":"mesh fm_mesh_1d() fm_mesh_2d() object. type b.spline (default) B-spline basis functions, sph.harm spherical harmonics (available meshes sphere) n B-splines, number basis functions direction (1d meshes n must scalar, planar 2d meshes 2-vector). spherical harmonics, n maximal harmonic order. degree Degree B-spline polynomials.  See fm_mesh_1d(). knot.placement B-splines sphere, controls latitudinal placements knots. \"uniform.area\" (default) gives uniform spacing sin(latitude), \"uniform.latitude\" gives uniform spacing latitudes. rot.inv spherical harmonics sphere, rot.inv=TRUE gives rotationally invariant subset basis functions. boundary Boundary specification, default free boundaries.  See fm_mesh_1d() information. free.clamped TRUE boundary \"free\", boundary basis functions clamped 0/1 interval boundary repeating boundary knots. See fm_mesh_1d() information. ... Unused","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_raw_basis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Basis functions for mesh manifolds — fm_raw_basis","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_raw_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basis functions for mesh manifolds — fm_raw_basis","text":"","code":"n <- 100 loc <- matrix(runif(n * 2), n, 2) mesh <- fm_mesh_2d(loc, max.edge = 0.05) basis <- fm_raw_basis(mesh, n = c(4, 5))  proj <- fm_evaluator(mesh) image(proj$x, proj$y, fm_evaluate(proj, basis[, 7]))  # \\donttest{ if (require(rgl)) {   plot_rgl(mesh, col = basis[, 7], draw.edges = FALSE, draw.vertices = FALSE) } #> Loading required package: rgl #> Warning: RGL: unable to open X11 display #> Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'. # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_rcdt_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","title":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","text":"Computes refined constrained Delaunay triangulation R2 S2.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_rcdt_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","text":"","code":"fm_rcdt_2d(...)  fm_rcdt_2d_inla(   loc = NULL,   tv = NULL,   boundary = NULL,   interior = NULL,   extend = (missing(tv) || is.null(tv)),   refine = FALSE,   lattice = NULL,   globe = NULL,   cutoff = 1e-12,   quality.spec = NULL,   crs = NULL,   ... )  fm_delaunay_2d(loc, crs = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_rcdt_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","text":"... Currently passed fm_mesh_2d_inla converted fmesher_rcdt() options. loc Input coordinates part mesh tv Initial triangulation, N--3 indec vector loc boundary, interior Objects supported fm_as_segm(). boundary numeric, fm_nonconvex_hull(loc, convex = boundary) used. extend logical list specifying whether extend data region, parameters list(\"n\") number edges extended boundary (default=8) list(\"offset\") extension distance.  negative, interpreted factor relative approximate data diameter (default=-0.10) Setting FALSE useful combination lattice boundary. refine logical list specifying whether refine triangulation, parameters list(\"min.angle\") minimum allowed interior angle triangle.  algorithm guaranteed converge min.angle 21 (default=21) list(\"max.edge\") maximum allowed edge length triangle.  negative, interpreted relative factor ad hoc formula depending data density (default=Inf) list(\"max.n.strict\") maximum number vertices allowed, overriding min.angle max.edge (default=-1, meaning limit) list(\"max.n\") maximum number vertices allowed, overriding max.edge (default=-1, meaning limit) lattice fm_lattice_2d object, generated fm_lattice_2d(), specifying points regular lattice. globe non-NULL, integer specifying level subdivision global mesh points, used fmesher_globe_points() cutoff minimum allowed distance points.  Point far apart replaced single vertex prior mesh refinement step. quality.spec List vectors per vertex max.edge target specification location loc, boundary/interior (segm), lattice.  used refining mesh. crs Optional crs object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_rcdt_2d.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","text":"fm_rcdt_2d_inla(): Legacy method INLA::inla.mesh.create() interface fm_delaunay_2d(): Construct plain Delaunay triangulation.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_rcdt_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refined Constrained Delaunay Triangulation — fm_rcdt_2d","text":"","code":"m <- fm_rcdt_2d(   boundary = fm_nonconvex_hull(cbind(0, 0), convex = 5),   rcdt_max_edge = 1 )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_refine.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine a 2d mesh — fm_refine","title":"Refine a 2d mesh — fm_refine","text":"Refine 2d mesh","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_refine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine a 2d mesh — fm_refine","text":"","code":"fm_refine(mesh, refine = list(max.edge = 1))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_refine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine a 2d mesh — fm_refine","text":"mesh fm_mesh_2d object refine list refinement options passed fm_rcdt_2d_inla","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_refine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine a 2d mesh — fm_refine","text":"mesh refined fm_mesh_2d object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_refine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Refine a 2d mesh — fm_refine","text":"Fabian E. Bachl bachlfab@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_row_kron.html","id":null,"dir":"Reference","previous_headings":"","what":"Row-wise Kronecker products — fm_row_kron","title":"Row-wise Kronecker products — fm_row_kron","text":"Takes two Matrices computes row-wise Kronecker product.  Optionally applies row-wise weights /applies additional 0/1 row-wise Kronecker matrix product.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_row_kron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row-wise Kronecker products — fm_row_kron","text":"","code":"fm_row_kron(M1, M2, repl = NULL, n.repl = NULL, weights = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_row_kron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row-wise Kronecker products — fm_row_kron","text":"M1 matrix can transformed sparse Matrix. M2 matrix can transformed sparse Matrix. repl optional index vector.  entry, specifies replicate row belongs , sense used INLA::inla.spde.make.n.repl maximum replicate index, sense used INLA::inla.spde.make.(). weights Optional scaling weights applied row-wise resulting matrix.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_row_kron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row-wise Kronecker products — fm_row_kron","text":"Matrix::sparseMatrix object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_row_kron.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Row-wise Kronecker products — fm_row_kron","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for potential sp version compatibility issues — fm_safe_sp","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"Loads sp package requireNamespace(\"sp\", quietly = TRUE), checks optionally sets sp evolution status flag rgdal unavailable. function needed backwards compatibility sp versions 2.0-0.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"","code":"fm_safe_sp(quietly = FALSE, force = FALSE, minimum_version = \"1.4-5\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"quietly logical; TRUE, prints diagnostic messages. Default FALSE force logical; rgdal unavailable evolution status less 2L, return FALSE force FALSE. force TRUE, return TRUE package configuration safe, potentially forcing evolution status 2L. Default FALSE minimum_version character; minimum required sp version. Default 1.4-5 (always match requirement package DESCRIPTION)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"Returns (invisibly) FALSE potential issue detected, give message quietly FALSE. Otherwise returns TRUE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for potential sp version compatibility issues — fm_safe_sp","text":"","code":"if (FALSE) { if (fm_safe_sp()) {   # Run sp dependent calculations } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a spatial segment object — fm_segm","title":"Make a spatial segment object — fm_segm","text":"Make spatial segment object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a spatial segment object — fm_segm","text":"","code":"fm_segm(...)  # S3 method for default fm_segm(loc = NULL, idx = NULL, grp = NULL, is.bnd = TRUE, crs = NULL, ...)  # S3 method for fm_segm fm_segm(..., grp = NULL, grp.default = 0L)  # S3 method for fm_segm_list fm_segm(x, grp = NULL, grp.default = 0L, ...)  fm_segm_join(x, grp = NULL, grp.default = 0L)  fm_segm_split(x, grp = NULL, grp.default = 0L)  # S3 method for inla.mesh.segment fm_segm(..., grp.default = 0)  # S3 method for inla.mesh fm_segm(x, ...)  # S3 method for fm_mesh_2d fm_segm(x, boundary = TRUE, grp = NULL, ...)  fm_is_bnd(x)  fm_is_bnd(x) <- value"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a spatial segment object — fm_segm","text":"... Passed submethods loc Matrix point locations, SpatialPoints, sf/sfc point object. idx Segment index sequence vector index pair matrix.  indices refer rows loc.  loc==NULL, indices interpreted indices point specification supplied fm_rcdt_2d().  .bnd==TRUE, defaults linking points loc, c(1:nrow(loc),1L), otherwise 1:nrow(loc). grp joining segments, use group labels segments instead original group labels. .bnd TRUE segments boundary segments, otherwise FALSE. crs optional fm_crs(), sf::st_crs() sp::CRS() object grp.default grp.default NULL, use group labels segments NULL group. x Mesh extract segments boundary logical; TRUE, extract boundary segments, otherwise interior constrain segments. value logical","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Make a spatial segment object — fm_segm","text":"fm_segm(fm_segm): Join multiple fm_segm objects single fm_segm object. fm_segm(fm_segm_list): Join fm_segm objects fm_segm_list single fm_segm object. Equivalent fm_segm_join(x) fm_segm(fm_mesh_2d): Extract boundary interior segments 2d mesh. grp non-NULL, extracts segments matching matching set groups given grp.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Make a spatial segment object — fm_segm","text":"fm_segm(): Create new fm_segm object. fm_segm_join(): Join multiple fm_segm objects single fm_segm object. fm_segm_split(): Split fm_segm object grp fm_segm_list object, optionally keeping groups.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_contour_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Contour segment — fm_segm_contour_helper","title":"Contour segment — fm_segm_contour_helper","text":"Helper legacy INLA::inla.contour.segment()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_contour_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contour segment — fm_segm_contour_helper","text":"","code":"fm_segm_contour_helper(   x = seq(0, 1, length.out = nrow(z)),   y = seq(0, 1, length.out = ncol(z)),   z,   nlevels = 10,   levels = pretty(range(z, na.rm = TRUE), nlevels),   groups = seq_len(length(levels)),   positive = TRUE,   eps = NULL,   eps_rel = NULL,   crs = NULL )"},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for fm_segm lists — fm_segm_list","title":"Methods for fm_segm lists — fm_segm_list","text":"fm_segm lists can combined fm_segm_list list objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for fm_segm lists — fm_segm_list","text":"","code":"# S3 method for fm_segm c(...)  # S3 method for fm_segm_list c(...)  # S3 method for fm_segm_list [(x, i)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for fm_segm lists — fm_segm_list","text":"... Objects combined. x fm_segm_list object extract element(s) indices specifying elements extract","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for fm_segm lists — fm_segm_list","text":"fm_segm_list object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Methods for fm_segm lists — fm_segm_list","text":"c(fm_segm_list): ... arguments coercible fm_segm_list objects. [: Extract sub-list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for fm_segm lists — fm_segm_list","text":"c(fm_segm): ... arguments fm_segm objects, coercible fm_as_segm_list(list(...)).","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_segm_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for fm_segm lists — fm_segm_list","text":"","code":"m <- c(A = fm_segm(1:2), B = fm_segm(3:4)) str(m) #> List of 2 #>  $ A:List of 5 #>   ..$ loc   : num [1, 1:3] 1 2 0 #>   ..$ idx   : int [1, 1:2] 1 1 #>   ..$ grp   : NULL #>   ..$ is.bnd: logi TRUE #>   ..$ crs   : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"fm_segm\" \"inla.mesh.segment\" #>  $ B:List of 5 #>   ..$ loc   : num [1, 1:3] 3 4 0 #>   ..$ idx   : int [1, 1:2] 1 1 #>   ..$ grp   : NULL #>   ..$ is.bnd: logi TRUE #>   ..$ crs   : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"fm_segm\" \"inla.mesh.segment\" #>  - attr(*, \"class\")= chr [1:2] \"fm_segm_list\" \"fm_list\" str(m[2]) #> List of 1 #>  $ B:List of 5 #>   ..$ loc   : num [1, 1:3] 3 4 0 #>   ..$ idx   : int [1, 1:2] 1 1 #>   ..$ grp   : NULL #>   ..$ is.bnd: logi TRUE #>   ..$ crs   : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"fm_segm\" \"inla.mesh.segment\" #>  - attr(*, \"class\")= chr [1:2] \"fm_segm_list\" \"fm_list\""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive curve simplification. — fm_simplify","title":"Recursive curve simplification. — fm_simplify","text":"Simplifies polygonal curve segments joining nearly co-linear segments. Uses variation binary splitting Ramer-Douglas-Peucker algorithm, ellipse half-width eps ellipse instead rectangle, motivated prediction ellipse Brownian bridge.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive curve simplification. — fm_simplify","text":"","code":"fm_simplify(x, eps = NULL, eps_rel = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive curve simplification. — fm_simplify","text":"x fm_segm() object. eps Absolute straightness tolerance. Default NULL, constraint. eps_rel Relative straightness tolerance. Default NULL, constraint. ... Currently unused.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive curve simplification. — fm_simplify","text":"simplified fm_segm() object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursive curve simplification. — fm_simplify","text":"Variation Ramer-Douglas-Peucker. Uses width epsilon ellipse instead rectangle, motivated prediction ellipse Brownian bridge.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Recursive curve simplification. — fm_simplify","text":"Ramer, Urs (1972). \"iterative procedure polygonal approximation plane curves\". Computer Graphics Image Processing. 1 (3): 244–256. doi:10.1016/S0146-664X(72)80017-0 Douglas, David; Peucker, Thomas (1973). \"Algorithms reduction number points required represent digitized line caricature\". Canadian Cartographer. 10 (2): 112–122. doi:10.3138/FM57-6770-U75U-7727","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recursive curve simplification. — fm_simplify","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursive curve simplification. — fm_simplify","text":"","code":"theta <- seq(0, 2 * pi, length.out = 1000) (segm <- fm_segm(cbind(cos(theta), sin(theta)),   idx = seq_along(theta) )) #> fm_segm object: #>   999 boundary edges #>   Bounding box = (-0.9999951, 1.0000000) x (-0.9999988, 0.9999988) x (0,0) (segm1 <- fm_simplify(segm, eps_rel = 0.1)) #> fm_segm object: #>   16 boundary edges (1 group: 0) #>   Bounding box = (-0.9999951, 1.0000000) x (-0.9999988, 0.9999889) x (0,0) (segm2 <- fm_simplify(segm, eps_rel = 0.2)) #> fm_segm object: #>   8 boundary edges (1 group: 0) #>   Bounding box = (-0.9999951, 1.0000000) x (-0.9999988, 0.9999889) x (0,0) plot(segm) lines(segm1, col = 2) lines(segm2, col = 3)   (segm <- fm_segm(cbind(theta, sin(theta * 4)),   idx = seq_along(theta) )) #> fm_segm object: #>   999 boundary edges #>   Bounding box = (0.000000,6.283185) x (-0.9999988, 0.9999988) x (0,0) (segm1 <- fm_simplify(segm, eps_rel = 0.1)) #> fm_segm object: #>   73 boundary edges (1 group: 0) #>   Bounding box = (0.000000,6.283185) x (-0.9999988, 0.9999988) x (0,0) (segm2 <- fm_simplify(segm, eps_rel = 0.2)) #> fm_segm object: #>   17 boundary edges (1 group: 0) #>   Bounding box = (0.000000,6.283185) x (-0.9995538, 0.9994549) x (0,0) plot(segm) lines(segm1, col = 2) lines(segm2, col = 3)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursive curve simplification. — fm_simplify_helper","title":"Recursive curve simplification. — fm_simplify_helper","text":"Helper legacy INLA::inla.simplify.curve() Attempts simplify polygonal curve joining nearly colinear segments. Uses variation binary splitting Ramer-Douglas-Peucker algorithm, ellipse half-width eps ellipse instead rectangle, motivated prediction ellipse Brownian bridge.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursive curve simplification. — fm_simplify_helper","text":"","code":"fm_simplify_helper(loc, idx, eps = NULL, eps_rel = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursive curve simplification. — fm_simplify_helper","text":"loc Coordinate matrix. idx Index vector loc specifying polygonal curve. eps Absolute straightness tolerance. Default NULL, constraint. eps_rel Relative straightness tolerance. Default NULL, constraint.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursive curve simplification. — fm_simplify_helper","text":"index vector loc specifying simplified polygonal curve.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recursive curve simplification. — fm_simplify_helper","text":"Variation Ramer-Douglas-Peucker. Uses width epsilon ellipse instead rectangle, motivated prediction ellipse Brownian bridge.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Recursive curve simplification. — fm_simplify_helper","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_simplify_helper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursive curve simplification. — fm_simplify_helper","text":"","code":"theta <- seq(0, 2 * pi, length.out = 1000) loc <- cbind(cos(theta), sin(theta)) idx <- fm_simplify_helper(loc = loc, idx = 1:nrow(loc), eps = 0.01) print(c(nrow(loc), length(idx))) #> [1] 1000   33 plot(loc, type = \"l\") lines(loc[idx, ], col = \"red\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split lines at triangle edges — fm_split_lines","title":"Split lines at triangle edges — fm_split_lines","text":"Compute intersections line segments triangle edges, filter segment length zero.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split lines at triangle edges — fm_split_lines","text":"","code":"fm_split_lines(mesh, ...)  # S3 method for fm_mesh_2d fm_split_lines(mesh, segm, ...)  # S3 method for inla.mesh fm_split_lines(mesh, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split lines at triangle edges — fm_split_lines","text":"mesh fm_mesh_2d inla.mesh object ... Unused. segm fm_segm() object segments split","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split lines at triangle edges — fm_split_lines","text":"fm_segm() object crs mesh, added field origin, new segment gives originator index original segm object new line segment.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_split_lines.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split lines at triangle edges — fm_split_lines","text":"Fabian E. Bachl f.e.bachl@bath.ac.uk Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":null,"dir":"Reference","previous_headings":"","what":"store points in different formats — fm_store_points","title":"store points in different formats — fm_store_points","text":"Convert matrix points different formats.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"store points in different formats — fm_store_points","text":"","code":"fm_store_points(loc, crs = NULL, info = NULL, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"store points in different formats — fm_store_points","text":"format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_store_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"store points in different formats — fm_store_points","text":"sf, data.frame, SpatialPointsDataFrame object, optional added information.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_tensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a tensor product function space — fm_tensor","title":"Make a tensor product function space — fm_tensor","text":"Make tensor product function space","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_tensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a tensor product function space — fm_tensor","text":"","code":"fm_tensor(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_tensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a tensor product function space — fm_tensor","text":"x list function space objects, fm_mesh_2d(). ... Currently unused","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Object coordinate transformation — fm_transform","title":"Object coordinate transformation — fm_transform","text":"Handle transformation various inla objects according coordinate reference systems crs (sf::st_crs()), fm_crs, sp::CRS INLA::inla.CRS class.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object coordinate transformation — fm_transform","text":"","code":"fm_transform(x, crs, ...)  # S3 method for default fm_transform(x, crs, ..., crs0 = NULL)  ## S3 method for class 'NULL' fm_transform(x, crs, ...)  # S3 method for matrix fm_transform(x, crs, ..., passthrough = FALSE, crs0 = NULL)  # S3 method for sf fm_transform(x, crs, ..., passthrough = FALSE)  # S3 method for sfc fm_transform(x, crs, ..., passthrough = FALSE)  # S3 method for sfg fm_transform(x, crs, ..., passthrough = FALSE)  # S3 method for Spatial fm_transform(x, crs, ..., passthrough = FALSE)  # S3 method for fm_mesh_2d fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for fm_lattice_2d fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for fm_segm fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for fm_list fm_transform(x, crs, ...)  # S3 method for inla.mesh fm_transform(x, crs = fm_crs(x), ...)  # S3 method for inla.mesh.lattice fm_transform(x, crs, ...)  # S3 method for inla.mesh.segment fm_transform(x, crs, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object coordinate transformation — fm_transform","text":"x object transformed current CRS new CRS crs target crs object ... Potential additional arguments crs0 source crs object spatial classes without crs information passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. Use care!","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_unify_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Unify coordinates to 3-column matrix — fm_unify_coords","title":"Unify coordinates to 3-column matrix — fm_unify_coords","text":"Convert coordinate information 3-column matrix. mainly internal function, interface may change.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_unify_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unify coordinates to 3-column matrix — fm_unify_coords","text":"","code":"fm_unify_coords(x, crs = NULL)  ## S3 method for class 'NULL' fm_unify_coords(x, crs = NULL)  # S3 method for default fm_unify_coords(x, crs = NULL)  # S3 method for Spatial fm_unify_coords(x, crs = NULL)  # S3 method for sf fm_unify_coords(x, crs = NULL)  # S3 method for sf fm_unify_coords(x, crs = NULL)  # S3 method for sfc fm_unify_coords(x, crs = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_unify_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unify coordinates to 3-column matrix — fm_unify_coords","text":"x object coordinate information crs optional crs object convert coordinates ","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Project integration points to mesh vertices — fm_vertex_projection","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"Compute information assigning points vertices covering triangle","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"","code":"fm_vertex_projection(points, mesh)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"points SpatialPointsDataFrame, sf, list object mesh fm_mesh_2d inla.mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertex_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project integration points to mesh vertices — fm_vertex_projection","text":"SpatialPointsDataFrame, sf, list mesh vertices projected data attached","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract vertex locations from an fm_mesh_2d — fm_vertices","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"Extracts vertices fm_mesh_2d object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"","code":"fm_vertices(x, format = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"x inla.mesh object. format character; \"sf\", \"df\", \"sp\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"sf, data.frame, SpatialPointsDataFrame object, vertex coordinates, .vertex column vertex indices.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"Fabian E. Bachl bachlfab@gmail.com, Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract vertex locations from an fm_mesh_2d — fm_vertices","text":"","code":"if (require(\"ggplot2\", quietly = TRUE)) {   vrt <- fm_vertices(fmexample$mesh, format = \"sf\")   ggplot() +     geom_sf(data = fm_as_sfc(fmexample$mesh)) +     geom_sf(data = vrt, color = \"red\") }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in fmesher — fmesher-deprecated","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"functions still attempt job, removed future version.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"","code":"fm_spTransform(x, ...)  # S3 method for default fm_spTransform(x, crs0 = NULL, crs1 = NULL, passthrough = FALSE, ...)  # S3 method for SpatialPoints fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for SpatialPointsDataFrame fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.lattice fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.segment fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  fm_has_PROJ6()  fm_not_for_PROJ6(fun = NULL)  fm_not_for_PROJ4(fun = NULL)  fm_fallback_PROJ6(fun = NULL)  fm_requires_PROJ6(fun = NULL)  fm_as_sp_crs(x, ...)  fm_sp_get_crs(x)  fm_as_inla_mesh_segment(...)  fm_as_inla_mesh(...)  fm_sp2segment(...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"x sp::Spatial object ... Potential additional arguments crs0 source sp::CRS inla.CRS object crs1 target sp::CRS inla.CRS object passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. CRSobj target sp::CRS inla.CRS object fun name function requires PROJ6. Default: NULL, uses name calling function.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"CRS object, NULL valid CRS identified fm_segm object fm_mesh_2d object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"function convenience method workaround PROJ4/PROJ6 differences, lack crs extraction method Spatial objects. newer code, use fm_crs() instead, returns crs objects, use fm_CRS() extract/construct/convert old style sp::CRS objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"fm_spTransform():  (See fm_transform() instead) Handle transformation various inla objects according coordinate reference systems sp::CRS INLA::inla.CRS class. fm_spTransform(default): default method handles low level transformation raw coordinates. fm_has_PROJ6(): Detect whether PROJ6 available fm_not_for_PROJ6(): fm_not_for_PROJ6 called warn using old PROJ4 features even though PROJ6 available fm_not_for_PROJ4(): fm_not_for_PROJ4 called give error calling methods available PROJ6 fm_fallback_PROJ6(): Called warn falling back using old PROJ4 methods PROJ6 method implemented fm_requires_PROJ6(): Called give error PROJ6 required available fm_as_sp_crs(): Wrapper fm_CRS() sp::Spatial sp::CRS objects. fm_sp_get_crs(): Wrapper CRS(projargs) (PROJ4) CRS(wkt) sp::Spatial objects. fm_as_inla_mesh_segment(): Conversion inla.mesh.segment  favour fm_as_segm(). fm_as_inla_mesh(): Conversion inla.mesh.  favour fm_as_mesh_2d(). fm_sp2segment():  favour fm_as_segm()","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated functions in fmesher — fmesher-deprecated","text":"","code":"if (FALSE) { if (interactive()) {   s <- sp::SpatialPoints(matrix(1:6, 3, 2), proj4string = fm_CRS(\"sphere\"))   fm_CRS(s) } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print objects — fmesher-print","title":"Print objects — fmesher-print","text":"Print objects","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print objects — fmesher-print","text":"","code":"# S3 method for fm_segm print(x, ..., digits = NULL, verbose = TRUE, newline = TRUE)  # S3 method for fm_segm_list print(x, ..., digits = NULL, verbose = FALSE, newline = TRUE)  # S3 method for fm_mesh_2d print(x, ..., digits = NULL, verbose = FALSE)  # S3 method for fm_mesh_1d print(x, ..., digits = NULL, verbose = FALSE)  # S3 method for fm_bbox print(x, ..., digits = NULL, verbose = TRUE, newline = TRUE)  # S3 method for fm_crs print(x, ...)  # S3 method for fm_CRS print(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print objects — fmesher-print","text":"x object used select method. ... arguments passed methods. digits positive integer indicating many significant digits used numeric complex x. default, NULL, uses getOption(\"digits\"). verbose logical newline logical; TRUE (default), end printing \\n","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-print.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print objects — fmesher-print","text":"","code":"fm_bbox(matrix(1:6, 3, 2)) #> Bounding box: (1,3) x (4,6) print(fm_bbox(matrix(1:6, 3, 2)), verbose = FALSE) #> (1,3) x (4,6)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":null,"dir":"Reference","previous_headings":"","what":"Barycentric coordinate computation — fmesher_bary","title":"Barycentric coordinate computation — fmesher_bary","text":"Locate points compute triangular barycentric coordinates","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"fmesher_bary(mesh_loc, mesh_tv, loc, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barycentric coordinate computation — fmesher_bary","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle loc numeric matrix; coordinates points locate mesh options list triangulation options","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2)) b <- fmesher_bary(m$s,                   m$tv,                   matrix(c(0.5, 0.5), 1, 2),                   list())"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":null,"dir":"Reference","previous_headings":"","what":"Finite element matrix computation — fmesher_fem","title":"Finite element matrix computation — fmesher_fem","text":"Construct finite element structure matrices","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finite element matrix computation — fmesher_fem","text":"","code":"fmesher_fem(mesh_loc, mesh_tv, fem_order_max, aniso, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finite element matrix computation — fmesher_fem","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle fem_order_max integer; highest operator order compute aniso non-NULL, list(gamma, v). Calculates anisotropic structure matrices (addition regular) \\(\\gamma\\) \\(v\\) anisotropic operator \\(\\nabla\\cdot H \\nabla\\), \\(H=\\gamma + v v^\\top\\). Currently (2023-08-05) fields need given per vertex. options list triangulation options (sphere_tolerance)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_fem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finite element matrix computation — fmesher_fem","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2)) b <- fmesher_fem(m$s, m$tv, fem_order_max = 2, aniso = NULL, options = list())"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Globe points — fmesher_globe_points","title":"Globe points — fmesher_globe_points","text":"Create points globe","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Globe points — fmesher_globe_points","text":"","code":"fmesher_globe_points(globe)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Globe points — fmesher_globe_points","text":"globe integer; number edge subdivision segments, 1 higher","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"fmesher_rcdt(   options,   loc,   tv = NULL,   boundary = NULL,   interior = NULL,   boundary_grp = NULL,   interior_grp = NULL )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"options list triangulation options loc numeric matrix; initial points include tv 3-column integer matrix 0-based vertex indices triangle boundary 2-column integer matrix 0-based vertex indices boundary edge constraint interior 2-column integer matrix 0-based vertex indices interior edge constraint boundary_grp integer vector group labels interior_grp integer vector group labels","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"m <- fmesher_rcdt(list(cet_margin = 1), matrix(0, 1, 2))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between sparse matrix types — fm_as_dgCMatrix","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"Conversion sparse matrix types","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"","code":"fm_as_dgCMatrix(x)  fm_as_dgTMatrix(x, unique = TRUE, ...)  fm_as_unpackedMatrix(x)  fm_as_fmesher_sparse(x)  # S3 method for default fm_as_dgCMatrix(x)  # S3 method for fmesher_sparse fm_as_dgCMatrix(x)  # S3 method for default fm_as_dgTMatrix(x, unique = TRUE, ...)  # S3 method for default fm_as_unpackedMatrix(x)  # S3 method for fmesher_sparse fm_as_unpackedMatrix(x)  # S3 method for fmesher_sparse fm_as_dgTMatrix(x, unique = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between sparse matrix types — fm_as_dgCMatrix","text":"x Object converted pretty logical; TRUE, ensures sparse triplet representation single entry non-zero matrix element.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_spherical_bsplines.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotationally invariant spherical B-splines — fmesher_spherical_bsplines1","title":"Rotationally invariant spherical B-splines — fmesher_spherical_bsplines1","text":"Compute rotationally invariant spherical B-splines unit sphere","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_spherical_bsplines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotationally invariant spherical B-splines — fmesher_spherical_bsplines1","text":"","code":"fmesher_spherical_bsplines1(loc, n, degree, uniform)  fmesher_spherical_bsplines(loc, n, degree, uniform)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_spherical_bsplines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotationally invariant spherical B-splines — fmesher_spherical_bsplines1","text":"loc numeric vector/matrix; coordinates points locate mesh, z-coordinates used (sin(latitude)) n number basis functions degree polynomial basis degree uniform logical; TRUE, knots spaced uniformly latitude, FALSE, knots spaced uniformly sin(latitude)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_spherical_bsplines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotationally invariant spherical B-splines — fmesher_spherical_bsplines1","text":"","code":"m <- fm_rcdt_2d(globe = 1) fmesher_spherical_bsplines(m$loc, n = 3, degree = 2, uniform = FALSE) #>         [,1]  [,2]   [,3] #>  [1,] 0.0000 0.000 1.0000 #>  [2,] 0.0625 0.375 0.5625 #>  [3,] 0.0625 0.375 0.5625 #>  [4,] 0.0625 0.375 0.5625 #>  [5,] 0.0625 0.375 0.5625 #>  [6,] 0.0625 0.375 0.5625 #>  [7,] 0.5625 0.375 0.0625 #>  [8,] 0.5625 0.375 0.0625 #>  [9,] 0.5625 0.375 0.0625 #> [10,] 0.5625 0.375 0.0625 #> [11,] 0.5625 0.375 0.0625 #> [12,] 1.0000 0.000 0.0000 fmesher_spherical_bsplines1(m$loc[, 3], n = 3, degree = 2, uniform = FALSE) #>         [,1]  [,2]   [,3] #>  [1,] 0.0000 0.000 1.0000 #>  [2,] 0.0625 0.375 0.5625 #>  [3,] 0.0625 0.375 0.5625 #>  [4,] 0.0625 0.375 0.5625 #>  [5,] 0.0625 0.375 0.5625 #>  [6,] 0.0625 0.375 0.5625 #>  [7,] 0.5625 0.375 0.0625 #>  [8,] 0.5625 0.375 0.0625 #>  [9,] 0.5625 0.375 0.0625 #> [10,] 0.5625 0.375 0.0625 #> [11,] 0.5625 0.375 0.0625 #> [12,] 1.0000 0.000 0.0000"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split lines at triangle edges — fmesher_split_lines","title":"Split lines at triangle edges — fmesher_split_lines","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split lines at triangle edges — fmesher_split_lines","text":"","code":"fmesher_split_lines(mesh_loc, mesh_tv, loc, idx, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_split_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split lines at triangle edges — fmesher_split_lines","text":"mesh_loc numeric matrix; mesh vertex coordinates mesh_tv 3-column integer matrix 0-based vertex indices triangle loc numeric coordinate matrix idx 2-column integer matrix options list triangulation options (sphere_tolerance)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmexample.html","id":null,"dir":"Reference","previous_headings":"","what":"Example mesh data — fmexample","title":"Example mesh data — fmexample","text":"example data set used fmesher package examples.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmexample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example mesh data — fmexample","text":"","code":"fmexample"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmexample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example mesh data — fmexample","text":"data list containing elements: loc: matrix points. loc_sf: sfc version loc. loc_sp: SpatialPoints version loc. boundary_fm: list two fm_segm objects used mesh construction. boundary_sf: sfc list version boundary. boundary_sp: SpatialPolygons list version boundary. mesh: fm_mesh_2d() object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmexample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example mesh data — fmexample","text":"Generated data-raw/fmexample.R.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmexample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example mesh data — fmexample","text":"","code":"if (require(ggplot2, quietly = TRUE)) {   ggplot() +     geom_sf(data = fm_as_sfc(fmexample$mesh)) +     geom_sf(data = fmexample$boundary_sf[[1]], fill = \"red\", alpha = 0.5) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/generate_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text RGB color specifications. — generate_colors","title":"Generate text RGB color specifications. — generate_colors","text":"Generates tex RGB color specification matrix based color palette.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/generate_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text RGB color specifications. — generate_colors","text":"","code":"generate_colors(   color,   color.axis = NULL,   color.n = 512,   color.palette = cm.colors,   color.truncate = FALSE,   alpha = NULL )"},{"path":"https://inlabru-org.github.io/fmesher/reference/generate_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text RGB color specifications. — generate_colors","text":"color character, matrix vector color.axis min/max limit values color mapping. color.n number colors use color palette. color.palette color palette function. color.truncate TRUE, truncate colors color axis limits. alpha Transparency/opaqueness values.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/generate_colors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate text RGB color specifications. — generate_colors","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Old globe projection methods — globeproj","title":"Old globe projection methods — globeproj","text":"Deprecated globe projection methods may removed future","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Old globe projection methods — globeproj","text":"","code":"globeproj(type = NULL, orient = NULL, xlim = NULL, ylim = NULL, scale = NULL)  .globeproj.types(x, ...)  # S3 method for globeproj outline(x, add = FALSE, do.plot = TRUE, ...)  # S3 method for globeproj graticule(x, n = c(24, 12), add = FALSE, do.plot = TRUE, ...)  # S3 method for globeproj tissot(x, n = c(12, 6), add = FALSE, do.plot = TRUE, ...)  # S3 method for globeproj limits(x, loc = NULL, ...)  # S3 method for globeproj project(x, loc, inverse = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Old globe projection methods — globeproj","text":"type Projection type, see .globeproj.types() orient long,lat,rotation xlim x-axis limits ylim y-axis limits scale x- y- scaling factors x globeproj object ... Additional parameters passed methods add logical; TRUE, add existing plot .plot logical; TRUE, plotting n number Tissot indicatrices (n-long, n-lat) compute loc Coordinates mapped. inverse logical","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Old globe projection methods — globeproj","text":"vector names available projection types; \"longlat\", \"mollweide\", \"hammer\", \"orthocyl\", \"lambert\", \"gall-peters\" list: xlim X axis limits map domain ylim Y axis limits map domain B","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Old globe projection methods — globeproj","text":"limits(globeproj): Calculates projection axis limits","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Old globe projection methods — globeproj","text":".globeproj.types(): Types globe projections","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Old globe projection methods — globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit test helpers — local_testthat","title":"Unit test helpers — local_testthat","text":"Local helper functions package unit tests Local helper functions package unit tests","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit test helpers — local_testthat","text":"","code":"local_fm_testthat_assign(x, values, envir = parent.frame())  local_fm_testthat_tolerances(   tolerances = c(1e-04, 0.01, 0.1),   envir = parent.frame() )  local_fm_testthat_setup(envir = parent.frame())"},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit test helpers — local_testthat","text":"x character; Name variable assign values object assign x envir environment exit handlers tolerances numeric vector length 3; [lowtol, midtol, hitol]","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Unit test helpers — local_testthat","text":"local_fm_testthat_assign(): Assign local variable. Useful easy cleanup global workspace withr::deferred_run() running tests interactively. local_fm_testthat_tolerances(): Assign test tolerances Assign local tolerance variables. Useful easy cleanup global workspace withr::deferred_run() running tests interactively. local_fm_testthat_setup(): Initialise environment tests. called either top testfile, inside tests.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_mesh_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a triangulation mesh object — plot.fm_mesh_2d","title":"Draw a triangulation mesh object — plot.fm_mesh_2d","text":"Plots fm_mesh_2d() object using standard graphics.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_mesh_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a triangulation mesh object — plot.fm_mesh_2d","text":"","code":"# S3 method for fm_mesh_2d lines(x, ..., add = TRUE)  # S3 method for fm_mesh_2d plot(   x,   col = \"white\",   t.sub = seq_len(nrow(x$graph$tv)),   add = FALSE,   lwd = 1,   xlim = range(x$loc[, 1]),   ylim = range(x$loc[, 2]),   main = NULL,   size = 1,   draw.vertices = FALSE,   vertex.color = \"black\",   draw.edges = TRUE,   edge.color = rgb(0.3, 0.3, 0.3),   draw.segments = draw.edges,   rgl = deprecated(),   visibility = \"front\",   asp = 1,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_mesh_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a triangulation mesh object — plot.fm_mesh_2d","text":"x fm_mesh_2d() object. ... graphics parameters, interpreted respective plotting systems. add TRUE, adds current plot instead starting new one. col Color specification.  single named color, vector scalar values, matrix RGB values.  Requires rgl=TRUE. t.sub Optional triangle index subset drawn. lwd Line width triangle edges. xlim X-axis limits. ylim Y-axis limits. main Deprecated. size argument cex vertex points. draw.vertices TRUE, draw triangle vertices. vertex.color Color specification vertices. draw.edges TRUE, draw triangle edges. edge.color Color specification edges. draw.segments TRUE, draw boundary interior constraint edges prominently. rgl Deprecated visibility \"front\" display mesh faces normal pointing towards camera. asp Aspect ratio new plots. Default 1.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_mesh_2d.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw a triangulation mesh object — plot.fm_mesh_2d","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_mesh_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a triangulation mesh object — plot.fm_mesh_2d","text":"","code":"mesh <- fm_rcdt_2d(globe = 10) plot(mesh)   mesh <- fm_mesh_2d(cbind(0, 1), offset = c(1, 1.5), max.edge = 0.5) plot(mesh)"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_segm.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw fm_segm objects. — plot.fm_segm","title":"Draw fm_segm objects. — plot.fm_segm","text":"Draws fm_segm() object generic rgl graphics.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_segm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw fm_segm objects. — plot.fm_segm","text":"","code":"# S3 method for fm_segm plot(x, ..., add = FALSE)  # S3 method for fm_segm lines(   x,   loc = NULL,   col = NULL,   colors = c(\"black\", \"blue\", \"red\", \"green\"),   add = TRUE,   xlim = NULL,   ylim = NULL,   rgl = FALSE,   asp = 1,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_segm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw fm_segm objects. — plot.fm_segm","text":"x fm_segm() object. ... Additional parameters, passed graphics methods. add TRUE, add current plot, otherwise start new plot. loc Point locations used x$loc NULL. col Segment color specification. colors Colors cycle col NULL. xlim X axis limits new plot. ylim Y axis limits new plot. rgl TRUE, use rgl plotting. asp Aspect ratio new plots. Default 1.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/plot.fm_segm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw fm_segm objects. — plot.fm_segm","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a projected PolySet — plot_PolySet","title":"Plot a projected PolySet — plot_PolySet","text":"Plot projected PolySet","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"plot_PolySet(x, projection, add = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a projected PolySet — plot_PolySet","text":"x PolySet (see PBSmapping) projection globeproj objcet add logical; TRUE, add existing plot ... Additional parameters passed sp::plot","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"if (FALSE) { data(worldLL, package = \"PBSmapping\") plot_PolySet(worldLL, globeproj(\"longlat\"), add = FALSE) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a globeproj object — plot_globeproj","title":"Plot a globeproj object — plot_globeproj","text":"Plot globeproj object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a globeproj object — plot_globeproj","text":"","code":"plot_globeproj(   x,   xlim = NULL,   ylim = NULL,   outline = TRUE,   graticule = c(24, 12),   tissot = c(12, 6),   asp = 1,   add = FALSE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a globeproj object — plot_globeproj","text":"x globeproj object xlim, ylim x- y-axis limits outline logical graticule number graticules (n-long, n-lat) compute tissot number Tissot indicatrices (n-long, n-lat) compute asp aspect ratio. Default = 1 add logical; TRUE, add existing plot. Default: FALSE ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a globeproj object — plot_globeproj","text":"Nothing","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a globeproj object — plot_globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a globeproj object — plot_globeproj","text":"","code":"proj <- globeproj(\"moll\", orient = c(0, 0, 45)) plot_globeproj(proj, graticule = c(24, 12), add = FALSE, asp = 1, lty = 2, lwd = 0.5)"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_rgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Low level triangulation mesh plotting — plot_rgl","title":"Low level triangulation mesh plotting — plot_rgl","text":"Plots triangulation mesh using rgl.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_rgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low level triangulation mesh plotting — plot_rgl","text":"","code":"plot_rgl(x, ...)  lines_rgl(x, ..., add = TRUE)  # S3 method for fm_segm lines_rgl(x, ..., add = TRUE)  # S3 method for fm_mesh_2d plot_rgl(   x,   col = \"white\",   color.axis = NULL,   color.n = 512,   color.palette = cm.colors,   color.truncate = FALSE,   alpha = NULL,   lwd = 1,   specular = \"black\",   draw.vertices = TRUE,   draw.edges = TRUE,   draw.faces = TRUE,   draw.segments = draw.edges,   size = 2,   edge.color = rgb(0.3, 0.3, 0.3),   t.sub = seq_len(nrow(x$graph$tv)),   visibility = \"\",   S = deprecated(),   add = FALSE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_rgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low level triangulation mesh plotting — plot_rgl","text":"x fm_mesh_2d() object ... Additional parameters passed methods. add TRUE, adds current plot instead starting new one. col Color specification.  single named color, vector scalar values, matrix RGB values. color.axis min/max limit values color mapping. color.n number colors use color palette. color.palette color palette function. color.truncate TRUE, truncate colors color axis limits. alpha Transparency/opaqueness values. See rgl.material. lwd Line width edges. See rgl.material. specular Specular color. See rgl.material. draw.vertices TRUE, draw triangle vertices. draw.edges TRUE, draw triangle edges. draw.faces TRUE, draw triangles. draw.segments TRUE, draw boundary interior constraint edges prominently. size Size vertex points. edge.color Edge color specification. t.sub Optional triangle index subset drawn. visibility \"front\" display mesh faces normal pointing towards camera. S Deprecated.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_rgl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Low level triangulation mesh plotting — plot_rgl","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_rgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low level triangulation mesh plotting — plot_rgl","text":"","code":"# \\donttest{ if (require(rgl)) {   mesh <- fm_rcdt_2d(globe = 10)   plot_rgl(mesh, col = mesh$loc[, 1]) } # }"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for ","title":"Check for ","text":"Check \"XYZ\", \"XYM\" \"XYZM\" sfg classes","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for ","text":"","code":"st_check_dim(sfc)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for ","text":"sfc sfc object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for ","text":"LOGICAL indicating sfg element sfc object class \"XYZ\", \"XYM\" \"XYZM\". Internal function used check 3 4 dimensional objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"sf::st_polygon() fully check polygon construction validity. now implements basic check disjoint regions using st_within()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"","code":"st_check_polygon(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"LOGICAL; TRUE sfg holes entirely inside outer ring, disjoint, otherwise FALSE. FALSE, attribute Message set character vector describing detected reasons.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate signed area for polygon — st_signed_area","title":"Calculate signed area for polygon — st_signed_area","text":"Calculate signed area polygon","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate signed area for polygon — st_signed_area","text":"","code":"st_signed_area(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate signed area for polygon — st_signed_area","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate signed area for polygon — st_signed_area","text":"Returns signed area.  Negative values indicate anti-clockwise winding direction.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate signed area for polygon — st_signed_area","text":"Andrew Seaton Andrew.Seaton.2@glasgow.ac.uk Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal WKT handling — fm_wkt_as_wkt_tree","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"Conversion WKT tree representation","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"","code":"fm_wkt_as_wkt_tree(x, ...)  fm_wkt_tree_as_wkt(x, pretty = FALSE, ...)  fm_wkt_tree_get_item(x, item, duplicate = 1)  fm_wkt_tree_set_item(x, item_tree, duplicate = 1)"},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"x WKT2 string, wkt_tree list structure ... Unused pretty logical; TRUE, use pretty formatting. Default: FALSE item character vector item labels identifying parameter item entry. duplicate items one match, duplicate indicates index number desired version. Default: 1 item_tree item tree identifying parameter item entry","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/news/index.html","id":"fmesher-009","dir":"Changelog","previous_headings":"","what":"fmesher 0.0.9","title":"fmesher 0.0.9","text":"Add basic Rcpp input/output conversion code Added NEWS.md file track changes package.","code":""}]
