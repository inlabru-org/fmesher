[{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Finn Lindgren. Author, maintainer, copyright holder.            Finn Lindgren wrote main code Seaton Andy. Contributor, copyright holder.            Andy Seaton developed sf support","code":""},{"path":"https://inlabru-org.github.io/fmesher/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lindgren F (2023). fmesher: Triangle Meshes Geometry Tools. R package version 0.0.7.9005, https://inlabru-org.github.io/fmesher/.","code":"@Manual{,   title = {fmesher: Triangle Meshes and Other Geometry Tools},   author = {Finn Lindgren},   year = {2023},   note = {R package version 0.0.7.9005},   url = {https://inlabru-org.github.io/fmesher/}, }"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"fmesher","dir":"","previous_headings":"","what":"Triangle Meshes and Other Geometry Tools","title":"Triangle Meshes and Other Geometry Tools","text":"fmesher: Triangle Meshes Geometry Tools","code":""},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Triangle Meshes and Other Geometry Tools","text":"can install latest stable release fmesher GitHub: development version :","code":"# install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\", ref = \"stable\") # install.packages(\"remotes\") remotes::install_github(\"inlabru-org/fmesher\")"},{"path":"https://inlabru-org.github.io/fmesher/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Triangle Meshes and Other Geometry Tools","text":"","code":"library(fmesher) #> Loading required package: Matrix # longlat for a spherical version of the Earth print(fm_crs(\"longlat_globe\")) #> Coordinate Reference System: #>   User input: GEOGCRS[\"unknown\",DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\",ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"Unknown based on Normal Sphere (r=6370997) ellipsoid\", #>         ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # longlat for a sphere of radius 1m print(fm_crs(\"longlat_norm\")) #> Coordinate Reference System: #>   User input: GEOGCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",1,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Reference meridian\",0,ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]  #>   wkt: #> GEOGCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  # A sphere of radius 1m print(fm_crs(\"sphere\")) #> Coordinate Reference System: #>   User input: GEODCRS[\"unknown\",DATUM[\"unknown\",ELLIPSOID[\"unknown\",1,0,LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]],PRIMEM[\"Reference meridian\",0,ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],CS[Cartesian,3],AXIS[\"(X)\",geocentricX,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(Y)\",geocentricY,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(Z)\",geocentricZ,ORDER[3],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]  #>   wkt: #> GEODCRS[\"unknown\", #>     DATUM[\"unknown\", #>         ELLIPSOID[\"unknown\",1,0, #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]], #>     PRIMEM[\"Reference meridian\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433, #>             ID[\"EPSG\",9122]]], #>     CS[Cartesian,3], #>         AXIS[\"(X)\",geocentricX, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Y)\",geocentricY, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(Z)\",geocentricZ, #>             ORDER[3], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]]"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the matrix I/O system — C_matrixio_test","title":"Test the matrix I/O system — C_matrixio_test","text":"Test matrix /O system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the matrix I/O system — C_matrixio_test","text":"","code":"C_matrixio_test(args_input)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_matrixio_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the matrix I/O system — C_matrixio_test","text":"args_input Input argument list","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sparse matrix inverse — C_qinv","title":"Compute sparse matrix inverse — C_qinv","text":"Compute sparse matrix inverse","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sparse matrix inverse — C_qinv","text":"","code":"C_qinv(AA)"},{"path":"https://inlabru-org.github.io/fmesher/reference/C_qinv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sparse matrix inverse — C_qinv","text":"AA sparse matrix","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — .globeproj.types","text":"","code":".globeproj.types(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — .globeproj.types","text":"x globeproj object. ... used.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — .globeproj.types","text":"vector names avaliable projection types; \"longlat\", \"mollweide\", \"hammer\", \"orthocyl\", \"lambert\", \"gall-peters\"","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/dot-globeproj.types.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — .globeproj.types","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coordinate reference system object — fm_CRS","title":"Create a coordinate reference system object — fm_CRS","text":"Creates either CRS object inla.CRS object, describing coordinate reference system","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"fm_CRS(...)  # S3 method for crs fm_CRS(x, ...)  # S3 method for fm_crs fm_CRS(x, ...)  # S3 method for Spatial fm_CRS(x, ...)  # S3 method for inla.CRS fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sf fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sfc fm_CRS(x, ..., crsonly = FALSE)  # S3 method for sfg fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.mesh fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.lattice fm_CRS(x, ..., crsonly = FALSE)  # S3 method for inla.segment fm_CRS(x, ..., crsonly = FALSE)  # S3 method for CRS fm_CRS(x, oblique = NULL, ...)  # S3 method for default fm_CRS(   projargs = NULL,   doCheckCRSArgs = NULL,   args = NULL,   oblique = NULL,   SRS_string = NULL,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coordinate reference system object — fm_CRS","text":"... Additional parameters. currently use. x Object convert CRS extract CRS information . crsonly logical; TRUE, remove obliqueinformation forinla.CRSclass objects return pureCRSclass object. Default:FALSE`. oblique Vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section . projargs Either 1) projection argument string suitable input sp::CRS, 2) existing CRS object, 3) shortcut reference string predefined projection; run names(fm_wkt_predef()) valid predefined projections. doCheckCRSArgs ignored. args optional list name/value pairs add /override PROJ4 arguments projargs.  name=value converted \"+name=value\", name=NA converted \"+name\". SRS_string WKT2 string defining coordinate system; see sp::CRS. takes precedence projargs.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a coordinate reference system object — fm_CRS","text":"Either sp::CRS object inla.CRS object, depending coordinate reference system described parameters can expressed pure sp::CRS object . S3 inla.CRS object list, usually (necessarily) containing least one element: crs basic sp::CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a coordinate reference system object — fm_CRS","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counterclockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a coordinate reference system object — fm_CRS","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRS_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a coordinate reference system object — fm_CRS","text":"","code":"crs1 <- fm_CRS(\"longlat_globe\") crs2 <- fm_CRS(\"lambert_globe\") crs3 <- fm_CRS(\"mollweide_norm\") crs4 <- fm_CRS(\"hammer_globe\") crs5 <- fm_CRS(\"sphere\") crs6 <- fm_CRS(\"globe\")"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":null,"dir":"Reference","previous_headings":"","what":"Show expanded CRS arguments — fm_CRS_as_list","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Wrappers sp::CRS inla.CRS objects handle coordinate reference system argument string. methods longer used PROJ6/rgdal3; see fm_wkt() new approach.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"fm_CRS_as_list(x, ...)  fm_list_as_CRS(x, ...)  fm_CRSargs(x, ...)  fm_list_as_CRSargs(x, ...)  fm_CRSargs_as_list(x, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"x sp::CRS inla.CRS object (fm_CRSargs fm_CRS_as_list), character string (fm_CRSargs_as_list), list (fm_list_as_CRS fm_list_as_CRSargs). ... Additional arguments passed methods.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"fm_CRSargs fm_list_as_CRSargs, character string PROJ.4 arguments. fm_CRS_as_list fm_CRSargs_as_list, list name/value pairs. fm_list_as_CRS, CRS inla.CRS object. fm_list_as_CRSargs(), CRS proj4 string name=value pair list fm_CRSargs_as_list(), list name=value pairs CRS proj4 string","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_CRSargs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show expanded CRS arguments — fm_CRS_as_list","text":"","code":"crs0 <- fm_CRS(\"longlat\") #> Warning: Use of old predefined projection 'longlat' is deprecated. Converting to 'longlat_norm' p4s <- fm_CRSargs(crs0) #> Warning: `fm_CRSargs()` was deprecated in fmesher 2.7.1. #> ℹ No replacement available. lst <- fm_CRSargs_as_list(p4s) crs1 <- fm_list_as_CRS(lst) #> Warning: 'fm_CRS' should be given a SRS_string for PROJ6 or a known keyword for a #>   predefined string given in projargs. Using 'fm_crs()' workaround. lst$a <- 2 crs2 <- fm_CRS(p4s, args = lst) #> Warning: 'fm_CRS' should be given a SRS_string for PROJ6 or a known keyword for a #>   predefined string given in projargs. Using 'fm_crs()' workaround. print(fm_CRSargs(crs0)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_CRSargs(crs1)) #> [1] \"+proj=longlat +R=1 +no_defs\" print(fm_CRSargs(crs2)) #> [1] \"+proj=longlat +R=1 +no_defs\""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as.html","id":null,"dir":"Reference","previous_headings":"","what":"Coercion methods to and from meshes — fm_as_sp_crs","title":"Coercion methods to and from meshes — fm_as_sp_crs","text":"Coercion methods meshes","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coercion methods to and from meshes — fm_as_sp_crs","text":"","code":"fm_as_sp_crs(x, ...)  fm_as_sfc(x)  fm_as_inla_mesh_segment(...)  fm_as_inla_mesh(...)  # S3 method for inla.mesh fm_as_sfc(x, ...)  # S3 method for sfc_MULTIPOLYGON fm_as_inla_mesh(x, ...)  # S3 method for sfc_POINT fm_as_inla_mesh_segment(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, ...)  # S3 method for sfc_LINESTRING fm_as_inla_mesh_segment(x, join = TRUE, grp = NULL, reverse = FALSE, ...)  # S3 method for sfc_POLYGON fm_as_inla_mesh_segment(x, join = TRUE, grp = NULL, ...)  # S3 method for sf fm_as_inla_mesh_segment(x, reverse = FALSE, grp = NULL, is.bnd = TRUE, ...)  # S3 method for sf fm_as_inla_mesh(x, ...)  fm_sp2segment(sp, ...)  # S3 method for matrix fm_as_inla_mesh_segment(   sp,   reverse = FALSE,   grp = NULL,   is.bnd = FALSE,   crs = NULL,   closed = FALSE,   ... )  # S3 method for SpatialPoints fm_as_inla_mesh_segment(   sp,   reverse = FALSE,   grp = NULL,   is.bnd = TRUE,   closed = FALSE,   ... )  # S3 method for SpatialPointsDataFrame fm_as_inla_mesh_segment(sp, ...)  # S3 method for Line fm_as_inla_mesh_segment(sp, reverse = FALSE, grp = NULL, crs = NULL, ...)  # S3 method for Lines fm_as_inla_mesh_segment(sp, join = TRUE, grp = NULL, crs = NULL, ...)  # S3 method for SpatialLines fm_as_inla_mesh_segment(sp, join = TRUE, grp = NULL, ...)  # S3 method for SpatialLinesDataFrame fm_as_inla_mesh_segment(sp, ...)  # S3 method for SpatialPolygons fm_as_inla_mesh_segment(sp, join = TRUE, grp = NULL, ...)  # S3 method for SpatialPolygonsDataFrame fm_as_inla_mesh_segment(sp, ...)  # S3 method for Polygons fm_as_inla_mesh_segment(sp, join = TRUE, crs = NULL, grp = NULL, ...)  # S3 method for Polygon fm_as_inla_mesh_segment(sp, crs = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coercion methods to and from meshes — fm_as_sp_crs","text":"x object coerced/transformed/converted another class ... Arguments passed methods reverse logical; TRUE, reverse order input points. Default FALSE grp non-null, integer vector grouping labels one segment. Default NULL .bnd logical; TRUE, set boundary flag segments. Default TRUE join logical; TRUE, join input segments common vertices. Default TRUE sp sp style S4 object converted crs crs object closed logical; whether treat point sequence closed polygon. Default: FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coercion methods to and from meshes — fm_as_sp_crs","text":"fm_as_sfc: sfc_MULTIPOLYGON object fm_as_inla_mesh: inla.mesh mesh object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinate reference system object — fm_crs","title":"Obtain coordinate reference system object — fm_crs","text":"Obtain sf::crs fm_crs object spatial object, convert crs information construct new sf::crs object.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinate reference system object — fm_crs","text":"","code":"fm_crs(x, ..., crsonly = FALSE)  fm_crs_oblique(x)  fm_crs_oblique(x) <- value  # S3 method for fm_crs print(x, ...)  # S3 method for default fm_crs(x, ..., crsonly = FALSE)  # S3 method for fm_crs st_crs(x, ...)  # S3 method for fm_crs $(x, name)  # S3 method for fm_crs fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.CRS fm_crs(x, ..., crsonly = FALSE)  # S3 method for character fm_crs(x, ..., crsonly = FALSE)  # S3 method for Spatial fm_crs(x, ..., crsonly = FALSE)  # S3 method for SpatVector fm_crs(x, ..., crsonly = FALSE)  # S3 method for SpatRaster fm_crs(x, ..., crsonly = FALSE)  # S3 method for sf fm_crs(x, ..., crsonly = FALSE)  # S3 method for sfc fm_crs(x, ..., crsonly = FALSE)  # S3 method for sfg fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.lattice fm_crs(x, ..., crsonly = FALSE)  # S3 method for inla.mesh.segment fm_crs(x, ..., crsonly = FALSE)  fm_wkt_predef()"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinate reference system object — fm_crs","text":"x Object convert crs  extract crs information . character, string suitable sf::st_crs(x), name predefined wkt string ``names(fm_wkt_predef())`. ... Additional parameters. currently use. crsonly logical; TRUE, remove oblique information fm_crs class objects return pure crs class object. Default: FALSE. value Vector length 4 rotation angles (degrees) oblique projection, values defaulting zero. values indicate (longitude, latitude, orientation, orbit), explained Details section . name element name","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinate reference system object — fm_crs","text":"Either sf::crs object fm_crs object, depending coordinate reference system described parameters can expressed pure crs object . crs object (sf::st_crs()) fm_crs object. S3 fm_crs object list elements crs oblique. fm_wkt_predef returns WKT2 string defining projection","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain coordinate reference system object — fm_crs","text":"first two elements oblique vector (longitude, latitude) coordinates oblique centre point. third value (orientation) counterclockwise rotation angle observer looking centre point outside sphere. fourth value quasi-longitude (orbit angle) rotation along oblique observers equator. Simple oblique: oblique=c(0, 45) Polar: oblique=c(0, 90) Quasi-transversal: oblique=c(0, 0, 90) Satellite orbit viewpoint: oblique=c(lon0-time*v1, 0, orbitangle, orbit0+time*v2), lon0 longitude satellite orbit crosses equator time=0, satellite angle orbit0 along orbit.  orbital angle relative equatorial plane orbitangle, v1 v2 angular velocities planet satellite, respectively. Note \"forward\" satellite's point view \"right\" projection. oblique[2] oblique[3] non-zero, resulting projection correct perfect spheres.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Obtain coordinate reference system object — fm_crs","text":"st_crs(fm_crs): st_crs(x, ...) equivalent fm_crs(x, ..., crsonly = TRUE) x fm_crs object. $: fm_crs object x, x$name calls accessor method crs object inside . name \"crs\", internal crs object returned. name \"oblique\", internal oblique angle parameter vector returned.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Obtain coordinate reference system object — fm_crs","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain coordinate reference system object — fm_crs","text":"","code":"crs1 <- fm_crs(\"longlat_globe\") crs2 <- fm_crs(\"lambert_globe\") crs3 <- fm_crs(\"mollweide_norm\") crs4 <- fm_crs(\"hammer_globe\") crs5 <- fm_crs(\"sphere\") crs6 <- fm_crs(\"globe\") if (FALSE) { names(fm_wkt_predef()) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Handling CRS/WKT — fm_wkt_is_geocent","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"Get set CRS object WKT string properties.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"","code":"fm_wkt_is_geocent(wkt)  fm_crs_is_geocent(crs)  fm_wkt_get_ellipsoid_radius(wkt)  fm_crs_get_ellipsoid_radius(crs)  fm_ellipsoid_radius(x)  # S3 method for default fm_ellipsoid_radius(x)  # S3 method for character fm_ellipsoid_radius(x)  fm_wkt_set_ellipsoid_radius(wkt, radius)  fm_ellipsoid_radius(x) <- value  # S3 method for character fm_ellipsoid_radius(x) <- value  # S3 method for CRS fm_ellipsoid_radius(x) <- value  # S3 method for inla.CRS fm_ellipsoid_radius(x) <- value  # S3 method for crs fm_ellipsoid_radius(x) <- value  # S3 method for fm_crs fm_ellipsoid_radius(x) <- value  fm_crs_set_ellipsoid_radius(crs, radius)  fm_wkt_unit_params()  fm_wkt_get_lengthunit(wkt)  fm_wkt_set_lengthunit(wkt, unit, params = NULL)  fm_crs_get_lengthunit(crs)  fm_crs_set_lengthunit(crs, unit)  fm_length_unit(x)  # S3 method for default fm_length_unit(x)  # S3 method for character fm_length_unit(x)  fm_length_unit(x) <- value  # S3 method for character fm_length_unit(x) <- value  # S3 method for CRS fm_length_unit(x) <- value  # S3 method for inla.CRS fm_length_unit(x) <- value  # S3 method for crs fm_length_unit(x) <- value  # S3 method for fm_crs fm_length_unit(x) <- value  fm_wkt(crs)  fm_crs_get_wkt(crs)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"wkt WKT2 character string crs sp::CRS inla.CRS object x crs object extract value assign values radius numeric; new radius value value Value assign unit character, name unit. Supported names \"metre\", \"kilometre\", aliases \"meter\", \"m\", International metre\", \"kilometer\", \"km\", defined fm_wkt_unit_params params argument. (legacy PROJ4 use, \"m\" \"km\" supported) params Length unit definitions, list format produced fm_wkt_unit_params(), Default: NULL, invokes fm_wkt_unit_params()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"fm_wkt_unit_params, list named unit definitions fm_wkt_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. fm_wkt_set_lengthunit, WKT2 string altered length units. Note length unit ellipsoid radius unchanged. fm_crs_get_lengthunit, list length units used wkt string, excluding ellipsoid radius unit. (legacy PROJ4 code, raw units proj4string returned, present.) fm_length_unit<-, crs object altered length units. Note length unit ellipsoid radius unchanged. fm_wkt, WKT2 string.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_crs_wkt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handling CRS/WKT — fm_wkt_is_geocent","text":"","code":"if (FALSE) { c1 <- fm_CRS(\"globe\") fm_crs_get_lengthunit(c1) c2 <- fm_crs_set_lengthunit(c1, \"km\") fm_crs_get_lengthunit(c2) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two CRS objects are identical — fm_identical_CRS","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"Check two CRS objects identical","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"","code":"fm_identical_CRS(crs0, crs1, crsonly = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_identical_CRS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two CRS objects are identical — fm_identical_CRS","text":"crs0, crs1 Two sp::CRS inla.CRS objects compared. crsonly logical. TRUE crs0 crs1 inla.CRS objects, extract compare sp::CRS objects. Default: FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse partial inverse — fm_qinv","title":"Sparse partial inverse — fm_qinv","text":"Sparse partial inverse","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse partial inverse — fm_qinv","text":"","code":"fm_qinv(A)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_qinv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse partial inverse — fm_qinv","text":"symmetric matrix","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Load INLA safely for examples and tests — fm_safe_inla","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"Loads INLA package requireNamespace(\"INLA\", quietly = TRUE), optionally checks sets multicore num.threads INLA option.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"","code":"fm_safe_inla(multicore = NULL, quietly = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"multicore logical; TRUE, multiple cores allowed, INLA num.threads option checked altered. FALSE, forces num.threads=\"1:1\". Default: NULL, checks running testthat non-interactively, case sets multicore=FALSE, otherwise TRUE. quietly logical; TRUE, prints diagnostic messages. Default: FALSE.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"logical; TRUE INLA loaded safely, otherwise FALSE","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_safe_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load INLA safely for examples and tests — fm_safe_inla","text":"","code":"if (FALSE) { if (fm_safe_inla()) {   # Run inla dependent calculations } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Object coordinate transformation — fm_transform","title":"Object coordinate transformation — fm_transform","text":"Handle transformation various inla objects according coordinate reference systems crs (sf::st_crs()), fm_crs,¬sp::CRS INLA::inla.CRS class.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object coordinate transformation — fm_transform","text":"","code":"fm_transform(x, crs = fm_crs(x), ...)  # S3 method for default fm_transform(x, crs = fm_crs(x), ..., crs0 = NULL)  # S3 method for matrix fm_transform(x, crs = NULL, ..., passthrough = FALSE, crs0 = NULL)  # S3 method for list fm_transform(x, crs = fm_crs(x), ...)  # S3 method for sf fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for sfc fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for sfg fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for Spatial fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)  # S3 method for inla.mesh fm_transform(x, ..., crs = fm_crs(x), passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for inla.mesh.lattice fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE, crs0 = fm_crs(x))  # S3 method for inla.mesh.segment fm_transform(x, crs = fm_crs(x), ..., passthrough = FALSE)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fm_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object coordinate transformation — fm_transform","text":"x object transformed current CRS new CRS crs target crs object ... Potential additional arguments crs0 source crs object spatial classes without crs information passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. Use care!","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in fmesher — fm_has_PROJ6","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"functions still attempt job, removed future version.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"","code":"fm_has_PROJ6()  fm_not_for_PROJ6(fun = NULL)  fm_not_for_PROJ4(fun = NULL)  fm_fallback_PROJ6(fun = NULL)  fm_requires_PROJ6(fun = NULL)  fm_sp_get_crs(x)  fm_spTransform(x, ...)  # S3 method for default fm_spTransform(x, crs0 = NULL, crs1 = NULL, passthrough = FALSE, ...)  # S3 method for SpatialPoints fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for SpatialPointsDataFrame fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.lattice fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh.segment fm_spTransform(x, CRSobj, passthrough = FALSE, ...)  # S3 method for inla.mesh fm_spTransform(x, CRSobj, passthrough = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"fun name function requires PROJ6. Default: NULL, uses name calling function. x object transformed current CRS new CRS ... Usually passed methods crs0 source sp::CRS inla.CRS object crs1 target sp::CRS inla.CRS object passthrough Default FALSE. Setting TRUE allows objects CRS information passed without transformation. CRSobj target sp::CRS inla.CRS object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"CRS object, NULL valid CRS identified","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"function convenience method workaround PROJ4/PROJ6 differences, lack crs extraction method Spatial objects. newer code, use fm_crs() instead, returns crs objects, use fm_as_sp_crs() convert old style sp::CRS objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"fm_has_PROJ6(): Detect whether PROJ6 available fm_not_for_PROJ6(): fm_not_for_PROJ6 called warn using old PROJ4 features even though PROJ6 available fm_not_for_PROJ4(): fm_not_for_PROJ4 called give error calling methods available PROJ6 fm_fallback_PROJ6(): Called warn falling back using old PROJ4 methods PROJ6 method implemented fm_requires_PROJ6(): Called give error PROJ6 required available fm_sp_get_crs(): Wrapper CRS(projargs) (PROJ4) CRS(wkt) sp::Spatial objects. fm_spTransform(): Handle transformation various inla objects according coordinate reference systems sp::CRS INLA::inla.CRS class. fm_spTransform(default): default method handles low level transformation raw coordinates.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deprecated functions in fmesher — fm_has_PROJ6","text":"","code":"if (FALSE) { if (interactive()) {   s <- sp::SpatialPoints(matrix(1:6, 3, 2), proj4string = fm_CRS(\"sphere\"))   fm_sp_get_crs(s) } }"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":null,"dir":"Reference","previous_headings":"","what":"Barycentric coordinate computation — fmesher_bary","title":"Barycentric coordinate computation — fmesher_bary","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"fmesher_bary(loc, mesh_loc, mesh_tv, options)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barycentric coordinate computation — fmesher_bary","text":"loc numeric matrix; initial points include options list triangulation options tv 3-column integer matrix 0-based vertex indices triangle boundary 2-column integer matrix 0-based vertex indices boundary edge constrain interior 2-column integer matrix 0-based vertex indices interior edge constraint boundary_grp integer vector group lables interior_grp integer vector group labels","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_bary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barycentric coordinate computation — fmesher_bary","text":"","code":"m <- fmesher_rcdt(list(), matrix(0, 1, 2))"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Globe points — fmesher_globe_points","title":"Globe points — fmesher_globe_points","text":"Create points globe","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Globe points — fmesher_globe_points","text":"","code":"fmesher_globe_points(globe)"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_globe_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Globe points — fmesher_globe_points","text":"globe integer; number edge subdivision segments, 1 higher","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"(...)","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"fmesher_rcdt(   options,   loc,   tv = NULL,   boundary = NULL,   interior = NULL,   boundary_grp = NULL,   interior_grp = NULL )"},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"options list triangulation options loc numeric matrix; initial points include tv 3-column integer matrix 0-based vertex indices triangle boundary 2-column integer matrix 0-based vertex indices boundary edge constrain interior 2-column integer matrix 0-based vertex indices interior edge constraint boundary_grp integer vector group lables interior_grp integer vector group labels","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/fmesher_rcdt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refined Constrained Delaunay Triangulation — fmesher_rcdt","text":"","code":"m <- fmesher_rcdt(list(), matrix(0, 1, 2))"},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — globeproj","text":"","code":"globeproj(type = NULL, orient = NULL, xlim = NULL, ylim = NULL, scale = NULL)"},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — globeproj","text":"type Projection type, see .globeproj.types() orient long,lat,rotation xlim x-axis limits ylim y-axis limits scale x- y- scaling factors","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — globeproj","text":"B","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — globeproj","text":"Finn Lindgren","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — graticule.globeproj","text":"","code":"# S3 method for globeproj graticule(x, n = c(24, 12), add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — graticule.globeproj","text":"x globeproj object n number graticules (n-long, n-lat) compute add logical; TRUE, add existing plot .plot logical; TRUE, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/graticule.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — graticule.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Projection axis limits — limits.globeproj","title":"Projection axis limits — limits.globeproj","text":"Calculates projection axis limits","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projection axis limits — limits.globeproj","text":"","code":"# S3 method for globeproj limits(x, loc = NULL, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projection axis limits — limits.globeproj","text":"x globeproj object loc Coordinates mapped. ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projection axis limits — limits.globeproj","text":"list: xlim X axis limits map domain ylim Y axis limits map domain","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/limits.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Projection axis limits — limits.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit test helpers — local_testthat","title":"Unit test helpers — local_testthat","text":"Local helper functions package unit tests","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit test helpers — local_testthat","text":"","code":"local_testthat_assign(x, values, envir = parent.frame())  local_fm_safe_inla(multicore = FALSE, quietly = TRUE, envir = parent.frame())  local_fm_testthat_setup(envir = parent.frame())"},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit test helpers — local_testthat","text":"x character; Name variable assign values object assign x envir environment exit handlers multicore logical; TRUE, multiple cores allowed, INLA num.threads option checked altered. Default: FALSE, multicore allowed (used examples unit tests). quietly logical; TRUE, prints diagnostic messages. message always printed INLA num.threads option altered, regardless quietly argument. Default: TRUE.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/local_testthat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Unit test helpers — local_testthat","text":"local_testthat_assign(): Assign local variable. Useful easy cleanup global workspace withr::deferred_run() running tests interactively. local_fm_safe_inla(): Tests set num.threads = \"1:1\" ensure within-system repeatability calling local_fm_safe_inla(); see also fm_safe_inla() local_fm_testthat_setup(): Initialise environment tests. called either top testfile, inside tests. call local_fm_safe_inla(), since may invoke skip called inside test relies INLA.","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — outline.globeproj","text":"","code":"# S3 method for globeproj outline(x, add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — outline.globeproj","text":"x globeproj object add logical; TRUE, add existing plot .plot logical; try, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/outline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — outline.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a projected PolySet — plot_PolySet","title":"Plot a projected PolySet — plot_PolySet","text":"Plot projected PolySet","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"plot_PolySet(x, projection, add = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a projected PolySet — plot_PolySet","text":"x PolySet (see PBSmapping) projection globeproj objcet add logical; TRUE, add existing plot ... Additional parameters passed sp::plot","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_PolySet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a projected PolySet — plot_PolySet","text":"","code":"if (FALSE) { data(worldLL, package = \"PBSmapping\") plot_PolySet(worldLL, globeproj(\"longlat\"), add = FALSE) }"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a globeproj object — plot_globeproj","title":"Plot a globeproj object — plot_globeproj","text":"Plot globeproj object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a globeproj object — plot_globeproj","text":"","code":"plot_globeproj(   x,   xlim = NULL,   ylim = NULL,   outline = TRUE,   graticule = c(24, 12),   tissot = c(12, 6),   asp = 1,   add = FALSE,   ... )"},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a globeproj object — plot_globeproj","text":"x globeproj object xlim, ylim x- y-axis limits outline logical graticule number graticules (n-long, n-lat) compute tissot number Tissot indicatrices (n-long, n-lat) compute asp aspect ratio. Default = 1 add logical; TRUE, add existing plot. Default: FALSE ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a globeproj object — plot_globeproj","text":"Nothing","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a globeproj object — plot_globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/plot_globeproj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a globeproj object — plot_globeproj","text":"","code":"proj <- globeproj(\"moll\", orient = c(0, 0, 45)) plot_globeproj(proj, graticule = c(24, 12), add = FALSE, asp = 1, lty = 2, lwd = 0.5)"},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — project.globeproj","text":"","code":"# S3 method for globeproj project(x, loc, inverse = FALSE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — project.globeproj","text":"x globeproj object loc Coordinates mapped. inverse logical ... Additional parameters passed methods","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A — project.globeproj","text":"B","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/project.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — project.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for ","title":"Check for ","text":"Check \"XYZ\", \"XYM\" \"XYZM\" sfg classes","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for ","text":"","code":"st_check_dim(sfc)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for ","text":"sfc sfc object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for ","text":"LOGICAL indicating sfg element sfc object class \"XYZ\", \"XYM\" \"XYZM\". Internal function used check 3 4 dimensional objects.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"seems though st_polygon check . now implements basic check disjoint regions using st_within()","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"","code":"st_check_polygon(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_check_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check sfg polygon satisfies standards for POLYGON simple features — st_check_polygon","text":"LOGICAL; TRUE sfg holes entirely inside outer ring, disjoint, otherwise FALSE. FALSE, attribute Message set character vector describing detected reasons.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate signed area for polygon — st_signed_area","title":"Calculate signed area for polygon — st_signed_area","text":"Calculate signed area polygon","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate signed area for polygon — st_signed_area","text":"","code":"st_signed_area(sfg)"},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate signed area for polygon — st_signed_area","text":"sfg POLYGON sfg object","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate signed area for polygon — st_signed_area","text":"Returns signed area.  Negative values indicate anti-clockwise winding direction.","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/st_signed_area.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate signed area for polygon — st_signed_area","text":"Andrew Seaton Andrew.Seaton.2@glasgow.ac.uk Finn Lindgren finn.lindgren@gmail.com","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — tissot.globeproj","text":"","code":"# S3 method for globeproj tissot(x, n = c(12, 6), add = FALSE, do.plot = TRUE, ...)"},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — tissot.globeproj","text":"x globeproj object n number Tissot indicatrices (n-long, n-lat) compute add logical; TRUE, add existing plot .plot logical; TRUE, plotting ... Additional parameters passed methods","code":""},{"path":[]},{"path":"https://inlabru-org.github.io/fmesher/reference/tissot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A — tissot.globeproj","text":"Finn Lindgren","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal WKT handling — fm_wkt_as_wkt_tree","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"Conversion WKT tree representation","code":""},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"","code":"fm_wkt_as_wkt_tree(x, ...)  fm_wkt_tree_as_wkt(x, pretty = FALSE, ...)  fm_wkt_tree_get_item(x, item, duplicate = 1)  fm_wkt_tree_set_item(x, item_tree, duplicate = 1)"},{"path":"https://inlabru-org.github.io/fmesher/reference/wkt_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal WKT handling — fm_wkt_as_wkt_tree","text":"x WKT2 string, wkt_tree list structure ... Unused pretty logical; TRUE, use pretty formatting. Default: FALSE item character vector item labels identifying parameter item entry. duplicate items one match, duplicate indicates index number desired version. Default: 1 item_tree item tree identifying parameter item entry","code":""},{"path":"https://inlabru-org.github.io/fmesher/news/index.html","id":"fmesher-development-version","dir":"Changelog","previous_headings":"","what":"fmesher (development version)","title":"fmesher (development version)","text":"Add basic Rcpp input/output conversion code","code":""},{"path":"https://inlabru-org.github.io/fmesher/news/index.html","id":"fmesher-0069000","dir":"Changelog","previous_headings":"","what":"fmesher 0.0.6.9000","title":"fmesher 0.0.6.9000","text":"Added NEWS.md file track changes package.","code":""}]
